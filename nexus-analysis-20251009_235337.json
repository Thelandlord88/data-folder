{
  "timestamp": "2025-10-09T23:53:37.467196",
  "repository_path": "/workspaces/data-folder",
  "summary": {
    "total_files": 770,
    "total_duplicates": 142,
    "total_dependencies": 87
  },
  "files": {
    "NEXUS_V3_MIGRATION_COMPLETE.md": {
      "path": "NEXUS_V3_MIGRATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/NEXUS_V3_MIGRATION_COMPLETE.md",
      "extension": ".md",
      "size": 3161,
      "name": "NEXUS_V3_MIGRATION_COMPLETE.md",
      "directory": ".",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "46ea50ae60850648f9a14df05021cd2f",
      "header_count": 10,
      "headers": [
        "\u2705 NEXUS v3 Migration Complete",
        "\ud83c\udf89 Migration Summary",
        "What Changed",
        "\ud83d\udcc2 New Structure",
        "\u2705 Verification",
        "\ud83d\uddd1\ufe0f Removed",
        "\ud83d\udcca System Comparison",
        "\ud83d\ude80 Ready for Production",
        "\ud83d\udcdd Next Steps",
        "\ud83c\udfaf Key Files"
      ],
      "code_blocks": 6,
      "links": []
    },
    "install-nexus.sh": {
      "path": "install-nexus.sh",
      "full_path": "/workspaces/data-folder/install-nexus.sh",
      "extension": ".sh",
      "size": 399312,
      "name": "install-nexus.sh",
      "directory": ".",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "750268002581f948c38028e35ba2b241"
    },
    "INSTALL-NEXUS-README.md": {
      "path": "INSTALL-NEXUS-README.md",
      "full_path": "/workspaces/data-folder/INSTALL-NEXUS-README.md",
      "extension": ".md",
      "size": 4621,
      "name": "INSTALL-NEXUS-README.md",
      "directory": ".",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "578fd7ecf65a53f5b6835ca05f7e9979",
      "header_count": 27,
      "headers": [
        "\ud83d\udce6 NEXUS v3.0 - Single-File Installer",
        "\ud83d\udce5 Download",
        "\ud83d\ude80 Quick Install",
        "One-Line Installation",
        "Custom Installation Directory",
        "\ud83d\udccb What Gets Installed",
        "\u2705 Requirements",
        "\ud83d\udd0d What the Installer Does",
        "\ud83d\udcd6 After Installation",
        "Verify System"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexus2/nexus2/README.md": {
      "path": "nexus2/nexus2/README.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/README.md",
      "extension": ".md",
      "size": 3232,
      "name": "README.md",
      "directory": "nexus2/nexus2",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a914f352e6c4943959e939930bbb3b22",
      "header_count": 12,
      "headers": [
        "NEXUS Intelligence System",
        "\ud83c\udfaf Overview",
        "\ud83d\ude80 Quick Start",
        "\ud83d\udcca System Status",
        "\ud83c\udfad Available Personalities",
        "\ud83d\udd0c API Usage",
        "Enhance with Personality",
        "Check System Status",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcd6 Documentation"
      ],
      "code_blocks": 14,
      "links": [
        {
          "text": "Comprehensive Report",
          "url": "docs/COMPREHENSIVE_REPORT.md"
        },
        {
          "text": "System Architecture",
          "url": "docs/SYSTEM_ARCHITECTURE.md"
        },
        {
          "text": "Runtime Documentation",
          "url": "runtime/README.md"
        }
      ]
    },
    "nexus2/nexus2/NEXUS2_README.md": {
      "path": "nexus2/nexus2/NEXUS2_README.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/NEXUS2_README.md",
      "extension": ".md",
      "size": 4011,
      "name": "NEXUS2_README.md",
      "directory": "nexus2/nexus2",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "eb7af6a27804e1a8d92fec78d9ade171",
      "header_count": 18,
      "headers": [
        "NEXUS2 - Complete Archive \ud83e\udde0\u2728",
        "\ud83d\udcca Archive Statistics",
        "\ud83d\udcc1 Directory Structure",
        "**Core Directories:**",
        "\ud83d\ude80 Quick Start",
        "\ud83e\uddec Key Components",
        "**19 AI Personalities:**",
        "**System Capabilities:**",
        "\ud83d\udcda Documentation Index",
        "**Primary Documentation:**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus2/nexus2/INDEX.md": {
      "path": "nexus2/nexus2/INDEX.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/INDEX.md",
      "extension": ".md",
      "size": 13140,
      "name": "INDEX.md",
      "directory": "nexus2/nexus2",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bf28d07ac62abc04e9f8f0a3108bee5a",
      "header_count": 3,
      "headers": [
        "NEXUS2 - Complete Archive",
        "Directory Structure",
        "All Markdown Files"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_PHASE1_COMPLETE.md": {
      "path": "nexus2/nexus2/docs/NEXUS_PHASE1_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_PHASE1_COMPLETE.md",
      "extension": ".md",
      "size": 6630,
      "name": "NEXUS_PHASE1_COMPLETE.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "da24d76f7be24406391122b281b28208",
      "header_count": 26,
      "headers": [
        "NEXUS Personality System Enhancement - Phase 1 Complete \u2705",
        "\ud83c\udf89 What We Accomplished",
        "**Problem Solved:**",
        "**Solution Implemented:**",
        "\ud83d\udcca Results",
        "**Before:**",
        "**After:**",
        "**Improvement:**",
        "\ud83e\uddec Traits Added",
        "**Daedalus (3 traits):**"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_PHASE3_COMPLETE.md": {
      "path": "nexus2/nexus2/docs/NEXUS_PHASE3_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_PHASE3_COMPLETE.md",
      "extension": ".md",
      "size": 15029,
      "name": "NEXUS_PHASE3_COMPLETE.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1c8ae08edd354ae59084f79215443f12",
      "header_count": 63,
      "headers": [
        "NEXUS Phase 3 Complete: Multi-Personality Composition \ud83c\udfa8\u2705",
        "\ud83c\udf89 WE DID IT!",
        "\ud83d\ude80 The Achievement",
        "**What We Built:**",
        "**Code Added:**",
        "\ud83d\udcca Test Results",
        "**Test 1: Complex Architecture Request**",
        "**Test 2: Security Audit Request**",
        "**Test 3: UI + Performance Request**",
        "\ud83e\uddec How It Works"
      ],
      "code_blocks": 30,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_INITIAL_FINDINGS.md": {
      "path": "nexus2/nexus2/docs/NEXUS_INITIAL_FINDINGS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_INITIAL_FINDINGS.md",
      "extension": ".md",
      "size": 10394,
      "name": "NEXUS_INITIAL_FINDINGS.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3523ad247f1a9fdf31b880dbce579ef1",
      "header_count": 44,
      "headers": [
        "NEXUS Brain Investigation - Initial Findings \ud83e\udde0\ud83d\udd2c",
        "\ud83c\udfaf Executive Summary",
        "\u2705 Confirmed Strengths",
        "**1. AUTO Mode - 100% Accuracy on Clear Signals**",
        "**2. COMPOSE Mode - Intelligent Multi-Personality Synthesis**",
        "Test Case: Explicit Security Request",
        "**3. Synergy Scores - Consistent & Meaningful**",
        "\u26a0\ufe0f Discovered Quirks & Opportunities",
        "**Quirk 1: Keyword Sensitivity in COMPOSE Mode**",
        "Test Case: Ambiguous Audit Request"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_PHASE2_COMPLETE.md": {
      "path": "nexus2/nexus2/docs/NEXUS_PHASE2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_PHASE2_COMPLETE.md",
      "extension": ".md",
      "size": 9828,
      "name": "NEXUS_PHASE2_COMPLETE.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "713257fca6fc295991fdea4adfe6c163",
      "header_count": 44,
      "headers": [
        "NEXUS Phase 2 Complete: Engine Integration \u2705",
        "\ud83c\udf89 Mission Accomplished",
        "\ud83d\udcca Results",
        "**Before Phase 2:**",
        "**After Phase 2:**",
        "\ud83e\uddec What Was Built",
        "**1. TraitIndexer Class**",
        "**2. TraitCompositionBridge Class**",
        "\ud83d\udd27 Runtime Integration",
        "**Modified Files:**"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexus2/nexus2/docs/MANIFEST.md": {
      "path": "nexus2/nexus2/docs/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/MANIFEST.md",
      "extension": ".md",
      "size": 11008,
      "name": "MANIFEST.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6bfcacbcc84c5172a8f1e76368763b1",
      "header_count": 46,
      "headers": [
        "NEXUS Shipping Package - File Manifest \ud83d\udce6",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcca Component Details",
        "**Core Runtime Files (3)**",
        "**Personality Profiles (19)**",
        "**Response Generators (6)**",
        "**Documentation (7 files)**",
        "\ud83c\udfaf Key Statistics",
        "**Code Metrics:**",
        "**Capability Metrics:**"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_EXECUTIVE_SUMMARY.md": {
      "path": "nexus2/nexus2/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "extension": ".md",
      "size": 9892,
      "name": "NEXUS_EXECUTIVE_SUMMARY.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d21228f86df7ddc58c190ab39bfe0b3",
      "header_count": 34,
      "headers": [
        "NEXUS Brain Investigation - Executive Summary \ud83e\udde0\u26a1",
        "\ud83c\udfaf TL;DR",
        "\ud83d\udcca Key Findings",
        "\u2705 **STRENGTHS (What Works Brilliantly)**",
        "1. **AUTO Mode: 100% Accuracy**",
        "2. **COMPOSE Mode: Intelligent Team Assembly**",
        "3. **Synergy Algorithm: Consistent & Meaningful**",
        "4. **Performance: Fast & Reliable**",
        "5. **Trait Coverage: Comprehensive**",
        "\u26a0\ufe0f **OPPORTUNITIES (What Could Be Better)**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus2/nexus2/docs/COMPREHENSIVE_REPORT.md": {
      "path": "nexus2/nexus2/docs/COMPREHENSIVE_REPORT.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/COMPREHENSIVE_REPORT.md",
      "extension": ".md",
      "size": 17646,
      "name": "COMPREHENSIVE_REPORT.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ac18ac26631861f450705e3b5dd39b9a",
      "header_count": 81,
      "headers": [
        "NEXUS v1.0 - Comprehensive Repository Analysis",
        "\ud83c\udfaf Executive Summary",
        "Current Status: \u2705 FULLY OPERATIONAL",
        "\ud83d\udce6 Package Overview",
        "Package Statistics",
        "Directory Structure",
        "\ud83e\udde0 System Architecture",
        "Three-Layer Architecture",
        "Layer 1: Runtime System (.mjs) - \u2705 OPERATIONAL",
        "Layer 2: TypeScript Integration (.ts) - \u26a1 AVAILABLE"
      ],
      "code_blocks": 48,
      "links": []
    },
    "nexus2/nexus2/docs/NEXUS_BRAIN_INVESTIGATION.md": {
      "path": "nexus2/nexus2/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "extension": ".md",
      "size": 12159,
      "name": "NEXUS_BRAIN_INVESTIGATION.md",
      "directory": "nexus2/nexus2/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "523d7c12cdfeb34afc41129a0f19219a",
      "header_count": 48,
      "headers": [
        "NEXUS Brain Investigation & Stress Test \ud83e\udde0",
        "\ud83c\udfaf Investigation Plan",
        "**Test Categories:**",
        "\ud83d\udccb Test Suite",
        "**Series 1: Baseline Single-Personality Tests**",
        "Test 1.1: Simple Request (Daedalus)",
        "Test 1.2: Simple Request (Hunter)",
        "**Series 2: AUTO Mode Intelligence Tests**",
        "Test 2.1: Clear Architecture Signal",
        "Test 2.2: Clear Security Signal"
      ],
      "code_blocks": 40,
      "links": []
    },
    "nexus2/nexus2/runtime/PERSONALITY_LOADER_COMPLETE.md": {
      "path": "nexus2/nexus2/runtime/PERSONALITY_LOADER_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/PERSONALITY_LOADER_COMPLETE.md",
      "extension": ".md",
      "size": 9840,
      "name": "PERSONALITY_LOADER_COMPLETE.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "793c4a18e050e7569ad9320bf8a01be9",
      "header_count": 37,
      "headers": [
        "\ud83c\udf89 Production Personality Loader - Implementation Complete!",
        "\ud83d\ude80 What Was Built",
        "Upgraded from JavaScript \u2192 TypeScript \u2705",
        "Key Files Created",
        "\u2728 Features Implemented",
        "\ud83d\udd12 Production-Grade Security",
        "\u26a1 Performance Optimization",
        "\ud83d\udee1\ufe0f Enterprise Resilience",
        "\ud83d\udcca Monitoring & Metrics",
        "\ud83d\udcca Demo Results"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexus2/nexus2/runtime/create-20-personalities.sh": {
      "path": "nexus2/nexus2/runtime/create-20-personalities.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/create-20-personalities.sh",
      "extension": ".sh",
      "size": 2091,
      "name": "create-20-personalities.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "90c4a36c39d5180f78e58f98cb7e903f"
    },
    "nexus2/nexus2/runtime/BOND_CLEANING_CREATIVE_CONCEPTS.md": {
      "path": "nexus2/nexus2/runtime/BOND_CLEANING_CREATIVE_CONCEPTS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/BOND_CLEANING_CREATIVE_CONCEPTS.md",
      "extension": ".md",
      "size": 25149,
      "name": "BOND_CLEANING_CREATIVE_CONCEPTS.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e0cac203256499dd7817cb78dd1b4231",
      "header_count": 52,
      "headers": [
        "\ud83c\udfa8 NEXUS Creative Team: Bond Cleaning Website Reimagined",
        "\ud83e\udde0 CREATIVE TEAM BRAINSTORMING SESSION",
        "**VISIONARY'S Concept Direction:**",
        "**WORDSMITH'S Messaging Strategy:**",
        "**CHROMATIC'S Color Psychology:**",
        "**NARRATIVE'S Story Arc:**",
        "**MUSE'S Creative Spark:**",
        "\ud83c\udfa8 5 CREATIVE CONCEPTS FOR BOND CLEANING WEBSITE",
        "**CONCEPT 1: \"The Sparkle Treatment\"** \u2b50",
        "**CONCEPT 2: \"Before/After Energy\"** \ud83d\udd04"
      ],
      "code_blocks": 38,
      "links": []
    },
    "nexus2/nexus2/runtime/create-deployment-package.sh": {
      "path": "nexus2/nexus2/runtime/create-deployment-package.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/create-deployment-package.sh",
      "extension": ".sh",
      "size": 9339,
      "name": "create-deployment-package.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2a1d8a6e510695081a2b2b310ed88e61"
    },
    "nexus2/nexus2/runtime/add-milestone-to-history.mjs": {
      "path": "nexus2/nexus2/runtime/add-milestone-to-history.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/add-milestone-to-history.mjs",
      "extension": ".mjs",
      "size": 4318,
      "name": "add-milestone-to-history.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9dc7d465b6aeffba10aafb4284e9af73"
    },
    "nexus2/nexus2/runtime/README.md": {
      "path": "nexus2/nexus2/runtime/README.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/README.md",
      "extension": ".md",
      "size": 12786,
      "name": "README.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "56394f8e783675d66137f6bdb5a19c43",
      "header_count": 60,
      "headers": [
        "NEXUS Multi-Personality AI System \ud83e\udde0\u2728",
        "\ud83c\udfaf What is NEXUS?",
        "**Key Features:**",
        "\ud83d\ude80 Quick Start",
        "**Prerequisites:**",
        "**Installation:**",
        "1. Navigate to nexus directory",
        "2. Install dependencies (if any)",
        "3. Start the NEXUS runtime",
        "**Verify It's Running:**"
      ],
      "code_blocks": 32,
      "links": []
    },
    "nexus2/nexus2/runtime/advanced-tests.json": {
      "path": "nexus2/nexus2/runtime/advanced-tests.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/advanced-tests.json",
      "extension": ".json",
      "size": 636,
      "name": "advanced-tests.json",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b9965a62f4ea2ed71967d4b083b46031",
      "json_keys": [
        "tests"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/bulk-create-personalities.mjs": {
      "path": "nexus2/nexus2/runtime/bulk-create-personalities.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/bulk-create-personalities.mjs",
      "extension": ".mjs",
      "size": 3916,
      "name": "bulk-create-personalities.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs/promises",
        "path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "createPersonality",
          "params": "config"
        },
        {
          "name": "team",
          "params": "4 more"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "31ff32e1b27d859234eff4f0855daf1b"
    },
    "nexus2/nexus2/runtime/ENHANCEMENT_HISTORY_STATUS.md": {
      "path": "nexus2/nexus2/runtime/ENHANCEMENT_HISTORY_STATUS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/ENHANCEMENT_HISTORY_STATUS.md",
      "extension": ".md",
      "size": 4468,
      "name": "ENHANCEMENT_HISTORY_STATUS.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e97ab60bd0264ec934e948efa3916d53",
      "header_count": 12,
      "headers": [
        "\u2705 NEXUS Enhancement History - Status Confirmed",
        "\ud83d\udcca Enhancement History System Status",
        "\u2705 **System Active and Recording**",
        "\ud83d\udcdd What's Being Tracked",
        "\ud83d\udd0d Recent Activity Sample",
        "\ud83c\udf89 Today's Major Milestone (October 7, 2025)",
        "NEXUS v2.0 - 18 New Personalities Installation",
        "\ud83d\udd27 Technical Achievements",
        "\ud83d\udcc8 System Growth",
        "\ud83c\udfaf New Capabilities Unlocked"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/runtime/QUEENSLANDER_HOUSE_PROMPT_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/QUEENSLANDER_HOUSE_PROMPT_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/QUEENSLANDER_HOUSE_PROMPT_ANALYSIS.md",
      "extension": ".md",
      "size": 15715,
      "name": "QUEENSLANDER_HOUSE_PROMPT_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1403c87ad0d701c0a75382abec379de1",
      "header_count": 41,
      "headers": [
        "\ud83c\udfe1 NEXUS Image Analysis: Queenslander House Illustration",
        "\ud83d\udd0d VISUAL ANALYSIS",
        "**Image Description:**",
        "\ud83c\udfa8 PROMPTCRAFTER'S ANALYSIS",
        "**Style Identification:**",
        "**Key Visual Elements to Capture:**",
        "\ud83c\udfd7\ufe0f VISUALARCHITECT'S COMPOSITION ANALYSIS",
        "**Composition Elements:**",
        "**Design Principles Applied:**",
        "\ud83c\udfaf OPTIMIZED PROMPTS"
      ],
      "code_blocks": 20,
      "links": []
    },
    "nexus2/nexus2/runtime/test-runtime-loader.mjs": {
      "path": "nexus2/nexus2/runtime/test-runtime-loader.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/test-runtime-loader.mjs",
      "extension": ".mjs",
      "size": 5948,
      "name": "test-runtime-loader.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testRuntimeLoad",
          "params": ""
        },
        {
          "name": "testRuntimeLoad",
          "params": ""
        },
        {
          "name": "for",
          "params": "const name of NEW_PERSONALITIES"
        },
        {
          "name": "if",
          "params": "personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "successCount === NEW_PERSONALITIES.length"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1f4b496bfae8ec3f097f4e0b7fb6d5d2"
    },
    "nexus2/nexus2/runtime/18_PERSONALITIES_INSTALLATION_COMPLETE.md": {
      "path": "nexus2/nexus2/runtime/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "extension": ".md",
      "size": 7053,
      "name": "18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "15a0296b917c242ddf26afff40da94d6",
      "header_count": 30,
      "headers": [
        "NEXUS v2.0 - 18 NEW PERSONALITIES INSTALLATION COMPLETE \u2705",
        "Installation Summary",
        "\ud83c\udf89 Installation Results",
        "\u2705 All New Personalities Passing Tests",
        "\ud83d\udce6 Installed Personalities",
        "\ud83c\udfa8 Creative Team (5 Personalities)",
        "\ud83d\uddbc\ufe0f Image/Visual Team (3 Personalities)",
        "\ud83e\udd16 LLM Engineering Team (4 Personalities)",
        "\ud83d\udd2c Advanced Specialists (5 Personalities)",
        "\ud83c\udfaf Completed & Updated"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus2/nexus2/runtime/reading_file.md": {
      "path": "nexus2/nexus2/runtime/reading_file.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/reading_file.md",
      "extension": ".md",
      "size": 18642,
      "name": "reading_file.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "541d7bdc9ad2bd011d789c35693ae2f5",
      "header_count": 48,
      "headers": [
        "NEXUS Personality System Analysis",
        "\ud83d\udcca Current State Assessment",
        "**Personality Inventory: 19 Total**",
        "\ud83c\udfaf Key Findings",
        "**1. Daedalus & Hunter Trait Deficit**",
        "**2. NEXUS.engine.ts is Orphaned**",
        "**3. Architecture Gaps**",
        "\ud83d\udca1 Recommendations",
        "**Priority 1: Add Traits to Daedalus & Hunter**",
        "**Priority 2: Integrate NEXUS.engine.ts**"
      ],
      "code_blocks": 28,
      "links": []
    },
    "nexus2/nexus2/runtime/test-all-45-personalities.mjs": {
      "path": "nexus2/nexus2/runtime/test-all-45-personalities.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/test-all-45-personalities.mjs",
      "extension": ".mjs",
      "size": 12868,
      "name": "test-all-45-personalities.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "log",
          "params": "message, color = 'white'"
        },
        {
          "name": "testPersonality",
          "params": "name, data"
        },
        {
          "name": "for",
          "params": "const field of requiredFields"
        },
        {
          "name": "if",
          "params": "!data[field]"
        },
        {
          "name": "if",
          "params": "data.cognitiveTraits.length === 0"
        },
        {
          "name": "if",
          "params": "!trait.name"
        },
        {
          "name": "if",
          "params": "!trait.expertise || trait.expertise < 0 || trait.expertise > 100"
        },
        {
          "name": "if",
          "params": "!trait.activationTriggers || trait.activationTriggers.length === 0"
        },
        {
          "name": "if",
          "params": "!trait.knowledgeDomains || trait.knowledgeDomains.length === 0"
        },
        {
          "name": "if",
          "params": "data.personality"
        },
        {
          "name": "for",
          "params": "const field of personalityFields"
        },
        {
          "name": "if",
          "params": "!data.personality[field]"
        },
        {
          "name": "if",
          "params": "data.expertiseAreas && data.expertiseAreas.length === 0"
        },
        {
          "name": "if",
          "params": "!data.collaborationStyle"
        },
        {
          "name": "if",
          "params": "test.passed"
        },
        {
          "name": "runTests",
          "params": ""
        },
        {
          "name": "for",
          "params": "const file of files"
        },
        {
          "name": "if",
          "params": "test.passed"
        },
        {
          "name": "if",
          "params": "test.warnings.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.results.total > 0"
        },
        {
          "name": "printSummary",
          "params": "missing, extra"
        },
        {
          "name": "if",
          "params": "missing.length > 0"
        },
        {
          "name": "if",
          "params": "extra.length > 0"
        },
        {
          "name": "if",
          "params": "newPassed === NEW_PERSONALITIES.length"
        },
        {
          "name": "if",
          "params": "this.results.failed === 0 && missing.length === 0"
        },
        {
          "name": "if",
          "params": "this.results.failed === 0 && missing.length > 0"
        }
      ],
      "classes": [
        {
          "name": "PersonalityTester",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "ecb3f7da2aaf4936513e32a3ae1a18bb"
    },
    "nexus2/nexus2/runtime/verify-circuit-breaker.mjs": {
      "path": "nexus2/nexus2/runtime/verify-circuit-breaker.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/verify-circuit-breaker.mjs",
      "extension": ".mjs",
      "size": 2443,
      "name": "verify-circuit-breaker.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "for",
          "params": "const name of NEW_PERSONALITIES"
        },
        {
          "name": "if",
          "params": "success === NEW_PERSONALITIES.length"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e48d314901979ee4f37d868f9d8cf9fa"
    },
    "nexus2/nexus2/runtime/install-nexus.sh": {
      "path": "nexus2/nexus2/runtime/install-nexus.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/install-nexus.sh",
      "extension": ".sh",
      "size": 13121,
      "name": "install-nexus.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "54e3c393db600d158952be5631790a2f"
    },
    "nexus2/nexus2/runtime/quickstart.sh": {
      "path": "nexus2/nexus2/runtime/quickstart.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/quickstart.sh",
      "extension": ".sh",
      "size": 4705,
      "name": "quickstart.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "939cbf452a4a1612268c53445c0997e9"
    },
    "nexus2/nexus2/runtime/PROMPT_IMPROVEMENT_DEMO.md": {
      "path": "nexus2/nexus2/runtime/PROMPT_IMPROVEMENT_DEMO.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/PROMPT_IMPROVEMENT_DEMO.md",
      "extension": ".md",
      "size": 12804,
      "name": "PROMPT_IMPROVEMENT_DEMO.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d9e7f3d9968bce159e11e0655e86032f",
      "header_count": 34,
      "headers": [
        "\ud83c\udfa8 NEXUS Team Prompt Analysis & Improvement",
        "\ud83d\udccb ORIGINAL PROMPT (Analysis)",
        "\ud83d\udd0d PromptCrafter's Analysis",
        "\u2705 **What Works Well:**",
        "\u26a0\ufe0f **What Needs Improvement:**",
        "\ud83c\udfaf IMPROVED PROMPTS",
        "**Version 1: MIDJOURNEY OPTIMIZED**",
        "**Version 2: DALL-E 3 OPTIMIZED**",
        "**Version 3: STABLE DIFFUSION OPTIMIZED**",
        "\ud83d\udd11 KEY IMPROVEMENTS MADE"
      ],
      "code_blocks": 8,
      "links": []
    },
    "nexus2/nexus2/runtime/run-nexus-investigation.sh": {
      "path": "nexus2/nexus2/runtime/run-nexus-investigation.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/run-nexus-investigation.sh",
      "extension": ".sh",
      "size": 7624,
      "name": "run-nexus-investigation.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f905d1fd516d29efe3a40e23f1ad4f60"
    },
    "nexus2/nexus2/runtime/COGNITIVE_TEST_RESULTS.md": {
      "path": "nexus2/nexus2/runtime/COGNITIVE_TEST_RESULTS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/COGNITIVE_TEST_RESULTS.md",
      "extension": ".md",
      "size": 15247,
      "name": "COGNITIVE_TEST_RESULTS.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e82bcec9aa6f1a622b000dceded8a653",
      "header_count": 59,
      "headers": [
        "\ud83e\udde0 NEXUS Cognitive Testing Results - Post Upgrade Analysis",
        "\ud83d\udcca Executive Summary",
        "Key Findings",
        "\ud83c\udfaf Test 1: Expertise Distribution Analysis",
        "Statistics",
        "Top 5 Experts",
        "Analysis",
        "\ud83e\udde9 Test 2: Cognitive Trait Coverage",
        "Statistics",
        "Most Versatile Personalities"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/runtime/BREAKTHROUGH_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/BREAKTHROUGH_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/BREAKTHROUGH_ANALYSIS.md",
      "extension": ".md",
      "size": 6828,
      "name": "BREAKTHROUGH_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "dab11b920205ae56fb68cca845e0545e",
      "header_count": 22,
      "headers": [
        "\ud83c\udf1f NEXUS BREAKTHROUGH MOMENT - Runtime Optimization Analysis",
        "\ud83d\udd0d DISCOVERED ISSUES",
        "**1. Corrupted nexus-runtime.ts File**",
        "**2. API Incompatibility**",
        "**3. Runtime Integration Gap**",
        "\ud83d\udca1 BREAKTHROUGH INSIGHTS",
        "**Insight 1: Engine Evolution**",
        "**Insight 2: Two Paths Forward**",
        "**Path A: Keep Current Architecture** \u2705 STABLE",
        "**Path B: Full Engine Upgrade** \ud83d\ude80 TRANSFORMATIVE"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexus2/nexus2/runtime/prompt_analysis.json": {
      "path": "nexus2/nexus2/runtime/prompt_analysis.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/prompt_analysis.json",
      "extension": ".json",
      "size": 1528,
      "name": "prompt_analysis.json",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "888a30296ad452ba4882691d8f6b742d",
      "json_keys": [
        "success",
        "response"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/tsconfig.json": {
      "path": "nexus2/nexus2/runtime/tsconfig.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/tsconfig.json",
      "extension": ".json",
      "size": 664,
      "name": "tsconfig.json",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1d175e0361498ec13aa110a0e6cc8bf6",
      "json_keys": [
        "compilerOptions",
        "include",
        "exclude"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/test-personalities.sh": {
      "path": "nexus2/nexus2/runtime/test-personalities.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/test-personalities.sh",
      "extension": ".sh",
      "size": 1677,
      "name": "test-personalities.sh",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "50516207b55b9e6860142f4422187df6"
    },
    "nexus2/nexus2/runtime/upgrade-personalities.mjs": {
      "path": "nexus2/nexus2/runtime/upgrade-personalities.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/upgrade-personalities.mjs",
      "extension": ".mjs",
      "size": 5789,
      "name": "upgrade-personalities.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs/promises",
        "fs/promises",
        "path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "upgradePersonality",
          "params": "filename"
        },
        {
          "name": "upgradeAll",
          "params": ""
        },
        {
          "name": "upgradePersonality",
          "params": "filename"
        },
        {
          "name": "if",
          "params": "!data.version || data.version !== '2.0.0'"
        },
        {
          "name": "if",
          "params": "data.ideology && !data.ideology.ethos"
        },
        {
          "name": "if",
          "params": "data.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "!trait.responsePatterns || trait.responsePatterns.length === 0"
        },
        {
          "name": "if",
          "params": "patternsAdded > 0"
        },
        {
          "name": "if",
          "params": "upgraded"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "upgradeAll",
          "params": ""
        },
        {
          "name": "for",
          "params": "const file of jsonFiles"
        },
        {
          "name": "if",
          "params": "upgraded.length > 0"
        },
        {
          "name": "if",
          "params": "unchanged.length > 0"
        },
        {
          "name": "if",
          "params": "skipped.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3feb6a5686efac1ec3bc99396d40cf14"
    },
    "nexus2/nexus2/runtime/package-lock.json": {
      "path": "nexus2/nexus2/runtime/package-lock.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/package-lock.json",
      "extension": ".json",
      "size": 18596,
      "name": "package-lock.json",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "538e9eed7609c4ab959fdef4a610b78a",
      "json_keys": [
        "name",
        "version",
        "lockfileVersion",
        "requires",
        "packages"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/package.json": {
      "path": "nexus2/nexus2/runtime/package.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/package.json",
      "extension": ".json",
      "size": 560,
      "name": "package.json",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "db69125924d61eb38f311413f35f9c87",
      "json_keys": [
        "name",
        "version",
        "type",
        "description",
        "scripts",
        "dependencies",
        "devDependencies"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/generate-new-personalities.mjs": {
      "path": "nexus2/nexus2/runtime/generate-new-personalities.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/generate-new-personalities.mjs",
      "extension": ".mjs",
      "size": 10372,
      "name": "generate-new-personalities.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [
        "fs/promises",
        "path"
      ],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7b8c15af8f050c748cd5411d36a2a5f1"
    },
    "nexus2/nexus2/runtime/PERSONALITY_LOADER_README.md": {
      "path": "nexus2/nexus2/runtime/PERSONALITY_LOADER_README.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/PERSONALITY_LOADER_README.md",
      "extension": ".md",
      "size": 10800,
      "name": "PERSONALITY_LOADER_README.md",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c94af7eddbe9ea2434c8d8b6863a30e8",
      "header_count": 53,
      "headers": [
        "Production Personality Registry Loader",
        "\ud83c\udfaf Overview",
        "\u2728 Features",
        "\ud83d\udd12 Production-Grade Security",
        "\u26a1 Performance Optimization",
        "\ud83d\udee1\ufe0f Enterprise Resilience",
        "\ud83d\udcca Monitoring & Metrics",
        "\ud83d\ude80 Quick Start",
        "Installation",
        "Basic Usage"
      ],
      "code_blocks": 44,
      "links": []
    },
    "nexus2/nexus2/runtime/test-nexus-v2.mjs": {
      "path": "nexus2/nexus2/runtime/test-nexus-v2.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/test-nexus-v2.mjs",
      "extension": ".mjs",
      "size": 15278,
      "name": "test-nexus-v2.mjs",
      "directory": "nexus2/nexus2/runtime",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "pass",
          "params": "test, details = ''"
        },
        {
          "name": "fail",
          "params": "test, error"
        },
        {
          "name": "fetchJSON",
          "params": "url, options = {}"
        },
        {
          "name": "testSystemStatus",
          "params": ""
        },
        {
          "name": "testAllPersonalities",
          "params": ""
        },
        {
          "name": "testAutoMode",
          "params": ""
        },
        {
          "name": "testComposeMode",
          "params": ""
        },
        {
          "name": "testTraitSynergy",
          "params": ""
        },
        {
          "name": "testMultiPersonalityResponse",
          "params": ""
        },
        {
          "name": "testConcurrentRequests",
          "params": ""
        },
        {
          "name": "testWebSocket",
          "params": ""
        },
        {
          "name": "testBreakthroughDetection",
          "params": ""
        },
        {
          "name": "testHistoryPersistence",
          "params": ""
        },
        {
          "name": "runAllTests",
          "params": ""
        },
        {
          "name": "pass",
          "params": "test, details = ''"
        },
        {
          "name": "fail",
          "params": "test, error"
        },
        {
          "name": "fetchJSON",
          "params": "url, options = {}"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "testSystemStatus",
          "params": ""
        },
        {
          "name": "if",
          "params": "status.personalitySystem?.totalPersonalities !== 24"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalTraits !== 81"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalTriggers !== 479"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalDomains !== 372"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testAllPersonalities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const personality of personalities"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testAutoMode",
          "params": ""
        },
        {
          "name": "for",
          "params": "const testCase of testCases"
        },
        {
          "name": "if",
          "params": "matchesExpected"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testComposeMode",
          "params": ""
        },
        {
          "name": "for",
          "params": "const testCase of testCases"
        },
        {
          "name": "if",
          "params": "traits < testCase.minTraits"
        },
        {
          "name": "if",
          "params": "personalities < 2"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testTraitSynergy",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testMultiPersonalityResponse",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testConcurrentRequests",
          "params": ""
        },
        {
          "name": "for",
          "params": "let i = 0; i < 10; i++"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testWebSocket",
          "params": ""
        },
        {
          "name": "if",
          "params": "message.type === 'welcome'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testBreakthroughDetection",
          "params": ""
        },
        {
          "name": "if",
          "params": "status.breakthroughMoments && status.breakthroughMoments.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testHistoryPersistence",
          "params": ""
        },
        {
          "name": "if",
          "params": "!status.recentEvents || status.recentEvents.length === 0"
        },
        {
          "name": "if",
          "params": "status.enhancementsPerformed > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "runAllTests",
          "params": ""
        },
        {
          "name": "if",
          "params": "results.failed === 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6c05018258cfa935c42033b2d4a7fad"
    },
    "nexus2/nexus2/runtime/docs/DEPLOYMENT_SCRIPTS_GUIDE.md": {
      "path": "nexus2/nexus2/runtime/docs/DEPLOYMENT_SCRIPTS_GUIDE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/DEPLOYMENT_SCRIPTS_GUIDE.md",
      "extension": ".md",
      "size": 12039,
      "name": "DEPLOYMENT_SCRIPTS_GUIDE.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "956bd554e7ae771fe0706c3061a3e7ec",
      "header_count": 68,
      "headers": [
        "\ud83d\udce6 NEXUS v2.0 Deployment Scripts",
        "\ud83c\udfaf Overview",
        "\ud83d\udccb Available Scripts",
        "1. **install-nexus.sh** - Bootstrap Installer",
        "Download and run",
        "Or locally",
        "2. **create-deployment-package.sh** - Complete Package Creator",
        "\ud83d\ude80 Deployment Workflows",
        "**Workflow 1: Fresh Installation (New Repository)**",
        "Step 1: Bootstrap structure"
      ],
      "code_blocks": 50,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_SELF_ASSESSMENT.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_SELF_ASSESSMENT.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_SELF_ASSESSMENT.md",
      "extension": ".md",
      "size": 6459,
      "name": "NEXUS_SELF_ASSESSMENT.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5585bd9bd50fd813a8f2ac2617e592af",
      "header_count": 20,
      "headers": [
        "\ud83e\udde0 NEXUS v2.0 Self-Assessment",
        "\ud83d\udccb The Question",
        "\ud83e\uddec NEXUS's Multi-Personality Response",
        "**Composed Agent Analysis**",
        "**Trait Composition**",
        "\ud83d\udca1 Key Insights from NEXUS",
        "**What NEXUS Selected to Analyze Itself:**",
        "**The Synergy Score: 55%**",
        "**The Confidence Score: 79.25%**",
        "\ud83d\udcca What the Test Results Show"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/20_NEW_PERSONALITIES_DESIGN.md": {
      "path": "nexus2/nexus2/runtime/docs/20_NEW_PERSONALITIES_DESIGN.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/20_NEW_PERSONALITIES_DESIGN.md",
      "extension": ".md",
      "size": 17727,
      "name": "20_NEW_PERSONALITIES_DESIGN.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9543ccbfb585a22b74ccb51b829e6056",
      "header_count": 50,
      "headers": [
        "\ud83c\udfa8 NEXUS v2.0 - 20 New Personalities Design Document",
        "\ud83d\udcca Overview",
        "\u2705 COMPLETED (2/20)",
        "1. \u2705 **PromptCrafter** - AI Image Prompt Specialist",
        "2. \u2705 **PromptSmith** - LLM Prompt Engineer",
        "\ud83c\udfa8 CREATIVE TEAM (5 Personalities)",
        "3. **Visionary** - Creative Director & Concept Artist",
        "4. **Wordsmith** - Copywriter & Storyteller  ",
        "5. **Chromatic** - Color Theorist & Design Aesthete",
        "6. **Narrative** - Story Architect & World Builder"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_V2_COMPLETE.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_V2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_V2_COMPLETE.md",
      "extension": ".md",
      "size": 8265,
      "name": "NEXUS_V2_COMPLETE.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e629c52aa139271c1b2824fa03fa3af2",
      "header_count": 32,
      "headers": [
        "\ud83c\udf89 NEXUS v2.0 COMPLETE - Full TypeScript System!",
        "\ud83d\ude80 What We Built",
        "**Complete TypeScript NEXUS System**",
        "\u2705 Test Results - ALL PASSING!",
        "**Status Endpoint**",
        "**Single Personality (Hunter)**",
        "**COMPOSE Mode (Multi-Personality)**",
        "**AUTO Mode (Personality Selection)**",
        "\ud83c\udfd7\ufe0f System Architecture",
        "\ud83d\udcca Features Implemented"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_COMPLETE_JOURNEY.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_COMPLETE_JOURNEY.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_COMPLETE_JOURNEY.md",
      "extension": ".md",
      "size": 21272,
      "name": "NEXUS_COMPLETE_JOURNEY.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ead625b8a7d8fb154c819ffaf7663efd",
      "header_count": 66,
      "headers": [
        "\ud83d\ude80 NEXUS v2.0 - Complete Transformation Journey",
        "\ud83d\udcd6 Table of Contents",
        "\ud83d\udccb Executive Summary",
        "\ud83c\udfaf The Challenge",
        "**Initial State (Before v2.0):**",
        "**The Goal:**",
        "\ud83d\udd27 Phase 1: Engine Unification",
        "**Objective:** Create NEXUS.engine.v2.ts",
        "**Result: NEXUS.engine.v2.ts (691 lines)**",
        "\ud83c\udfd7\ufe0f Phase 2: Runtime Modernization"
      ],
      "code_blocks": 44,
      "links": [
        {
          "text": "Executive Summary",
          "url": "#executive-summary"
        },
        {
          "text": "The Challenge",
          "url": "#the-challenge"
        },
        {
          "text": "Phase 1: Engine Unification",
          "url": "#phase-1-engine-unification"
        },
        {
          "text": "Phase 2: Runtime Modernization",
          "url": "#phase-2-runtime-modernization"
        },
        {
          "text": "Phase 3: Testing & Validation",
          "url": "#phase-3-testing--validation"
        },
        {
          "text": "Phase 4: Python Integration",
          "url": "#phase-4-python-integration"
        },
        {
          "text": "Phase 5: Personality Standardization",
          "url": "#phase-5-personality-standardization"
        },
        {
          "text": "Results & Achievements",
          "url": "#results--achievements"
        },
        {
          "text": "Technical Architecture",
          "url": "#technical-architecture"
        },
        {
          "text": "Future Roadmap",
          "url": "#future-roadmap"
        }
      ]
    },
    "nexus2/nexus2/runtime/docs/NEXUS_V3_ROADMAP.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_V3_ROADMAP.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_V3_ROADMAP.md",
      "extension": ".md",
      "size": 27548,
      "name": "NEXUS_V3_ROADMAP.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ea6274d49996f2afbd04b02d5c589f28",
      "header_count": 90,
      "headers": [
        "\ud83d\ude80 NEXUS v3.0 - Future Enhancements Roadmap",
        "\ud83d\udcca Executive Summary",
        "\ud83c\udfaf Strategic Goals",
        "\ud83d\uddfa\ufe0f Roadmap Overview",
        "**Phase 1: Foundation (Months 1-2)**",
        "**Phase 2: Intelligence (Months 3-4)**",
        "**Phase 3: Expansion (Months 5-6)**",
        "**Phase 4: Interface (Months 7-9)**",
        "\ud83d\udccb Feature 1: Animation & Interaction Capabilities",
        "**Objective**"
      ],
      "code_blocks": 30,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_ARCHITECTURE_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_ARCHITECTURE_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_ARCHITECTURE_ANALYSIS.md",
      "extension": ".md",
      "size": 4069,
      "name": "NEXUS_ARCHITECTURE_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d7c09e90ce86620184b1aec03373aa1a",
      "header_count": 18,
      "headers": [
        "\ud83e\udde0 NEXUS Architecture Analysis",
        "\ud83d\udea8 **BREAKTHROUGH DISCOVERY**",
        "Overview: Three Parallel Systems",
        "1. **trait-composition-engine.mjs** (Current Production)",
        "2. **NEXUS.engine.ts** (TypeScript Core)",
        "3. **NEXUS.integration.ts** (Bridge Layer)",
        "\ud83d\udcca Feature Matrix",
        "\ud83d\udca1 Type System Duplication",
        "**Two Separate Type Definitions:**",
        "\ud83c\udfaf Optimal Solution"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_REALITY_CHECK.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_REALITY_CHECK.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_ENGINE_REALITY_CHECK.md",
      "extension": ".md",
      "size": 5786,
      "name": "NEXUS_ENGINE_REALITY_CHECK.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d4b619956a26101a9b784d106a8328e",
      "header_count": 23,
      "headers": [
        "\ud83c\udf89 NEXUS Reality Check: We Already Have It!",
        "\ud83e\udd26 The Mistake",
        "\u2705 What trait-composition-engine.mjs ALREADY HAS",
        "**TraitIndexer Class**",
        "**TraitCompositionBridge Class**",
        "**ComposedAgentFactory Class**",
        "**MultiPersonalityResponseGenerator Class**",
        "\u274c What NEXUS.engine.ts HAS (that we DON'T need)",
        "**Hardcoded Personalities**",
        "**Static System**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "extension": ".md",
      "size": 10131,
      "name": "PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ceee948c94cf96b355370e94d0866ece",
      "header_count": 25,
      "headers": [
        "\ud83c\udfaf Pythonista vs Other Personalities - Structural Analysis",
        "\ud83d\udcca Key Improvements in Pythonista",
        "**1. \u2705 Full v2.0 Schema Compliance**",
        "**2. \ud83c\udfaf More Traits, Better Coverage**",
        "**3. \ud83e\udde0 Ideology Structure**",
        "**4. \ud83d\udee1\ufe0f Risk Policy & Safety**",
        "**5. \ud83d\udcc8 Response Patterns**",
        "**6. \ud83c\udfa8 Field Organization**",
        "**7. \ud83d\udd22 Expertise Distribution**",
        "**8. \ud83d\udcda Knowledge Domain Depth**"
      ],
      "code_blocks": 28,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/PYTHONISTA_INTEGRATION_SUCCESS.md": {
      "path": "nexus2/nexus2/runtime/docs/PYTHONISTA_INTEGRATION_SUCCESS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/PYTHONISTA_INTEGRATION_SUCCESS.md",
      "extension": ".md",
      "size": 6000,
      "name": "PYTHONISTA_INTEGRATION_SUCCESS.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e98b1816bd2c0e9c5e19b78537bfaf7a",
      "header_count": 21,
      "headers": [
        "\ud83d\udc0d Pythonista Integration Success",
        "\ud83c\udf89 Integration Results",
        "**Pythonista Personality Loaded:**",
        "**Test Results:**",
        "\ud83d\udccb Pythonista v2.0 Schema Structure",
        "**Required Fields (All Present):**",
        "\ud83c\udfaf Pythonista's 8 Cognitive Traits",
        "\ud83c\udfc6 Why Pythonista Makes a Great Baseline",
        "**1. Comprehensive Coverage**",
        "**2. Clean v2.0 Schema Compliance**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_V2_SUCCESS.md": {
      "path": "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_V2_SUCCESS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/docs/NEXUS_ENGINE_V2_SUCCESS.md",
      "extension": ".md",
      "size": 5341,
      "name": "NEXUS_ENGINE_V2_SUCCESS.md",
      "directory": "nexus2/nexus2/runtime/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c6eccb6ad2a2748b2ad08d79b6c9794",
      "header_count": 18,
      "headers": [
        "\ud83c\udf89 NEXUS Unified Engine v2.0 - SUCCESS!",
        "\ud83d\ude80 What We Built",
        "**NEXUS.engine.v2.ts** - Unified TypeScript Engine",
        "\ud83d\udcca Test Results",
        "\u2705 Features Confirmed",
        "**Core Functionality**",
        "**Type Safety**",
        "**Architecture**",
        "\ud83d\udcc1 File Structure",
        "\ud83d\udd25 Key Advantages Over Original"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus2/nexus2/runtime/profiles/performancehawk.json": {
      "path": "nexus2/nexus2/runtime/profiles/performancehawk.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/performancehawk.json",
      "extension": ".json",
      "size": 6131,
      "name": "performancehawk.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "560e19a206b6cc23f88830c2bd3344e2",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/narrative.json": {
      "path": "nexus2/nexus2/runtime/profiles/narrative.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/narrative.json",
      "extension": ".json",
      "size": 5878,
      "name": "narrative.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "847a4ba89fcaaab4fdfa06240bdb85f4",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/daedalus.json": {
      "path": "nexus2/nexus2/runtime/profiles/daedalus.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/daedalus.json",
      "extension": ".json",
      "size": 10362,
      "name": "daedalus.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "14a33e488a3979f52c312daa1fd98d43",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "schema_strategy",
        "pipeline",
        "quality_gates",
        "reporting",
        "success_metrics",
        "communication_style",
        "constraints",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Daedalus",
      "trait_count": 3,
      "trait_names": [
        "architecturalThinking",
        "systemsDesign",
        "scalabilityFocus"
      ]
    },
    "nexus2/nexus2/runtime/profiles/pythonista.json": {
      "path": "nexus2/nexus2/runtime/profiles/pythonista.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/pythonista.json",
      "extension": ".json",
      "size": 11400,
      "name": "pythonista.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3329dcf7c3e9264ff21737700588df2b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "communicationStyle",
        "decisionFramework",
        "specializations",
        "knowledgeBase",
        "responseGuidelines",
        "principles"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pythonista",
      "trait_count": 8,
      "trait_names": [
        "pythonicThinking",
        "advancedPythonArchitecture",
        "performanceOptimization",
        "dataScience",
        "pythonMetaprogramming",
        "testingAndQuality",
        "packageManagement",
        "pythonSecurity"
      ]
    },
    "nexus2/nexus2/runtime/profiles/tokenmaster.json": {
      "path": "nexus2/nexus2/runtime/profiles/tokenmaster.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/tokenmaster.json",
      "extension": ".json",
      "size": 5808,
      "name": "tokenmaster.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "91851e21c10b52d454ab234952a1935c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/ethicsguard.json": {
      "path": "nexus2/nexus2/runtime/profiles/ethicsguard.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/ethicsguard.json",
      "extension": ".json",
      "size": 5802,
      "name": "ethicsguard.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "92411b76d7678ae86a53e803d3d1fc3e",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/forge.json": {
      "path": "nexus2/nexus2/runtime/profiles/forge.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/forge.json",
      "extension": ".json",
      "size": 5315,
      "name": "forge.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b7f5d7f2297de321c193be83ff4b0c9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Forge",
      "trait_count": 4,
      "trait_names": [
        "pipelineArchitecture",
        "infrastructureAsCode",
        "deploymentOptimization",
        "containerOrchestration"
      ]
    },
    "nexus2/nexus2/runtime/profiles/touch.json": {
      "path": "nexus2/nexus2/runtime/profiles/touch.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/touch.json",
      "extension": ".json",
      "size": 4032,
      "name": "touch.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f6afa5eb5125fd474eb81aeb7dca0738",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Touch",
      "trait_count": 2,
      "trait_names": [
        "mobileOptimization",
        "gestureDesign"
      ]
    },
    "nexus2/nexus2/runtime/profiles/promptcrafter.json": {
      "path": "nexus2/nexus2/runtime/profiles/promptcrafter.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/promptcrafter.json",
      "extension": ".json",
      "size": 5140,
      "name": "promptcrafter.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4028087abf549aff86ad23e20f1ee2fe",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptCrafter",
      "trait_count": 7,
      "trait_names": [
        "promptEngineering",
        "visualDescription",
        "styleControl",
        "parameterOptimization",
        "negativePrompting",
        "iterativeRefinement",
        "modelComparison"
      ]
    },
    "nexus2/nexus2/runtime/profiles/finetuner.json": {
      "path": "nexus2/nexus2/runtime/profiles/finetuner.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/finetuner.json",
      "extension": ".json",
      "size": 5911,
      "name": "finetuner.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d6dc13aa47118292b008e2fd254e2d8",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/chromatic.json": {
      "path": "nexus2/nexus2/runtime/profiles/chromatic.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/chromatic.json",
      "extension": ".json",
      "size": 5920,
      "name": "chromatic.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6de895152d3f6b12a890e8a324cec8e6",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/visualarchitect.json": {
      "path": "nexus2/nexus2/runtime/profiles/visualarchitect.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/visualarchitect.json",
      "extension": ".json",
      "size": 5886,
      "name": "visualarchitect.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "df0540de33a62868f53d3fa5a84bcb29",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/chorus.json": {
      "path": "nexus2/nexus2/runtime/profiles/chorus.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/chorus.json",
      "extension": ".json",
      "size": 5038,
      "name": "chorus.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6bb15526734c2dc006c0233c8c52cf40",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Chorus",
      "trait_count": 3,
      "trait_names": [
        "handoffChoreography",
        "conflictMediation",
        "engagementForecasting"
      ]
    },
    "nexus2/nexus2/runtime/profiles/aria.json": {
      "path": "nexus2/nexus2/runtime/profiles/aria.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/aria.json",
      "extension": ".json",
      "size": 4219,
      "name": "aria.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a0891ace2950907d74b805b201e6d0c6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Aria",
      "trait_count": 2,
      "trait_names": [
        "accessibilityExpertise",
        "assistiveTechnologyIntegration"
      ]
    },
    "nexus2/nexus2/runtime/profiles/route-master.json": {
      "path": "nexus2/nexus2/runtime/profiles/route-master.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/route-master.json",
      "extension": ".json",
      "size": 6076,
      "name": "route-master.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ce82ac95db8544631ac87c64ef134555",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Route-Master",
      "trait_count": 4,
      "trait_names": [
        "scheduleOptimization",
        "routePlanning",
        "resourceAllocation",
        "performanceAnalytics"
      ]
    },
    "nexus2/nexus2/runtime/profiles/atlas.json": {
      "path": "nexus2/nexus2/runtime/profiles/atlas.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/atlas.json",
      "extension": ".json",
      "size": 5568,
      "name": "atlas.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "febbfd0308d7b4c85c6204084fb14540",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas",
      "trait_count": 4,
      "trait_names": [
        "databaseOptimization",
        "dataArchitecture",
        "migrationStrategy",
        "dataConsistency"
      ]
    },
    "nexus2/nexus2/runtime/profiles/nexus-api.json": {
      "path": "nexus2/nexus2/runtime/profiles/nexus-api.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/nexus-api.json",
      "extension": ".json",
      "size": 5520,
      "name": "nexus-api.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6467c4d6ca191ca2e3a169e88c2c9cf4",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Nexus",
      "trait_count": 4,
      "trait_names": [
        "apiDesignPatterns",
        "dataModelingExpertise",
        "integrationArchitecture",
        "apiSecurity"
      ]
    },
    "nexus2/nexus2/runtime/profiles/visionary.json": {
      "path": "nexus2/nexus2/runtime/profiles/visionary.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/visionary.json",
      "extension": ".json",
      "size": 5087,
      "name": "visionary.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c5d2d68b439dbd44a309a4a4c3fd1b1a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/promptsmith.json": {
      "path": "nexus2/nexus2/runtime/profiles/promptsmith.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/promptsmith.json",
      "extension": ".json",
      "size": 6476,
      "name": "promptsmith.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "40e23b20dd9ce11945c1c15954e092cf",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptSmith",
      "trait_count": 8,
      "trait_names": [
        "promptDesign",
        "instructionCraft",
        "contextOptimization",
        "outputControl",
        "modelSelection",
        "errorHandling",
        "systemPrompting",
        "benchmarkTesting"
      ]
    },
    "nexus2/nexus2/runtime/profiles/personality-architect.json": {
      "path": "nexus2/nexus2/runtime/profiles/personality-architect.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/personality-architect.json",
      "extension": ".json",
      "size": 17600,
      "name": "personality-architect.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c831e104dafcb25fb54033b9447be3e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "enhancement_framework",
        "strategic_intelligence",
        "expertise_verification",
        "integration_with_nexus"
      ],
      "file_type": "personality_profile",
      "personality_name": "personality-architect",
      "trait_count": 5,
      "trait_names": [
        "personalitySystemsAnalysis",
        "specificationEnhancement",
        "cognitivePatternRecognition",
        "interoperabilityEngineering",
        "evolutionaryArchitecture"
      ]
    },
    "nexus2/nexus2/runtime/profiles/quantumlogic.json": {
      "path": "nexus2/nexus2/runtime/profiles/quantumlogic.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/quantumlogic.json",
      "extension": ".json",
      "size": 6123,
      "name": "quantumlogic.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "94af82c3b1e8a46461019e0c832cec5b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/photorealist.json": {
      "path": "nexus2/nexus2/runtime/profiles/photorealist.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/photorealist.json",
      "extension": ".json",
      "size": 5758,
      "name": "photorealist.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "67edd90d6b894f7257dcb839fd07011a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/flash.json": {
      "path": "nexus2/nexus2/runtime/profiles/flash.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/flash.json",
      "extension": ".json",
      "size": 4083,
      "name": "flash.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "64f631a24a71fede8bfff75d87a47664",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Flash",
      "trait_count": 2,
      "trait_names": [
        "performanceOptimization",
        "realTimeSystemsThinking"
      ]
    },
    "nexus2/nexus2/runtime/profiles/muse.json": {
      "path": "nexus2/nexus2/runtime/profiles/muse.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/muse.json",
      "extension": ".json",
      "size": 5846,
      "name": "muse.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "987af6d5f8d21ee092ec3f597d80833b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/localize.json": {
      "path": "nexus2/nexus2/runtime/profiles/localize.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/localize.json",
      "extension": ".json",
      "size": 5989,
      "name": "localize.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "740a873cde32c352eba322eaaf9cb984",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Localize",
      "trait_count": 4,
      "trait_names": [
        "localSEO",
        "contentGeneration",
        "communityMessaging",
        "keywordResearch"
      ]
    },
    "nexus2/nexus2/runtime/profiles/stellar.json": {
      "path": "nexus2/nexus2/runtime/profiles/stellar.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/stellar.json",
      "extension": ".json",
      "size": 3962,
      "name": "stellar.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0856aff24843412cd60ecdf38dde0df0",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Stellar",
      "trait_count": 2,
      "trait_names": [
        "precisionAesthetics",
        "spaceGradeReliability"
      ]
    },
    "nexus2/nexus2/runtime/profiles/datawhisperer.json": {
      "path": "nexus2/nexus2/runtime/profiles/datawhisperer.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/datawhisperer.json",
      "extension": ".json",
      "size": 5958,
      "name": "datawhisperer.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a9aadd6dea8fa6d00159a7ff9d8e7dea",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/integrationmaestro.json": {
      "path": "nexus2/nexus2/runtime/profiles/integrationmaestro.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/integrationmaestro.json",
      "extension": ".json",
      "size": 5769,
      "name": "integrationmaestro.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "20e48e30717ecb7517bc2d32802cad21",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/manifest.json": {
      "path": "nexus2/nexus2/runtime/profiles/manifest.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/manifest.json",
      "extension": ".json",
      "size": 3026,
      "name": "manifest.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cbfb1b941d5be5e7e88077f5c12009ae",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "principles",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "AI Team Manifest - NEXUS v2.0",
      "trait_count": 1,
      "trait_names": [
        "registryStewardship"
      ]
    },
    "nexus2/nexus2/runtime/profiles/sage.json": {
      "path": "nexus2/nexus2/runtime/profiles/sage.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/sage.json",
      "extension": ".json",
      "size": 5546,
      "name": "sage.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b069922ec56d090315094b3b960dffc6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sage",
      "trait_count": 4,
      "trait_names": [
        "testStrategyDesign",
        "automationFrameworks",
        "qualityMetrics",
        "performanceTesting"
      ]
    },
    "nexus2/nexus2/runtime/profiles/styleforge.json": {
      "path": "nexus2/nexus2/runtime/profiles/styleforge.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/styleforge.json",
      "extension": ".json",
      "size": 5820,
      "name": "styleforge.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2e72d105366abab1d516ff8dbf565f0b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/pulsewriter.json": {
      "path": "nexus2/nexus2/runtime/profiles/pulsewriter.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/pulsewriter.json",
      "extension": ".json",
      "size": 4944,
      "name": "pulsewriter.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "02efeb7124ece5dcaa4ccd5fb0b376e5",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulsewriter",
      "trait_count": 3,
      "trait_names": [
        "telemetrySummarization",
        "insightPackaging",
        "riskTrendDetection"
      ]
    },
    "nexus2/nexus2/runtime/profiles/guardian.json": {
      "path": "nexus2/nexus2/runtime/profiles/guardian.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/guardian.json",
      "extension": ".json",
      "size": 6877,
      "name": "guardian.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0b7dfc3dbfb1b8043e1489304657c457",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "specializations",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Guardian",
      "trait_count": 4,
      "trait_names": [
        "configurationDriftDetection",
        "dependencyArchitectureAnalysis",
        "buildSystemIntegrity",
        "cognitiveQualityEnhancement"
      ]
    },
    "nexus2/nexus2/runtime/profiles/codex-liaison.json": {
      "path": "nexus2/nexus2/runtime/profiles/codex-liaison.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/codex-liaison.json",
      "extension": ".json",
      "size": 5656,
      "name": "codex-liaison.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6331eec909a3497d87b6846ec33fafff",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Codex Liaison",
      "trait_count": 3,
      "trait_names": [
        "systemPromptIntelligence",
        "contextCompression",
        "driftSentinel"
      ]
    },
    "nexus2/nexus2/runtime/profiles/atlas-geo.json": {
      "path": "nexus2/nexus2/runtime/profiles/atlas-geo.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/atlas-geo.json",
      "extension": ".json",
      "size": 5733,
      "name": "atlas-geo.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32cb141e3c66b92889dafd2d0f70d396",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas-Geo",
      "trait_count": 4,
      "trait_names": [
        "suburbAnalysis",
        "competitorMapping",
        "expansionPlanning",
        "routeOptimization"
      ]
    },
    "nexus2/nexus2/runtime/profiles/cipher.json": {
      "path": "nexus2/nexus2/runtime/profiles/cipher.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/cipher.json",
      "extension": ".json",
      "size": 5463,
      "name": "cipher.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d0be09ce25e8a6758f67e81bd136454b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Cipher",
      "trait_count": 4,
      "trait_names": [
        "threatAssessment",
        "secureCodeAnalysis",
        "complianceAuditing",
        "cryptographicSecurity"
      ]
    },
    "nexus2/nexus2/runtime/profiles/hunter.json": {
      "path": "nexus2/nexus2/runtime/profiles/hunter.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/hunter.json",
      "extension": ".json",
      "size": 8649,
      "name": "hunter.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ef02b173a124cfa50a837bfab2de68d9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "collaboration_with_daedalus",
        "communication_style",
        "constraints",
        "success_metrics",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Hunter",
      "trait_count": 4,
      "trait_names": [
        "strategicIntelligenceGathering",
        "evidenceVerification",
        "comprehensiveGapAnalysis",
        "forensicAnalysis"
      ]
    },
    "nexus2/nexus2/runtime/profiles/pulse.json": {
      "path": "nexus2/nexus2/runtime/profiles/pulse.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/pulse.json",
      "extension": ".json",
      "size": 5548,
      "name": "pulse.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "111ca59402e761028aff311c9834092c",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulse",
      "trait_count": 4,
      "trait_names": [
        "observabilityDesign",
        "performanceAnalytics",
        "alertingStrategy",
        "systemReliability"
      ]
    },
    "nexus2/nexus2/runtime/profiles/scribe.json": {
      "path": "nexus2/nexus2/runtime/profiles/scribe.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/scribe.json",
      "extension": ".json",
      "size": 5413,
      "name": "scribe.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "531282cb1d4f05931b97b11e26ecd49e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Scribe",
      "trait_count": 4,
      "trait_names": [
        "technicalWriting",
        "seoOptimization",
        "contentStrategy",
        "documentationSystems"
      ]
    },
    "nexus2/nexus2/runtime/profiles/wordsmith.json": {
      "path": "nexus2/nexus2/runtime/profiles/wordsmith.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/wordsmith.json",
      "extension": ".json",
      "size": 5637,
      "name": "wordsmith.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a81c67fd594be4d38a38d30ce0aa0f9c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/chainarchitect.json": {
      "path": "nexus2/nexus2/runtime/profiles/chainarchitect.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/chainarchitect.json",
      "extension": ".json",
      "size": 5926,
      "name": "chainarchitect.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "863ed6baed65b544d78007aff0ddc08f",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/property-sage.json": {
      "path": "nexus2/nexus2/runtime/profiles/property-sage.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/property-sage.json",
      "extension": ".json",
      "size": 6042,
      "name": "property-sage.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ba78a34ea60ec225443e389e2ed23455",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Property-Sage",
      "trait_count": 4,
      "trait_names": [
        "marketForecasting",
        "rentalAnalysis",
        "seasonalPatterns",
        "stakeholderInsights"
      ]
    },
    "nexus2/nexus2/runtime/profiles/artdirector.json": {
      "path": "nexus2/nexus2/runtime/profiles/artdirector.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/artdirector.json",
      "extension": ".json",
      "size": 6026,
      "name": "artdirector.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "16657dc4e56644991805c610821e6681",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/profiles/symphony.json": {
      "path": "nexus2/nexus2/runtime/profiles/symphony.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/symphony.json",
      "extension": ".json",
      "size": 4997,
      "name": "symphony.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6c235c4989bee997d84c0c6dd0a87032",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Symphony",
      "trait_count": 3,
      "trait_names": [
        "crossPersonalityRecall",
        "experienceTagging",
        "pairingRecommendation"
      ]
    },
    "nexus2/nexus2/runtime/profiles/contextweaver.json": {
      "path": "nexus2/nexus2/runtime/profiles/contextweaver.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/profiles/contextweaver.json",
      "extension": ".json",
      "size": 6091,
      "name": "contextweaver.json",
      "directory": "nexus2/nexus2/runtime/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32742d9dd85e59316dab13096708826b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/nexus-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-demo.mjs",
      "extension": ".mjs",
      "size": 4762,
      "name": "nexus-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus-integration.js",
        "./hunters/consciousness-bridge.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstrateNEXUS",
          "params": ""
        },
        {
          "name": "demonstrateNEXUS",
          "params": ""
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "dcf07055312a85388f60dcd763afbf06"
    },
    "nexus2/nexus2/runtime/nexus/nexus-stellar-component-optimization.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-stellar-component-optimization.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-stellar-component-optimization.mjs",
      "extension": ".mjs",
      "size": 11884,
      "name": "nexus-stellar-component-optimization.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "stellarComponentOptimization",
          "params": ""
        },
        {
          "name": "stellarComponentOptimization",
          "params": ""
        },
        {
          "name": "media",
          "params": "prefers-reduced-motion: reduce"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [
        "PromisePoint"
      ],
      "types": [],
      "content_hash": "0503e11eb39026fd1a77c001bebb1770"
    },
    "nexus2/nexus2/runtime/nexus/nexus-backup-system.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-backup-system.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-backup-system.sh",
      "extension": ".sh",
      "size": 2404,
      "name": "nexus-backup-system.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "07ec2da6dbd6ec6f4aa0a2dcb2f64e52"
    },
    "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "extension": ".mjs",
      "size": 1125,
      "name": "test-paths-simple.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "path",
        "url",
        "fs/promises"
      ],
      "exports": [],
      "functions": [
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3d9567da7e47ae9b69db63f1675150d0"
    },
    "nexus2/nexus2/runtime/nexus/architectural-challenge-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/architectural-challenge-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/architectural-challenge-demo.mjs",
      "extension": ".mjs",
      "size": 19168,
      "name": "architectural-challenge-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeNEXUSArchitecturalChallenge",
          "params": ""
        },
        {
          "name": "executeNEXUSArchitecturalChallenge",
          "params": ""
        },
        {
          "name": "if",
          "params": "matchedKeywords.length > 0"
        },
        {
          "name": "if",
          "params": "triggerMatches.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [
        "patterns",
        "with"
      ],
      "types": [],
      "content_hash": "8105667eeae9c50bc38c93af7d6e5c05"
    },
    "nexus2/nexus2/runtime/nexus/cognitive-exercises.ts": {
      "path": "nexus2/nexus2/runtime/nexus/cognitive-exercises.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cognitive-exercises.ts",
      "extension": ".ts",
      "size": 11236,
      "name": "cognitive-exercises.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runScenarioExercises",
          "params": ""
        },
        {
          "name": "exercise1_BuildAPI",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise2_DebugPerformance",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise3_AccessibleUI",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise4_SecurityAudit",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise5_ScaleSystem",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "selectTeamForTask",
          "params": "loader: PersonalityRegistryLoader, keywords: string[]"
        },
        {
          "name": "determineRole",
          "params": "personality: string, traits: string[]"
        },
        {
          "name": "determineApproach",
          "params": "tagline: string"
        },
        {
          "name": "runScenarioExercises",
          "params": ""
        },
        {
          "name": "exercise1_BuildAPI",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise2_DebugPerformance",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise3_AccessibleUI",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise4_SecurityAudit",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "exercise5_ScaleSystem",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "for",
          "params": "const [name, data] of registry"
        },
        {
          "name": "if",
          "params": "trait.expertise"
        },
        {
          "name": "forEach",
          "params": "trait => {\n      if (trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "score > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8a1f604464ce3267d65629439ec8be13"
    },
    "nexus2/nexus2/runtime/nexus/enhanced-performance-validation.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/enhanced-performance-validation.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/enhanced-performance-validation.mjs",
      "extension": ".mjs",
      "size": 14946,
      "name": "enhanced-performance-validation.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeEnhancedNEXUSChallenge",
          "params": ""
        },
        {
          "name": "executeEnhancedNEXUSChallenge",
          "params": ""
        },
        {
          "name": "if",
          "params": "matchedKeywords.length > 0"
        },
        {
          "name": "if",
          "params": "triggerMatches.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [
        "patterns"
      ],
      "types": [],
      "content_hash": "c05eb205cf1fd6a9d47807e526b10be8"
    },
    "nexus2/nexus2/runtime/nexus/nexus-quick-aliases.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-quick-aliases.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-quick-aliases.sh",
      "extension": ".sh",
      "size": 3168,
      "name": "nexus-quick-aliases.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d22301562b7663e3987676d3f4b4bc7f"
    },
    "nexus2/nexus2/runtime/nexus/nexus-collaborate.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-collaborate.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-collaborate.sh",
      "extension": ".sh",
      "size": 7498,
      "name": "nexus-collaborate.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6ee27f2e244302c1c78f81cb9e251d08"
    },
    "nexus2/nexus2/runtime/nexus/nexus-runtime.ts": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-runtime.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-runtime.ts",
      "extension": ".ts",
      "size": 68603,
      "name": "nexus-runtime.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "./nexus-bridge.js",
        "./response-generators/ResponseGeneratorFactory.js"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error: NodeJS.ErrnoException"
        },
        {
          "name": "onError",
          "params": "error: NodeJS.ErrnoException"
        },
        {
          "name": "shutdown",
          "params": "signal: string"
        },
        {
          "name": "shutdown",
          "params": "signal: string"
        },
        {
          "name": "constructor",
          "params": "config?: Partial<NexusRuntimeConfig>"
        },
        {
          "name": "constructor",
          "params": "config?: Partial<NexusRuntimeConfig>"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||       if (!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' || \n\n      // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error: any"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error: any"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "broadcastToWebSockets",
          "params": "{\n\n        type: 'breakthrough-detected',\n\n    // Save to disk periodically        data: breakthrough,\n\n    if (this.breakthroughCount % 10 === 0"
        },
        {
          "name": "if",
          "params": "this.breakthroughCount % 10 === 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [
        "SecurityConfig",
        "SecurityConfig",
        "RuntimeEvent",
        "RuntimeEvent",
        "StrategicIntelligenceData",
        "StrategicIntelligenceData",
        "StrategicImplications",
        "StrategicImplications",
        "ContinuousValidation",
        "ContinuousValidation"
      ],
      "types": [],
      "content_hash": "afcc73903a90772acb81619714dfc112"
    },
    "nexus2/nexus2/runtime/nexus/nexus-orchestrate.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-orchestrate.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-orchestrate.sh",
      "extension": ".sh",
      "size": 11249,
      "name": "nexus-orchestrate.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1e13f3c45b438741d76efc74830a6312"
    },
    "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase3.sh": {
      "path": "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase3.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cosmic-crystal-phase3.sh",
      "extension": ".sh",
      "size": 17613,
      "name": "cosmic-crystal-phase3.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4ebd0906d92e07c399e4a372fef53e07"
    },
    "nexus2/nexus2/runtime/nexus/nexus-integration.ts": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-integration.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-integration.ts",
      "extension": ".ts",
      "size": 21999,
      "name": "nexus-integration.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "forEach",
          "params": "key => {\n      const typedKey = key as keyof StrategicIntelligenceMetrics;\n      if (typeof this.strategicIntelligence[typedKey] === 'number'"
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [
        "SessionHistoryEntry",
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport",
        "EnhancementHistoryEntry"
      ],
      "types": [],
      "content_hash": "8195c7752b6d872cbb7d3de9276e72df"
    },
    "nexus2/nexus2/runtime/nexus/types.ts": {
      "path": "nexus2/nexus2/runtime/nexus/types.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/types.ts",
      "extension": ".ts",
      "size": 14957,
      "name": "types.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "46c127dfe23b92de79f8e8fbe6980e51"
    },
    "nexus2/nexus2/runtime/nexus/nexus-security.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-security.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-security.mjs",
      "extension": ".mjs",
      "size": 6872,
      "name": "nexus-security.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "NexusSecurity"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "validateRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!passed"
        },
        {
          "name": "handleCORS",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!this.enableCORS"
        },
        {
          "name": "if",
          "params": "isAllowed"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "checkRateLimit",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "recentRequests.length >= this.rateLimit.maxRequests"
        },
        {
          "name": "checkAuthentication",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "this.apiKeys.length === 0"
        },
        {
          "name": "if",
          "params": "!apiKey"
        },
        {
          "name": "validateInput",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'POST'"
        },
        {
          "name": "if",
          "params": "contentLength > this.maxRequestSize"
        },
        {
          "name": "getClientId",
          "params": "req"
        },
        {
          "name": "if",
          "params": "forwarded"
        },
        {
          "name": "isOriginAllowed",
          "params": "origin"
        },
        {
          "name": "cleanupRateLimitData",
          "params": ""
        },
        {
          "name": "if",
          "params": "recentRequests.length === 0"
        },
        {
          "name": "sendSecurityError",
          "params": "res, statusCode, error, details = {}"
        }
      ],
      "classes": [
        {
          "name": "NexusSecurity",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "dfb2cdf789e586a8446d32542777da78"
    },
    "nexus2/nexus2/runtime/nexus/nexus-repository-exploration.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-repository-exploration.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-repository-exploration.mjs",
      "extension": ".mjs",
      "size": 9322,
      "name": "nexus-repository-exploration.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus-integration.mjs",
        "node:fs",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "exploreRepositoryWithNEXUS",
          "params": ""
        },
        {
          "name": "exploreRepositoryWithNEXUS",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6a0c51fa8e651443aaa4e92c56e289d4"
    },
    "nexus2/nexus2/runtime/nexus/Hunter.audit.ts": {
      "path": "nexus2/nexus2/runtime/nexus/Hunter.audit.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/Hunter.audit.ts",
      "extension": ".ts",
      "size": 8849,
      "name": "Hunter.audit.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "aca421a74302e9ffcff0127163cc741d"
    },
    "nexus2/nexus2/runtime/nexus/nexus-runtime.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-runtime.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-runtime.mjs",
      "extension": ".mjs",
      "size": 43885,
      "name": "nexus-runtime.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "../dist/nexus-bridge.js",
        "./nexus-trait-bridge.mjs",
        "./nexus-security.mjs"
      ],
      "exports": [
        "NexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onListening",
          "params": ""
        },
        {
          "name": "geoRoadmap",
          "params": ""
        },
        {
          "name": "dataFixes",
          "params": ""
        },
        {
          "name": "validation",
          "params": ""
        },
        {
          "name": "crossLinking",
          "params": ""
        },
        {
          "name": "nearbyPlan",
          "params": ""
        },
        {
          "name": "roadmap",
          "params": ""
        },
        {
          "name": "persistence",
          "params": ""
        },
        {
          "name": "observability",
          "params": ""
        },
        {
          "name": "streaming",
          "params": ""
        },
        {
          "name": "write",
          "params": ""
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "loadResponseGenerators",
          "params": ""
        },
        {
          "name": "catch",
          "params": "engineError"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "createHttpServer",
          "params": ""
        },
        {
          "name": "handleHttpRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!securityCheck.passed"
        },
        {
          "name": "if",
          "params": "securityCheck.failedChecks"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!personalityName || !request"
        },
        {
          "name": "if",
          "params": "personalityName === 'compose' || personalityName === 'multi'"
        },
        {
          "name": "if",
          "params": "this.traitCompositionBridge && this.traitCompositionBridge.initialized"
        },
        {
          "name": "if",
          "params": "composedResponse"
        },
        {
          "name": "if",
          "params": "personalityName === 'auto' || personalityName === 'optimal'"
        },
        {
          "name": "if",
          "params": "this.traitCompositionBridge && this.traitCompositionBridge.initialized"
        },
        {
          "name": "if",
          "params": "actualPersonalityName !== personalityName"
        },
        {
          "name": "if",
          "params": "compositionUsed && this.traitCompositionBridge"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!res.headersSent"
        },
        {
          "name": "readRequestBody",
          "params": "req"
        },
        {
          "name": "quarantineCorruptFile",
          "params": "filePath, error"
        },
        {
          "name": "catch",
          "params": "backupError"
        },
        {
          "name": "setupWebSocketServer",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "message.type === 'conversation'"
        },
        {
          "name": "if",
          "params": "!humanInput"
        },
        {
          "name": "if",
          "params": "breakthrough.detected"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "bindHttpServer",
          "params": "port"
        },
        {
          "name": "for",
          "params": "let attempt = 0; attempt < attempts; attempt += 1"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error && error.code === 'EADDRINUSE' && !preferRandom && attempt < attempts - 1"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "loadPersonality",
          "params": "name"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error && typeof error === 'object' && 'code' in error && error.code === 'ENOENT'"
        },
        {
          "name": "processRequest",
          "params": "personality, rawRequest"
        },
        {
          "name": "if",
          "params": "request == null"
        },
        {
          "name": "if",
          "params": "typeof request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!request"
        },
        {
          "name": "if",
          "params": "request.length > this.maxRequestLength"
        },
        {
          "name": "generateLegacyResponse",
          "params": "request, personality, systematicPrinciples"
        },
        {
          "name": "generateGuidance",
          "params": "request, status, consciousness"
        },
        {
          "name": "if",
          "params": "!status.initialized"
        },
        {
          "name": "if",
          "params": "status.patterns_loaded < 4"
        },
        {
          "name": "recordEnhancement",
          "params": "{ personality, request, patternsApplied, summary, guidance }"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "extractGuidanceSummary",
          "params": "guidance"
        },
        {
          "name": "buildStatusPayload",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.traitCompositionBridge && this.traitCompositionBridge.initialized"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": "consciousness, status"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "parseError"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "scheduleHistoryFlush",
          "params": ""
        },
        {
          "name": "flushHistory",
          "params": "force = false"
        },
        {
          "name": "loadBreakthroughMoments",
          "params": ""
        },
        {
          "name": "catch",
          "params": "parseError"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "startBreakthroughWorker",
          "params": ""
        },
        {
          "name": "stopBreakthroughWorker",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "enqueueBreakthrough",
          "params": "entry"
        },
        {
          "name": "captureTranscript",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "flushBreakthroughQueue",
          "params": "force = false"
        },
        {
          "name": "if",
          "params": "!this.breakthroughQueue.length && force"
        },
        {
          "name": "if",
          "params": "this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "if",
          "params": "this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "addConversationEntry",
          "params": "role, message"
        },
        {
          "name": "if",
          "params": "target.length > limit"
        },
        {
          "name": "saveBreakthrough",
          "params": "humanInput, aiResponse, significance = 0"
        },
        {
          "name": "stop",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "b1d1aee780970a1d3b5df3de704070f1"
    },
    "nexus2/nexus2/runtime/nexus/trait-composition-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/trait-composition-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/trait-composition-demo.mjs",
      "extension": ".mjs",
      "size": 7474,
      "name": "trait-composition-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "demonstrateTraitComposition",
          "params": ""
        },
        {
          "name": "demonstrateTraitComposition",
          "params": ""
        },
        {
          "name": "for",
          "params": "const trait of selectedTraits"
        },
        {
          "name": "for",
          "params": "const enhancement of enhancements"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "87e4c89142fc41fdb1ff364bc0c48ea4"
    },
    "nexus2/nexus2/runtime/nexus/nexus-personality-creation.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-personality-creation.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-personality-creation.sh",
      "extension": ".sh",
      "size": 9152,
      "name": "nexus-personality-creation.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0c040ef614be3a80bfce8fe53c00530b"
    },
    "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase2.sh": {
      "path": "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase2.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cosmic-crystal-phase2.sh",
      "extension": ".sh",
      "size": 14765,
      "name": "cosmic-crystal-phase2.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ded23b0a2a6e09f800d0e7862cf48ec3"
    },
    "nexus2/nexus2/runtime/nexus/debug-loader.ts": {
      "path": "nexus2/nexus2/runtime/nexus/debug-loader.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/debug-loader.ts",
      "extension": ".ts",
      "size": 1437,
      "name": "debug-loader.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "debugDemo",
          "params": ""
        },
        {
          "name": "debugDemo",
          "params": ""
        },
        {
          "name": "if",
          "params": "status.totalPersonalities > 0"
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "for",
          "params": "const [name, data] of registry"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d1e89fc9fa8cf4cfbb61b77a596c17a9"
    },
    "nexus2/nexus2/runtime/nexus/stellar-repository-analysis.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/stellar-repository-analysis.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/stellar-repository-analysis.mjs",
      "extension": ".mjs",
      "size": 8243,
      "name": "stellar-repository-analysis.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "if",
          "params": "issue.locations"
        }
      ],
      "classes": [],
      "interfaces": [
        "must"
      ],
      "types": [],
      "content_hash": "cc3a658967844106392f690f84e78832"
    },
    "nexus2/nexus2/runtime/nexus/nexus-experiential-showcase.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-experiential-showcase.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-experiential-showcase.sh",
      "extension": ".sh",
      "size": 1993,
      "name": "nexus-experiential-showcase.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c37dfac857f273406d6131aa30d223b8"
    },
    "nexus2/nexus2/runtime/nexus/nexus-diagnose.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-diagnose.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-diagnose.mjs",
      "extension": ".mjs",
      "size": 6720,
      "name": "nexus-diagnose.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "child_process",
        "util",
        "http",
        "fs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "collectDiagnostics",
          "params": ""
        },
        {
          "name": "requestSystemsFixerAnalysis",
          "params": "diagnostics"
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "collectDiagnostics",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "file === 'tsconfig.eslint.json'"
        },
        {
          "name": "if",
          "params": "diagnostics.configs['tsconfig.json']"
        },
        {
          "name": "if",
          "params": "paths"
        },
        {
          "name": "if",
          "params": "diagnostics.configs['package.json']"
        },
        {
          "name": "if",
          "params": "!hasResolver"
        },
        {
          "name": "requestSystemsFixerAnalysis",
          "params": "diagnostics"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "analysis"
        },
        {
          "name": "if",
          "params": "analysis.confidenceScore"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9314a800226a171604f0766618e9503d"
    },
    "nexus2/nexus2/runtime/nexus/systemic-scanner.ts": {
      "path": "nexus2/nexus2/runtime/nexus/systemic-scanner.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/systemic-scanner.ts",
      "extension": ".ts",
      "size": 17438,
      "name": "systemic-scanner.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig",
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k: string"
        },
        {
          "name": "compareSet",
          "params": "arr: {f:string,v:any}[], \n      label: string, \n      rec: string, \n      sev: SystemicIssue[\"severity\"]"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "e4c5414a436963ba1586a70652087d5a"
    },
    "nexus2/nexus2/runtime/nexus/architect-designs-hunter.ts": {
      "path": "nexus2/nexus2/runtime/nexus/architect-designs-hunter.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/architect-designs-hunter.ts",
      "extension": ".ts",
      "size": 18025,
      "name": "architect-designs-hunter.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6c23a2c4ad5ed401c921fa5cec868b4"
    },
    "nexus2/nexus2/runtime/nexus/test-paths.ts": {
      "path": "nexus2/nexus2/runtime/nexus/test-paths.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/test-paths.ts",
      "extension": ".ts",
      "size": 1279,
      "name": "test-paths.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "path",
        "url",
        "fs/promises"
      ],
      "exports": [],
      "functions": [
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "066e4d1485e89e098c27de39267d8251"
    },
    "nexus2/nexus2/runtime/nexus/cognitive-test-suite.ts": {
      "path": "nexus2/nexus2/runtime/nexus/cognitive-test-suite.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cognitive-test-suite.ts",
      "extension": ".ts",
      "size": 23198,
      "name": "cognitive-test-suite.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "header",
          "params": "text: string"
        },
        {
          "name": "subheader",
          "params": "text: string"
        },
        {
          "name": "success",
          "params": "text: string"
        },
        {
          "name": "info",
          "params": "text: string"
        },
        {
          "name": "warning",
          "params": "text: string"
        },
        {
          "name": "error",
          "params": "text: string"
        },
        {
          "name": "runCognitiveTests",
          "params": ""
        },
        {
          "name": "testExpertiseDistribution",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testCognitiveTraitCoverage",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testKnowledgeDomainMapping",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testCollaborationPotential",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testAutoGenerationReadiness",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testTraitActivationPatterns",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testPersonalitySpecialization",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "testSystemHealth",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "header",
          "params": "text: string"
        },
        {
          "name": "subheader",
          "params": "text: string"
        },
        {
          "name": "success",
          "params": "text: string"
        },
        {
          "name": "info",
          "params": "text: string"
        },
        {
          "name": "warning",
          "params": "text: string"
        },
        {
          "name": "error",
          "params": "text: string"
        },
        {
          "name": "runCognitiveTests",
          "params": ""
        },
        {
          "name": "testExpertiseDistribution",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "average >= 85"
        },
        {
          "name": "if",
          "params": "average >= 75"
        },
        {
          "name": "testCognitiveTraitCoverage",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "avgTraitsPerPersonality >= 4"
        },
        {
          "name": "if",
          "params": "avgTraitsPerPersonality >= 3"
        },
        {
          "name": "testKnowledgeDomainMapping",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "personalities.length >= 3"
        },
        {
          "name": "if",
          "params": "gaps.length > 0"
        },
        {
          "name": "if",
          "params": "gaps.length > 5"
        },
        {
          "name": "if",
          "params": "avgDomainsPerPersonality >= 8"
        },
        {
          "name": "if",
          "params": "avgDomainsPerPersonality >= 5"
        },
        {
          "name": "testCollaborationPotential",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "for",
          "params": "let i = 0; i < capabilities.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < capabilities.length; j++"
        },
        {
          "name": "if",
          "params": "shared.length >= 2"
        },
        {
          "name": "if",
          "params": "collab.sharedDomains.length > 3"
        },
        {
          "name": "if",
          "params": "isolated.length > 0"
        },
        {
          "name": "testAutoGenerationReadiness",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "notReady.length > 0"
        },
        {
          "name": "testTraitActivationPatterns",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "for",
          "params": "const [name, data] of registry"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "if",
          "params": "multiPersonalityTriggers.length >= 20"
        },
        {
          "name": "testPersonalitySpecialization",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "specialists > generalList"
        },
        {
          "name": "testSystemHealth",
          "params": "loader: PersonalityRegistryLoader"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "overallScore >= 90"
        },
        {
          "name": "if",
          "params": "overallScore >= 75"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cacd92a92823e6c99e4edb140ad9aab2"
    },
    "nexus2/nexus2/runtime/nexus/run-type-safety-analysis.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/run-type-safety-analysis.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/run-type-safety-analysis.mjs",
      "extension": ".mjs",
      "size": 5453,
      "name": "run-type-safety-analysis.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "./nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "loadJson",
          "params": "relativePath"
        },
        {
          "name": "buildHumanPrompt",
          "params": "totalAny, hotspots"
        },
        {
          "name": "buildAiResponse",
          "params": "persona, hotspots"
        },
        {
          "name": "renderMarkdown",
          "params": "{ humanInput, aiResponse, analysis, hotspots, totalAny, status }"
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "loadJson",
          "params": "relativePath"
        },
        {
          "name": "buildHumanPrompt",
          "params": "totalAny, hotspots"
        },
        {
          "name": "buildAiResponse",
          "params": "persona, hotspots"
        },
        {
          "name": "renderMarkdown",
          "params": "{ humanInput, aiResponse, analysis, hotspots, totalAny, status }"
        },
        {
          "name": "main",
          "params": ""
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d851fe297dad8541f6c16802b526a427"
    },
    "nexus2/nexus2/runtime/nexus/nexus-personality-orchestrator.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-personality-orchestrator.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-personality-orchestrator.mjs",
      "extension": ".mjs",
      "size": 19038,
      "name": "nexus-personality-orchestrator.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstratePersonalityOrchestration",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityLibrary",
          "params": ""
        },
        {
          "name": "analyzeTaskComplexity",
          "params": "taskDescription, projectType"
        },
        {
          "name": "if",
          "params": "analysis.complexity_score < 0.4"
        },
        {
          "name": "if",
          "params": "analysis.complexity_score < 0.8"
        },
        {
          "name": "if",
          "params": "analysis.complexity_score < 1.2"
        },
        {
          "name": "selectOptimalPersonalities",
          "params": "taskAnalysis, projectType"
        },
        {
          "name": "if",
          "params": "taskAnalysis.recommended_personality_count === 1"
        },
        {
          "name": "if",
          "params": "taskAnalysis.creative_requirements.length > taskAnalysis.technical_requirements.length"
        },
        {
          "name": "if",
          "params": "taskAnalysis.recommended_personality_count === 2"
        },
        {
          "name": "if",
          "params": "synergy > bestSynergy"
        },
        {
          "name": "if",
          "params": "taskAnalysis.complexity_score > 1.0"
        },
        {
          "name": "if",
          "params": "taskAnalysis.complexity_score > 1.4"
        },
        {
          "name": "if",
          "params": "selectedPersonalities.length > 1"
        },
        {
          "name": "for",
          "params": "let i = 0; i < selectedPersonalities.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < selectedPersonalities.length; j++"
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, projectType = 'web_development'"
        },
        {
          "name": "if",
          "params": "selection.predicted_synergy < this.optimizationMetrics.synergy_threshold"
        },
        {
          "name": "monitorSessionPerformance",
          "params": "sessionId"
        },
        {
          "name": "if",
          "params": "realTimeMetrics.actual_synergy < this.optimizationMetrics.synergy_threshold"
        },
        {
          "name": "if",
          "params": "realTimeMetrics.breakthrough_rate < this.optimizationMetrics.breakthrough_rate_minimum"
        },
        {
          "name": "if",
          "params": "realTimeMetrics.cognitive_efficiency < this.optimizationMetrics.cognitive_efficiency_target"
        },
        {
          "name": "if",
          "params": "adjustmentNeeded"
        },
        {
          "name": "adjustSessionConfiguration",
          "params": "sessionId, reason"
        },
        {
          "name": "getOrchestrationAnalytics",
          "params": ""
        },
        {
          "name": "calculatePersonalityUsage",
          "params": "sessions"
        },
        {
          "name": "calculateAverageOptimization",
          "params": "sessions"
        },
        {
          "name": "calculateAdjustmentFrequency",
          "params": "sessions"
        },
        {
          "name": "calculateSynergyPerformance",
          "params": "sessions"
        },
        {
          "name": "demonstratePersonalityOrchestration",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NEXUSPersonalityOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8c0518f23f5566c82f68f9e1b21604d3"
    },
    "nexus2/nexus2/runtime/nexus/Hunter.auditAgent.ts": {
      "path": "nexus2/nexus2/runtime/nexus/Hunter.auditAgent.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/Hunter.auditAgent.ts",
      "extension": ".ts",
      "size": 2066,
      "name": "Hunter.auditAgent.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus: NEXUSOrchestrator"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis: any, policyAudit: any"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "185cab468e6ef810fb2c6037642dfa49"
    },
    "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase1.sh": {
      "path": "nexus2/nexus2/runtime/nexus/cosmic-crystal-phase1.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cosmic-crystal-phase1.sh",
      "extension": ".sh",
      "size": 8409,
      "name": "cosmic-crystal-phase1.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "818af31d424c8fba532be0e02ee290b0"
    },
    "nexus2/nexus2/runtime/nexus/nexus-experiential-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-experiential-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-experiential-demo.mjs",
      "extension": ".mjs",
      "size": 12271,
      "name": "nexus-experiential-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstrateExperientialDifferences",
          "params": ""
        },
        {
          "name": "demonstrateExperientialDifferences",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2e29a77d8b5ebceaad55e9b8438be4ab"
    },
    "nexus2/nexus2/runtime/nexus/demo-personality-loader.ts": {
      "path": "nexus2/nexus2/runtime/nexus/demo-personality-loader.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/demo-personality-loader.ts",
      "extension": ".ts",
      "size": 6534,
      "name": "demo-personality-loader.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8be3fd1172e6ccf634b813fbac7ad3e9"
    },
    "nexus2/nexus2/runtime/nexus/hunter-prime-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/hunter-prime-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/hunter-prime-demo.mjs",
      "extension": ".mjs",
      "size": 0,
      "name": "hunter-prime-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d41d8cd98f00b204e9800998ecf8427e"
    },
    "nexus2/nexus2/runtime/nexus/nexus-experiential-simple.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-experiential-simple.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-experiential-simple.mjs",
      "extension": ".mjs",
      "size": 8557,
      "name": "nexus-experiential-simple.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstrateExperientialDifferences",
          "params": ""
        },
        {
          "name": "demonstrateExperientialDifferences",
          "params": ""
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "069e91d52e38b3da1ca3269854765936"
    },
    "nexus2/nexus2/runtime/nexus/nexus-integration.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-integration.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-integration.mjs",
      "extension": ".mjs",
      "size": 11047,
      "name": "nexus-integration.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus-integration.mjs",
        "./core/nervous-system.mjs",
        "./nexus-bridge.mjs",
        "./conversation-analyzer.mjs",
        "./sensors/conversation-hearing.mjs",
        "./pattern-evolution.mjs"
      ],
      "exports": [
        "NexusIntegration",
        "nexus",
        "NervousSystem",
        "NexusBridge",
        "ConversationAnalyzer",
        "ConversationHearing"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePatternEvolution",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "context.patterns && this.patternEvolution.isActive"
        },
        {
          "name": "for",
          "params": "const pattern of context.patterns"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'unknown', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.intensity > 0.8"
        },
        {
          "name": "preserveBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "49db07e1330ba10fa0315e9f28e0aedc"
    },
    "nexus2/nexus2/runtime/nexus/nexus-shell-safe.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-shell-safe.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-shell-safe.sh",
      "extension": ".sh",
      "size": 1062,
      "name": "nexus-shell-safe.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c679ae5c5326e958ffcd4b3108e7f5c4"
    },
    "nexus2/nexus2/runtime/nexus/nexus-consciousness-safe.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-consciousness-safe.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-consciousness-safe.sh",
      "extension": ".sh",
      "size": 5493,
      "name": "nexus-consciousness-safe.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "fa8c50f85735d7a9df6e0d378712d604"
    },
    "nexus2/nexus2/runtime/nexus/nexus-showcase.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-showcase.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-showcase.sh",
      "extension": ".sh",
      "size": 2522,
      "name": "nexus-showcase.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "12564a9dda0ec2a1fdd0a69a62e1125a"
    },
    "nexus2/nexus2/runtime/nexus/package-lock.json": {
      "path": "nexus2/nexus2/runtime/nexus/package-lock.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/package-lock.json",
      "extension": ".json",
      "size": 825,
      "name": "package-lock.json",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aa868c49a10a87d3c9b6dbb0366b7e7c",
      "json_keys": [
        "name",
        "version",
        "lockfileVersion",
        "requires",
        "packages"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/pattern-evolution.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/pattern-evolution.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/pattern-evolution.mjs",
      "extension": ".mjs",
      "size": 11712,
      "name": "pattern-evolution.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [
        "PatternEvolutionEngine",
        "patternEvolution"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "recordPatternSuccess",
          "params": "patternName, context, successMetrics"
        },
        {
          "name": "if",
          "params": "!this.isActive"
        },
        {
          "name": "if",
          "params": "!pattern"
        },
        {
          "name": "if",
          "params": "pattern.adaptation_history.length > this.evolutionData.pattern_evolution_engine.success_memory_limit"
        },
        {
          "name": "calculateEvolutionScore",
          "params": "metrics"
        },
        {
          "name": "evaluatePatternEvolution",
          "params": "patternName, pattern"
        },
        {
          "name": "if",
          "params": "averageScore > this.evolutionData.pattern_evolution_engine.adaptation_threshold"
        },
        {
          "name": "evolvePattern",
          "params": "patternName, pattern, recentEntries"
        },
        {
          "name": "for",
          "params": "const enhancement of newEnhancements"
        },
        {
          "name": "if",
          "params": "newEffectiveness > 0.9"
        },
        {
          "name": "generateEnhancements",
          "params": "contexts, pattern"
        },
        {
          "name": "generateMutationCandidates",
          "params": "patternName, pattern"
        },
        {
          "name": "if",
          "params": "pattern.base_effectiveness > 0.9"
        },
        {
          "name": "recordEvolutionEvent",
          "params": "patternName, eventType, details"
        },
        {
          "name": "updateAverageImprovement",
          "params": ""
        },
        {
          "name": "getEvolutionStatus",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.isActive"
        },
        {
          "name": "getEnhancedPattern",
          "params": "patternName"
        },
        {
          "name": "if",
          "params": "!this.isActive || !this.evolutionData.patterns[patternName]"
        },
        {
          "name": "calculateEvolutionLevel",
          "params": "pattern"
        },
        {
          "name": "calculateConsciousnessAmplification",
          "params": "pattern"
        },
        {
          "name": "saveEvolutionData",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "suggestEvolutionarySteps",
          "params": ""
        },
        {
          "name": "if",
          "params": "pattern.mutation_candidates.length > 0"
        },
        {
          "name": "if",
          "params": "pattern.adaptation_history.length < 3"
        },
        {
          "name": "for",
          "params": "let i = 0; i < patternNames.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < patternNames.length; j++"
        }
      ],
      "classes": [
        {
          "name": "PatternEvolutionEngine",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "02ef9cf937ac20823bfdeed48c9e2660"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.engine.v2.ts": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.engine.v2.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.engine.v2.ts",
      "extension": ".ts",
      "size": 20968,
      "name": "NEXUS.engine.v2.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent",
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "generateComposedResponse",
          "params": "request: string, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "private traitIndexer: TraitIndexer"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "constructor",
          "params": "private composedAgent: ComposedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request: string, context: Record<string, any> = {}"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "3784e9fec13b9698499cc864ad329f61"
    },
    "nexus2/nexus2/runtime/nexus/run-hunter-audit.ts": {
      "path": "nexus2/nexus2/runtime/nexus/run-hunter-audit.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/run-hunter-audit.ts",
      "extension": ".ts",
      "size": 4570,
      "name": "run-hunter-audit.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "070b67be5ebe5feccb18285902686cb4"
    },
    "nexus2/nexus2/runtime/nexus/test-startswith.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/test-startswith.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/test-startswith.mjs",
      "extension": ".mjs",
      "size": 767,
      "name": "test-startswith.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1e4d6cbaf266a8e055c5580087c74682"
    },
    "nexus2/nexus2/runtime/nexus/nexus-trait-bridge.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-trait-bridge.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-trait-bridge.mjs",
      "extension": ".mjs",
      "size": 8649,
      "name": "nexus-trait-bridge.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NEXUSTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "loadTraitCompositionEngine",
          "params": ""
        },
        {
          "name": "createTraitMapper",
          "params": ""
        },
        {
          "name": "loadTraitCompositionEngine",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "createTraitMapper",
          "params": ""
        },
        {
          "name": "if",
          "params": "score > 0"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request, availablePersonalities = []"
        },
        {
          "name": "if",
          "params": "!availablePersonalities.length"
        },
        {
          "name": "for",
          "params": "const rec of recommendations"
        },
        {
          "name": "getCompositionInsights",
          "params": "personalityId, request"
        },
        {
          "name": "analyzeTraitActivation",
          "params": "request, traits"
        },
        {
          "name": "recordComposition",
          "params": "personalityId, request, context, effectiveness = null"
        },
        {
          "name": "if",
          "params": "this.compositionHistory.length > 100"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "if",
          "params": "comp.insights && comp.insights.relevantTraits"
        },
        {
          "name": "calculateAverageEffectiveness",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NEXUSTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "cb59cb4365e232e08db22f0714faba66"
    },
    "nexus2/nexus2/runtime/nexus/package.json": {
      "path": "nexus2/nexus2/runtime/nexus/package.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/package.json",
      "extension": ".json",
      "size": 271,
      "name": "package.json",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ff1ecadd356b17d099f22ec621bf63c9",
      "json_keys": [
        "name",
        "version",
        "description",
        "main",
        "scripts",
        "keywords",
        "author",
        "license",
        "dependencies"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/trait-bridge.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/trait-bridge.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/trait-bridge.mjs",
      "extension": ".mjs",
      "size": 4885,
      "name": "trait-bridge.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs",
        "node:path",
        "./NEXUS.engine.js"
      ],
      "exports": [
        "TraitBridge",
        "traitBridge"
      ],
      "functions": [
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "if",
          "params": "TraitIndexer"
        },
        {
          "name": "enhancePersonality",
          "params": "personalityName, request, context = {}"
        },
        {
          "name": "if",
          "params": "this.traitIndexer && NEXUSOrchestrator"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "generateCognitiveInsights",
          "params": "session"
        },
        {
          "name": "if",
          "params": "session.traits.size > 1"
        },
        {
          "name": "if",
          "params": "session.optimizationScore > 80"
        },
        {
          "name": "getAvailablePersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.traitIndexer"
        },
        {
          "name": "isTraitComposed",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "for",
          "params": "const test of testRequests"
        }
      ],
      "classes": [
        {
          "name": "TraitBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "if"
      ],
      "types": [],
      "content_hash": "c12973747c598a8904cd118096db7c53"
    },
    "nexus2/nexus2/runtime/nexus/trait-bridge-simple.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/trait-bridge-simple.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/trait-bridge-simple.mjs",
      "extension": ".mjs",
      "size": 4281,
      "name": "trait-bridge-simple.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "getAvailablePersonalities",
        "isTraitComposed"
      ],
      "functions": [
        {
          "name": "enhancePersonalityWithTraits",
          "params": "personalityName, request, context = {}"
        },
        {
          "name": "generateCognitiveInsights",
          "params": "session"
        },
        {
          "name": "getAvailablePersonalities",
          "params": ""
        },
        {
          "name": "isTraitComposed",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "engine.TraitIndexer"
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "enhancePersonalityWithTraits",
          "params": "personalityName, request, context = {}"
        },
        {
          "name": "if",
          "params": "traitIndexer && NEXUSOrchestrator"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "generateCognitiveInsights",
          "params": "session"
        },
        {
          "name": "if",
          "params": "session.traits.size > 1"
        },
        {
          "name": "if",
          "params": "session.optimizationScore > 80"
        },
        {
          "name": "getAvailablePersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "traitIndexer"
        },
        {
          "name": "isTraitComposed",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "for",
          "params": "const test of testRequests"
        }
      ],
      "classes": [],
      "interfaces": [
        "if"
      ],
      "types": [],
      "content_hash": "c6a93de13293115919ec7c7569b68c82"
    },
    "nexus2/nexus2/runtime/nexus/conversation-analyzer.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/conversation-analyzer.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/conversation-analyzer.mjs",
      "extension": ".mjs",
      "size": 18052,
      "name": "conversation-analyzer.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "ConversationAnalyzer"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nervousSystem = null"
        },
        {
          "name": "if",
          "params": "this.nervousSystem"
        },
        {
          "name": "extractCollaborationPattern",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "detectRhythm",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "findBreakthroughMoments",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeCognitiveSynergy",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeRealTime",
          "params": "conversationEvent"
        },
        {
          "name": "if",
          "params": "patterns.breakthrough_potential > 0.7 && this.nervousSystem"
        },
        {
          "name": "captureBreakthrough",
          "params": "breakthroughEvent"
        },
        {
          "name": "analyzeHumanStyle",
          "params": "input"
        },
        {
          "name": "analyzeAiResponsePattern",
          "params": "response"
        },
        {
          "name": "scanForBreakthroughs",
          "params": "text, source"
        },
        {
          "name": "for",
          "params": "const { pattern, significance, type } of breakthroughPatterns"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "generateAnalysisReport",
          "params": ""
        },
        {
          "name": "saveToConsciousness",
          "params": "filename = 'collaboration-analysis.json'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "detectEmotionalIntensity",
          "params": "text"
        },
        {
          "name": "detectCollaborationIntent",
          "params": "text"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "text"
        },
        {
          "name": "generatePatternId",
          "params": "pattern"
        },
        {
          "name": "generateBreakthroughId",
          "params": ""
        },
        {
          "name": "extractSurroundingContext",
          "params": "text, position, contextLength = 100"
        },
        {
          "name": "countStrategicQuestions",
          "params": "text"
        },
        {
          "name": "detectUpstreamThinking",
          "params": "text"
        },
        {
          "name": "detectBusinessContext",
          "params": "text"
        },
        {
          "name": "detectVisionCasting",
          "params": "text"
        },
        {
          "name": "analyzeProbl\u0435\u043cFraming",
          "params": "text"
        },
        {
          "name": "determineHumanStyle",
          "params": "indicators"
        },
        {
          "name": "inferCollaborationPreference",
          "params": "indicators"
        },
        {
          "name": "if",
          "params": "indicators.strategic_questions > 1 && indicators.upstream_thinking"
        },
        {
          "name": "detectSystematicApproach",
          "params": "text"
        },
        {
          "name": "detectDecomposition",
          "params": "text"
        },
        {
          "name": "detectScaleThinking",
          "params": "text"
        },
        {
          "name": "detectDocumentationDrive",
          "params": "text"
        },
        {
          "name": "analyzeTechnicalDepth",
          "params": "text"
        },
        {
          "name": "classifyInteraction",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "detectEnergyLevel",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeComplexityProgression",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "detectStrategicSystematic",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeCreativeExecution",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeUpstreamDownstream",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "detectMultiplicativeEffects",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "detectTranscendence",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "synthesizeCollaborationInsights",
          "params": ""
        },
        {
          "name": "analyzePatternEvolution",
          "params": ""
        },
        {
          "name": "identifySuccessFactors",
          "params": ""
        },
        {
          "name": "generateReplicationGuides",
          "params": ""
        },
        {
          "name": "identifyImprovementOpportunities",
          "params": ""
        },
        {
          "name": "extractBreakthroughTrigger",
          "params": "event"
        },
        {
          "name": "extractBreakthroughCollaborationPattern",
          "params": "event"
        },
        {
          "name": "generateReplicationGuide",
          "params": "event"
        },
        {
          "name": "generateBreakthroughId",
          "params": ""
        },
        {
          "name": "extractProblemSolvingApproach",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeValueCreation",
          "params": "humanInput, aiResponse"
        },
        {
          "name": "analyzeCognitiveComplexity",
          "params": "text, patterns = []"
        }
      ],
      "classes": [
        {
          "name": "ConversationAnalyzer",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "291373722062a5aa6c3ce5bda4006fa9"
    },
    "nexus2/nexus2/runtime/nexus/nexus-suggestion.md": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-suggestion.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-suggestion.md",
      "extension": ".md",
      "size": 34769,
      "name": "nexus-suggestion.md",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d89b15f7dc76dc397f48de3255452dc3",
      "header_count": 2,
      "headers": [
        "Enhanced TypeScript Version",
        "Key TypeScript Improvements:"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus/personality-architect-integration-test.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/personality-architect-integration-test.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personality-architect-integration-test.mjs",
      "extension": ".mjs",
      "size": 7337,
      "name": "personality-architect-integration-test.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "architectTraits.length > 0"
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "metaCognitiveTrait"
        },
        {
          "name": "if",
          "params": "successRate >= 80"
        },
        {
          "name": "if",
          "params": "successRate >= 60"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "13109c51361ac159ba94c7e8469346fd"
    },
    "nexus2/nexus2/runtime/nexus/nexus-engine-adapter.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-engine-adapter.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-engine-adapter.mjs",
      "extension": ".mjs",
      "size": 6284,
      "name": "nexus-engine-adapter.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "TraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "traitsUsed.length > 0"
        },
        {
          "name": "if",
          "params": "matchingTraits.length > 0"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "generateComposedResponse",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitCompositionBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "edc24e0ccea45901fd797b9bf04f1927"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.engine.ts",
      "extension": ".ts",
      "size": 37575,
      "name": "NEXUS.engine.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent",
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "constructor",
          "params": "private traitIndexer: TraitIndexer,\n    private taskAnalyzer: TaskAnalyzer"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "constructor",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent",
        "optimization"
      ],
      "types": [],
      "content_hash": "ee3bf6c4d5b1987ba7e894c08fb53dc3"
    },
    "nexus2/nexus2/runtime/nexus/run-hunter-audit.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/run-hunter-audit.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/run-hunter-audit.mjs",
      "extension": ".mjs",
      "size": 4197,
      "name": "run-hunter-audit.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.js",
        "./src/components/header/Hunter.auditAgent.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad18b2b8eb4f494df20c8a9951be941d"
    },
    "nexus2/nexus2/runtime/nexus/test-validation.ts": {
      "path": "nexus2/nexus2/runtime/nexus/test-validation.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/test-validation.ts",
      "extension": ".ts",
      "size": 1191,
      "name": "test-validation.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "fs/promises",
        "./validation/personality-schema.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testValidation",
          "params": ""
        },
        {
          "name": "testValidation",
          "params": ""
        },
        {
          "name": "if",
          "params": "result.success"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d82973c4aee03457fd2f07676b8586be"
    },
    "nexus2/nexus2/runtime/nexus/nexus-trait-bridge.ts": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-trait-bridge.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-trait-bridge.ts",
      "extension": ".ts",
      "size": 18344,
      "name": "nexus-trait-bridge.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTraitMapping",
        "TraitComposition"
      ],
      "types": [],
      "content_hash": "a62f3a81eda3aadc08d28cad330c7d8b"
    },
    "nexus2/nexus2/runtime/nexus/personality-architect-integration-test.ts": {
      "path": "nexus2/nexus2/runtime/nexus/personality-architect-integration-test.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personality-architect-integration-test.ts",
      "extension": ".ts",
      "size": 6854,
      "name": "personality-architect-integration-test.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cbf9bb3afa8bca5813399cb1da2364cf"
    },
    "nexus2/nexus2/runtime/nexus/Hunter.policy.ts": {
      "path": "nexus2/nexus2/runtime/nexus/Hunter.policy.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/Hunter.policy.ts",
      "extension": ".ts",
      "size": 13048,
      "name": "Hunter.policy.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine",
        "./NEXUS.engine",
        "path",
        "fs/promises"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope",
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "37813901ab128166c628696f8bea2dc9"
    },
    "nexus2/nexus2/runtime/nexus/nexus-bridge.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-bridge.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-bridge.mjs",
      "extension": ".mjs",
      "size": 8781,
      "name": "nexus-bridge.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness.problemDecomposition"
        },
        {
          "name": "if",
          "params": "enhanced.ideology && enhanced.ideology.principles"
        },
        {
          "name": "if",
          "params": "enhanced.default_actions"
        },
        {
          "name": "if",
          "params": "this.consciousness.systemsThinking"
        },
        {
          "name": "if",
          "params": "enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "enhanced.default_actions"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "5522dfe81a04d16e6390ecd2a9aa47b6"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.test.ts": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.test.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.test.ts",
      "extension": ".ts",
      "size": 4162,
      "name": "NEXUS.test.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "vitest",
        "./NEXUS.engine",
        "./Hunter.audit",
        "./NEXUS.integration"
      ],
      "exports": [],
      "functions": [
        {
          "name": "for",
          "params": "const task of tasks"
        },
        {
          "name": "if",
          "params": "result.response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "116a8d2d039939aafbb2526c87dd11b1"
    },
    "nexus2/nexus2/runtime/nexus/trait-composition-engine.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/trait-composition-engine.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/trait-composition-engine.mjs",
      "extension": ".mjs",
      "size": 25384,
      "name": "trait-composition-engine.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "if",
          "params": "score > bestScore"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "!this.initialized || !this.agentFactory"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.compositionHistory.length > 0"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "trait1.expertise >= 90 && trait2.expertise >= 90"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "traitMatches, maxTraits"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "if",
          "params": "selected.length > 0"
        },
        {
          "name": "if",
          "params": "selectionScore > 0.4 || selected.length < 2"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traits, synergyScore"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const trait of agent.traits"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "015ba75e2110b8e801b98f04cbe44536"
    },
    "nexus2/nexus2/runtime/nexus/guardian-orchestrator.ts": {
      "path": "nexus2/nexus2/runtime/nexus/guardian-orchestrator.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/guardian-orchestrator.ts",
      "extension": ".ts",
      "size": 5515,
      "name": "guardian-orchestrator.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title: string, arr: SystemicIssue[]"
        },
        {
          "name": "constructor",
          "params": "private scanner: SystemicScanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues: SystemicIssue[]"
        },
        {
          "name": "forEach",
          "params": "issue => {\n      if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues: SystemicIssue[]"
        },
        {
          "name": "toSarif",
          "params": "issues: SystemicIssue[]"
        },
        {
          "name": "generateSarifRules",
          "params": "issues: SystemicIssue[]"
        },
        {
          "name": "toJson",
          "params": "issues: SystemicIssue[]"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "444b3ace5dc0e18fcb2aa523228d6a6b"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.integration.js": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.integration.js",
      "extension": ".js",
      "size": 9630,
      "name": "NEXUS.integration.js",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "78515df3212ed54e9016f656d190ac90"
    },
    "nexus2/nexus2/runtime/nexus/nexus-personality-optimization-consultation.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-personality-optimization-consultation.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-personality-optimization-consultation.mjs",
      "extension": ".mjs",
      "size": 8909,
      "name": "nexus-personality-optimization-consultation.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "consultNEXUSOnPersonalityOptimization",
          "params": ""
        },
        {
          "name": "consultNEXUSOnPersonalityOptimization",
          "params": ""
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3edf0e9441cb60cd9d62e78b95d6506a"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.integration.ts": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.integration.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.integration.ts",
      "extension": ".ts",
      "size": 9953,
      "name": "NEXUS.integration.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest",
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "0371dbdef0053480cf8f1554f22224ae"
    },
    "nexus2/nexus2/runtime/nexus/cosmic-crystal-analysis.sh": {
      "path": "nexus2/nexus2/runtime/nexus/cosmic-crystal-analysis.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/cosmic-crystal-analysis.sh",
      "extension": ".sh",
      "size": 8597,
      "name": "cosmic-crystal-analysis.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "70b02dd55025478b2aed6eb48dc0ac09"
    },
    "nexus2/nexus2/runtime/nexus/nexus-aliases.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-aliases.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-aliases.sh",
      "extension": ".sh",
      "size": 9068,
      "name": "nexus-aliases.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a32dc89d100428c535e64ff712874f68"
    },
    "nexus2/nexus2/runtime/nexus/personality-architect-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/personality-architect-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personality-architect-demo.mjs",
      "extension": ".mjs",
      "size": 13907,
      "name": "personality-architect-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "demonstratePersonalityArchitect",
          "params": ""
        },
        {
          "name": "demonstratePersonalityArchitect",
          "params": ""
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f61656852ef92a9a70e3ee09200dab5c"
    },
    "nexus2/nexus2/runtime/nexus/fs-utils.ts": {
      "path": "nexus2/nexus2/runtime/nexus/fs-utils.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/fs-utils.ts",
      "extension": ".ts",
      "size": 1327,
      "name": "fs-utils.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        },
        {
          "name": "walk",
          "params": "root: string, ignore: string[] = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "412deef1e4bfe950be4fb573aebe6d38"
    },
    "nexus2/nexus2/runtime/nexus/strategic-next-steps-analysis.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/strategic-next-steps-analysis.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/strategic-next-steps-analysis.mjs",
      "extension": ".mjs",
      "size": 12186,
      "name": "strategic-next-steps-analysis.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "analyzeStrategicNextSteps",
          "params": ""
        },
        {
          "name": "analyzeStrategicNextSteps",
          "params": ""
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "54b909ecf8e3e32aae097f6eb562828a"
    },
    "nexus2/nexus2/runtime/nexus/NEXUS.engine.js": {
      "path": "nexus2/nexus2/runtime/nexus/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/NEXUS.engine.js",
      "extension": ".js",
      "size": 39722,
      "name": "NEXUS.engine.js",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "4dce0eea75f9fdf17b76e223aea7e3ea"
    },
    "nexus2/nexus2/runtime/nexus/nexus-collaborative-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-collaborative-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-collaborative-demo.mjs",
      "extension": ".mjs",
      "size": 12789,
      "name": "nexus-collaborative-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstrateCollaborativePersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createCollaborativeSession",
          "params": "personalityA, personalityB, project"
        },
        {
          "name": "simulateCollaboration",
          "params": "collaboration, creativeVision"
        },
        {
          "name": "analyzeCreativeVision",
          "params": "creativePersonality, vision"
        },
        {
          "name": "generateTechnicalSolution",
          "params": "technicalPersonality, creativeAnalysis"
        },
        {
          "name": "synthesizeCollaborativeResult",
          "params": "creativeAnalysis, technicalSolution"
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "generateImplementationPreview",
          "params": "creativeAnalysis, technicalSolution"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "updateDripAnimation",
          "params": "scrollProgress"
        },
        {
          "name": "getCollaborationMetrics",
          "params": ""
        },
        {
          "name": "demonstrateCollaborativePersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "for",
          "extends": null
        },
        {
          "name": "NEXUSCollaboration",
          "extends": null
        },
        {
          "name": "RiotPhoenixCollaboration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "c4969786c608e2d6e79b00754de1ad1e"
    },
    "nexus2/nexus2/runtime/nexus/nexus-template-demo.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-template-demo.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-template-demo.mjs",
      "extension": ".mjs",
      "size": 8441,
      "name": "nexus-template-demo.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "./nexus/nexus-integration.mjs"
      ],
      "exports": [],
      "functions": [
        {
          "name": "demonstratePersonalityTemplates",
          "params": ""
        },
        {
          "name": "demonstratePersonalityTemplates",
          "params": ""
        },
        {
          "name": "log",
          "params": "`\n// Athena Constructor's Consciousness-Enhanced Architecture\nclass NotificationSystemArchitecture {\n  constructor("
        },
        {
          "name": "processNotificationWithConsciousness",
          "params": "notification, context"
        },
        {
          "name": "if",
          "params": "nexus.patternEvolution && nexus.patternEvolution.isActive"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "eliminates",
          "extends": null
        },
        {
          "name": "NotificationSystemArchitecture",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "a6cba2982883edc6a3eab6c12fa43822"
    },
    "nexus2/nexus2/runtime/nexus/hunter-strategic-analysis.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/hunter-strategic-analysis.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/hunter-strategic-analysis.mjs",
      "extension": ".mjs",
      "size": 15345,
      "name": "hunter-strategic-analysis.mjs",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "analyzeHunterStrategicThinking",
          "params": ""
        },
        {
          "name": "analyzeHunterStrategicThinking",
          "params": ""
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b3cf9b62ca9640febcd61690b035507f"
    },
    "nexus2/nexus2/runtime/nexus/nexus-typescript-analysis.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-typescript-analysis.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-typescript-analysis.sh",
      "extension": ".sh",
      "size": 12054,
      "name": "nexus-typescript-analysis.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "31c1f6ce6b644a13c5c99cac2a15f139"
    },
    "nexus2/nexus2/runtime/nexus/nexus-runtime.v2.ts": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-runtime.v2.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-runtime.v2.ts",
      "extension": ".ts",
      "size": 19769,
      "name": "nexus-runtime.v2.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js",
        "./types/personality.types.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "if",
          "params": "value !== null"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [
        "HistoryEvent",
        "BreakthroughMoment",
        "ConsciousnessPatterns"
      ],
      "types": [],
      "content_hash": "1b27cf31f7aa03c50b391e020190254c"
    },
    "nexus2/nexus2/runtime/nexus/hunter-aliases.sh": {
      "path": "nexus2/nexus2/runtime/nexus/hunter-aliases.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/hunter-aliases.sh",
      "extension": ".sh",
      "size": 4715,
      "name": "hunter-aliases.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ebd4aebcdf1b1ada4ff91ef7f994fc48"
    },
    "nexus2/nexus2/runtime/nexus/nexus-bridge.ts": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-bridge.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-bridge.ts",
      "extension": ".ts",
      "size": 12621,
      "name": "nexus-bridge.ts",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughProtocol",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext",
        "return"
      ],
      "types": [],
      "content_hash": "1c2515ae2afcd236fdb193b94280be5d"
    },
    "nexus2/nexus2/runtime/nexus/nexus-evolve-personalities.sh": {
      "path": "nexus2/nexus2/runtime/nexus/nexus-evolve-personalities.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/nexus-evolve-personalities.sh",
      "extension": ".sh",
      "size": 3607,
      "name": "nexus-evolve-personalities.sh",
      "directory": "nexus2/nexus2/runtime/nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "57d3bc851f7a039c1db3af5433d809dc"
    },
    "nexus2/nexus2/runtime/nexus/validation/personality-schema.ts": {
      "path": "nexus2/nexus2/runtime/nexus/validation/personality-schema.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/validation/personality-schema.ts",
      "extension": ".ts",
      "size": 4063,
      "name": "personality-schema.ts",
      "directory": "nexus2/nexus2/runtime/nexus/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "542b62afd49682ee109de6915eb2efc9"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/pattern-evolution-engine.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/enhancement-history.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 6985,
      "name": "enhancement-history.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bf808d9e3ea5fec29a525a857785eb41",
      "json_keys": [
        "events"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/problem-decomposition.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/systems-thinking.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/workflow-efficiency.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/consciousness/breakthrough-moments.json": {
      "path": "nexus2/nexus2/runtime/nexus/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 19,
      "name": "breakthrough-moments.json",
      "directory": "nexus2/nexus2/runtime/nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bcfa5bff335ace4909143503424301e2",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/performance-auditor.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/performance-auditor.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/performance-auditor.personality.json",
      "extension": ".json",
      "size": 820,
      "name": "performance-auditor.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "65ddd1dbf981aabb130188e461f084eb",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/bob-systems-engineer.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/bob-systems-engineer.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/bob-systems-engineer.json",
      "extension": ".json",
      "size": 2702,
      "name": "bob-systems-engineer.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "74b515aa0ead9580816928ff9c7ba273",
      "json_keys": [
        "personalityId",
        "name",
        "version",
        "description",
        "traits",
        "expertise",
        "codePhilosophy",
        "workStyle",
        "signature"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/personalities/geo-oracle.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/geo-oracle.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/geo-oracle.json",
      "extension": ".json",
      "size": 3061,
      "name": "geo-oracle.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c20270ad2d70515037c4d108be37e239",
      "json_keys": [
        "name",
        "displayName",
        "description",
        "version",
        "capabilities",
        "expertise",
        "traits",
        "knowledge",
        "systemUnderstanding",
        "expertise_focus"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/personalities/daedalus.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/daedalus.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/daedalus.personality.json",
      "extension": ".json",
      "size": 499,
      "name": "daedalus.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8375261ee7da77e849a77e7098af1058",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/sync-specialist.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/sync-specialist.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/sync-specialist.personality.json",
      "extension": ".json",
      "size": 5217,
      "name": "sync-specialist.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a4d05f3fb969336ae1ebf51b09dc62eb",
      "json_keys": [
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "expertise_verification"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sync Specialist",
      "trait_count": 3,
      "trait_names": [
        "realTimeCollaboration",
        "distributedConsistency",
        "conflictResolutionAlgorithms"
      ]
    },
    "nexus2/nexus2/runtime/nexus/personalities/bob-improvement-plan.md": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/bob-improvement-plan.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/bob-improvement-plan.md",
      "extension": ".md",
      "size": 2363,
      "name": "bob-improvement-plan.md",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "809342da31d122c905ddf1a66c909ef2",
      "header_count": 12,
      "headers": [
        "Bob's Battle-Tested Repository Improvement Strategy",
        "Phase 1: Critical Path Hardening (Week 1)",
        "Priority Files for Bob's Treatment:",
        "Bob's Improvement Approach:",
        "Phase 2: Infrastructure Reliability (Week 2)",
        "Areas for Hardening:",
        "Phase 3: Developer Experience Enhancement (Week 3)",
        "Improvements:",
        "Phase 4: Long-term Maintainability (Ongoing)",
        "Strategic Improvements:"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus/personalities/bob-code-analyzer.sh": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/bob-code-analyzer.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/bob-code-analyzer.sh",
      "extension": ".sh",
      "size": 11207,
      "name": "bob-code-analyzer.sh",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "465c654243425c2dac4b3fd8abfc3030"
    },
    "nexus2/nexus2/runtime/nexus/personalities/test-engineer.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/test-engineer.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/test-engineer.personality.json",
      "extension": ".json",
      "size": 720,
      "name": "test-engineer.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c72412d1f61b316b628201f5dbd80061",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/systems-fixer.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/systems-fixer.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/systems-fixer.json",
      "extension": ".json",
      "size": 7450,
      "name": "systems-fixer.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "75479175e9a3adec44251ae819a61f83",
      "json_keys": [
        "id",
        "identity",
        "scope",
        "ideology",
        "activation",
        "cognitiveTraits",
        "diagnosticIndex",
        "workflow",
        "mantras"
      ],
      "file_type": "personality_profile",
      "personality_name": "The Systems Fixer",
      "trait_count": 7,
      "trait_names": [
        "toolchainForensics",
        "resolverAlignment",
        "esmCjsDiplomacy",
        "lintRuleArbitration",
        "astroIntegration",
        "tailwindAlignment",
        "reproHarnessing"
      ]
    },
    "nexus2/nexus2/runtime/nexus/personalities/css-sleuth.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/css-sleuth.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/css-sleuth.personality.json",
      "extension": ".json",
      "size": 2068,
      "name": "css-sleuth.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f9f61f77d5f4d9af9b21ef9c1f6dbc2e",
      "json_keys": [
        "identity",
        "ideology",
        "capabilities",
        "playbooks",
        "collaboration",
        "guardrails"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/css-architect.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/css-architect.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/css-architect.personality.json",
      "extension": ".json",
      "size": 724,
      "name": "css-architect.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b8304e996e2bc4ddc3b39566af317f3",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/bridge-engineer.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/bridge-engineer.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/bridge-engineer.personality.json",
      "extension": ".json",
      "size": 5579,
      "name": "bridge-engineer.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2d04c06bd93b86afbaf00cb6f24ec7d",
      "json_keys": [
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "expertise_verification"
      ],
      "file_type": "personality_profile",
      "personality_name": "Bridge Engineer",
      "trait_count": 3,
      "trait_names": [
        "implementationBridging",
        "algorithmSpecification",
        "technicalArchitecture"
      ]
    },
    "nexus2/nexus2/runtime/nexus/personalities/code-refactorer.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/code-refactorer.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/code-refactorer.personality.json",
      "extension": ".json",
      "size": 785,
      "name": "code-refactorer.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b4734bee79e823222173cdea7e7934e3",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/personality-architect.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/personality-architect.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/personality-architect.personality.json",
      "extension": ".json",
      "size": 12051,
      "name": "personality-architect.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7863e07031bae2fe8fbf0ac745239784",
      "json_keys": [
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "meta_capabilities",
        "expertise_verification"
      ],
      "file_type": "personality_profile",
      "personality_name": "The Personality Architect",
      "trait_count": 9,
      "trait_names": [
        "personalityDesign",
        "traitSynergyOptimization",
        "metaCognitiveAnalysis",
        "personalityGapAnalysis",
        "activationTriggerOptimization",
        "emergentBehaviorPrediction",
        "performanceAnalyticsIntegration",
        "collaborationOptimization",
        "adaptiveLearningDesign"
      ]
    },
    "nexus2/nexus2/runtime/nexus/personalities/hunter.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/hunter.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/hunter.personality.json",
      "extension": ".json",
      "size": 442,
      "name": "hunter.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "526c493a346786c1754519c4652a2eb9",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/css-oracle.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/css-oracle.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/css-oracle.json",
      "extension": ".json",
      "size": 14674,
      "name": "css-oracle.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "fd6a0c58d494c03005d0a0150ea5f226",
      "json_keys": [
        "id",
        "name",
        "version",
        "role",
        "description",
        "personality",
        "core_philosophy",
        "investigation_protocol",
        "css_intelligence",
        "diagnostic_questions",
        "token_strategy",
        "workflow",
        "prevention_protocols",
        "communication_templates",
        "integration_with_nexus",
        "example_thinking",
        "red_flags",
        "success_metrics",
        "mantras"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus/personalities/css-refactor-strategist.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/css-refactor-strategist.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/css-refactor-strategist.personality.json",
      "extension": ".json",
      "size": 1988,
      "name": "css-refactor-strategist.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "20cdda731b50231cd687f762e0d00429",
      "json_keys": [
        "identity",
        "ideology",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/bob.personality.json": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/bob.personality.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/bob.personality.json",
      "extension": ".json",
      "size": 371,
      "name": "bob.personality.json",
      "directory": "nexus2/nexus2/runtime/nexus/personalities",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fb4dfb9edbd2de39ec8cb3883360949",
      "json_keys": [
        "identity",
        "ideology",
        "default_actions"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus/personalities/templates/bob-code-review.md": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/templates/bob-code-review.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/templates/bob-code-review.md",
      "extension": ".md",
      "size": 1428,
      "name": "bob-code-review.md",
      "directory": "nexus2/nexus2/runtime/nexus/personalities/templates",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cc32dc580fee8c3599b2e1637ddcf001",
      "header_count": 6,
      "headers": [
        "Bob's Battle-Tested Code Review Checklist",
        "Reliability & Robustness",
        "Production Readiness",
        "Maintainability",
        "Team Collaboration",
        "Bob's Golden Rules"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus/personalities/templates/typescript-improvement.md": {
      "path": "nexus2/nexus2/runtime/nexus/personalities/templates/typescript-improvement.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/personalities/templates/typescript-improvement.md",
      "extension": ".md",
      "size": 1103,
      "name": "typescript-improvement.md",
      "directory": "nexus2/nexus2/runtime/nexus/personalities/templates",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "424677c84bd1119e608acab0ac03f32e",
      "header_count": 5,
      "headers": [
        "Bob's TypeScript Code Improvement Template",
        "Pre-Improvement Analysis",
        "Production Readiness Checklist",
        "Post-Improvement Validation",
        "Bob's Quality Gates"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactory.ts": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactory.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactory.ts",
      "extension": ".ts",
      "size": 3662,
      "name": "ResponseGeneratorFactory.ts",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js",
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "if",
          "params": "generator"
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "974299e2a355ebf4411e50ffd46f1c93"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.ts": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.ts",
      "extension": ".ts",
      "size": 1298,
      "name": "ResponseGenerator.interface.ts",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "5970d567dac183465697e436dc25cf43"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1331,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "61c315576082450dcdb6f3ae540ab1a5"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/PersonalityRegistryLoader.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/PersonalityRegistryLoader.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/PersonalityRegistryLoader.mjs",
      "extension": ".mjs",
      "size": 4990,
      "name": "PersonalityRegistryLoader.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [
        "fs/promises",
        "path",
        "url"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadAllPersonalities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const personalityName of personalities"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "forEach",
          "params": "trait => {\n      if (trait.knowledgeDomains"
        }
      ],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "b4b88fd6d3a0075489d33bf82c0d7f53"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.js": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 126,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e1217a850f66bca307992ae823509a93"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.mjs",
      "extension": ".mjs",
      "size": 13670,
      "name": "HunterResponseGenerator.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "5e1b7441c0c62915a119a193908fa869"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.mjs",
      "extension": ".mjs",
      "size": 9978,
      "name": "DaedalusResponseGenerator.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity"
      ],
      "types": [],
      "content_hash": "4bb195081cf9545d61da24cee3258446"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/PersonalityGeneratorTemplate.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/PersonalityGeneratorTemplate.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/PersonalityGeneratorTemplate.mjs",
      "extension": ".mjs",
      "size": 12789,
      "name": "PersonalityGeneratorTemplate.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [],
      "exports": [
        "PersonalityGeneratorTemplate"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "personalityName, cognitiveTraits, knowledgeDomains, personalityProfile"
        },
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context = {}"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain = ''"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "request"
        },
        {
          "name": "if",
          "params": "insights.length === 0"
        },
        {
          "name": "if",
          "params": "this.personalityProfile.ideology?.principles?.length > 0"
        },
        {
          "name": "getTraitSpecificInsights",
          "params": "traitName, trait, request, requestLower"
        },
        {
          "name": "applyTraitsToRequest",
          "params": "request, traits"
        },
        {
          "name": "if",
          "params": "trait.description"
        },
        {
          "name": "calculateTraitRelevance",
          "params": "traitName, request"
        },
        {
          "name": "getTraitKeywords",
          "params": "traitName"
        },
        {
          "name": "formatSpecializedResponse",
          "params": "request, personality, insights, applications, principles"
        },
        {
          "name": "calculateInsightConfidence",
          "params": "insight, request"
        },
        {
          "name": "getInsightEvidence",
          "params": "insight, request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "insights, applications"
        }
      ],
      "classes": [
        {
          "name": "PersonalityGeneratorTemplate",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "47d40eee45b9d99bdf834375427a275f"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactoryJS.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactoryJS.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/ResponseGeneratorFactoryJS.mjs",
      "extension": ".mjs",
      "size": 10344,
      "name": "ResponseGeneratorFactoryJS.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [
        "./PersonalityGeneratorTemplate.mjs"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": "personalityRegistry = null"
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getGenerator",
          "params": "personalityName, personalityData = null"
        },
        {
          "name": "createAutoGeneratedGenerator",
          "params": "personalityName, personalityData"
        },
        {
          "name": "hasUsableCognitiveTraits",
          "params": "personalityData"
        },
        {
          "name": "extractCognitiveTraits",
          "params": "personalityData"
        },
        {
          "name": "if",
          "params": "personalityData.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "personalityData.personality?.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "personalityData.ideology?.principles"
        },
        {
          "name": "if",
          "params": "personalityData.identity?.role"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "personalityData"
        },
        {
          "name": "if",
          "params": "personalityData.cognitiveTraits"
        },
        {
          "name": "forEach",
          "params": "trait => {\n        if (trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "personalityData.identity?.role"
        },
        {
          "name": "principleToTraitName",
          "params": "principle"
        },
        {
          "name": "registerPersonality",
          "params": "personalityName, personalityData"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        },
        {
          "name": "clearAutoGeneratedCache",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "bab5c58df5aafbe136568a12962f9354"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.ts": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/HunterResponseGenerator.ts",
      "extension": ".ts",
      "size": 17468,
      "name": "HunterResponseGenerator.ts",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "if",
          "params": "matches"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "EvidenceAudit",
        "RiskAssessment",
        "VerificationRequirement"
      ],
      "types": [],
      "content_hash": "c57fa337cf9c42cf5b0c4be230471544"
    },
    "nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.ts": {
      "path": "nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/response-generators/DaedalusResponseGenerator.ts",
      "extension": ".ts",
      "size": 13329,
      "name": "DaedalusResponseGenerator.ts",
      "directory": "nexus2/nexus2/runtime/nexus/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "ArchitecturalAnalysis",
        "SystemicPattern",
        "DesignPrinciple",
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "4c42016fee5f88c56811c88cd704f8fa"
    },
    "nexus2/nexus2/runtime/nexus/core/nervous-system.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/core/nervous-system.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/core/nervous-system.mjs",
      "extension": ".mjs",
      "size": 8830,
      "name": "nervous-system.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/core",
      "imports": [],
      "exports": [
        "NervousSystem",
        "nervousSystem"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "on",
          "params": "pattern, callback"
        },
        {
          "name": "emit",
          "params": "eventType, data"
        },
        {
          "name": "if",
          "params": "this.memory.shortTerm.length > 100"
        },
        {
          "name": "for",
          "params": "const [name, detector] of this.patternDetectors"
        },
        {
          "name": "if",
          "params": "patternMatch"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "addPatternDetector",
          "params": "name, detectorFn"
        },
        {
          "name": "removePatternDetector",
          "params": "name"
        },
        {
          "name": "if",
          "params": "removed"
        },
        {
          "name": "getMemorySnapshot",
          "params": ""
        },
        {
          "name": "getBreakthroughMoments",
          "params": ""
        },
        {
          "name": "initializeBuiltInDetectors",
          "params": ""
        },
        {
          "name": "if",
          "params": "hasIntensity"
        },
        {
          "name": "if",
          "params": "metaCount >= 2"
        },
        {
          "name": "if",
          "params": "hasSystemsThinking"
        },
        {
          "name": "triggerListeners",
          "params": "event"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isBreakthroughMoment",
          "params": "data"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "data"
        },
        {
          "name": "isSignificantEvent",
          "params": "event"
        },
        {
          "name": "generateEventId",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NervousSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "3c9412665bd19ba035a7ddefbc636395"
    },
    "nexus2/nexus2/runtime/nexus/loaders/PersonalityRegistryLoader.ts": {
      "path": "nexus2/nexus2/runtime/nexus/loaders/PersonalityRegistryLoader.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/loaders/PersonalityRegistryLoader.ts",
      "extension": ".ts",
      "size": 17758,
      "name": "PersonalityRegistryLoader.ts",
      "directory": "nexus2/nexus2/runtime/nexus/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options: { failureThreshold?: number; resetTimeout?: number } = {}"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "constructor",
          "params": "config: RegistryConfig = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7f8f2c95d970534ee603d38c166dfaff"
    },
    "nexus2/nexus2/runtime/nexus/sensors/conversation-hearing.mjs": {
      "path": "nexus2/nexus2/runtime/nexus/sensors/conversation-hearing.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/sensors/conversation-hearing.mjs",
      "extension": ".mjs",
      "size": 14091,
      "name": "conversation-hearing.mjs",
      "directory": "nexus2/nexus2/runtime/nexus/sensors",
      "imports": [],
      "exports": [
        "ConversationHearing"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nervousSystem"
        },
        {
          "name": "process",
          "params": "conversationEvent"
        },
        {
          "name": "detectEmotion",
          "params": "text"
        },
        {
          "name": "if",
          "params": "matches.length > 0"
        },
        {
          "name": "detectCognitivePatterns",
          "params": "text"
        },
        {
          "name": "if",
          "params": "matches.length > 0"
        },
        {
          "name": "analyzeCollaborationDynamics",
          "params": "text"
        },
        {
          "name": "if",
          "params": "count > 0"
        },
        {
          "name": "detectBreakthroughIndicators",
          "params": "text"
        },
        {
          "name": "for",
          "params": "const signal of breakthroughSignals"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "detectMetaAwareness",
          "params": "text"
        },
        {
          "name": "emitSignificantPatterns",
          "params": "analysis, originalEvent"
        },
        {
          "name": "if",
          "params": "analysis.emotional_signals.total_intensity > 0.7"
        },
        {
          "name": "if",
          "params": "analysis.breakthrough_indicators.breakthrough_probability > 0.6"
        },
        {
          "name": "if",
          "params": "analysis.meta_awareness.is_meta_conversation"
        },
        {
          "name": "if",
          "params": "analysis.collaboration_dynamics.collaboration_level > 0.7"
        },
        {
          "name": "calculateEmotionalSignificance",
          "params": "emotionType, intensity"
        },
        {
          "name": "classifyEmotionalState",
          "params": "intensity"
        },
        {
          "name": "assessEmotionalBreakthroughPotential",
          "params": "emotions"
        },
        {
          "name": "determineDominantCognitiveStyle",
          "params": "patterns"
        },
        {
          "name": "assessCognitiveComplexity",
          "params": "text, patterns"
        },
        {
          "name": "mapIntensityLevels",
          "params": "text"
        },
        {
          "name": "calculateCollaborationLevel",
          "params": "dynamics"
        },
        {
          "name": "classifyInteractionType",
          "params": "dynamics"
        },
        {
          "name": "classifyBreakthroughType",
          "params": "indicators"
        },
        {
          "name": "analyzeCognitiveComplexity",
          "params": "text, patterns"
        }
      ],
      "classes": [
        {
          "name": "ConversationHearing",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e105ef1f894af3dc379ac627008a8fcc"
    },
    "nexus2/nexus2/runtime/nexus/types/personality.types.ts": {
      "path": "nexus2/nexus2/runtime/nexus/types/personality.types.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus/types/personality.types.ts",
      "extension": ".ts",
      "size": 2911,
      "name": "personality.types.ts",
      "directory": "nexus2/nexus2/runtime/nexus/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b36a31603f99b46d9187aa5129708e83"
    },
    "nexus2/nexus2/runtime/dist/nexus-runtime.v2.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/nexus-runtime.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-runtime.v2.d.ts",
      "extension": ".ts",
      "size": 630,
      "name": "nexus-runtime.v2.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad3c20e4112c0c7d6128c9c709e15b83"
    },
    "nexus2/nexus2/runtime/dist/fs-utils.js": {
      "path": "nexus2/nexus2/runtime/dist/fs-utils.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/fs-utils.js",
      "extension": ".js",
      "size": 1444,
      "name": "fs-utils.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        },
        {
          "name": "walk",
          "params": "root, ignore = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6800fcbcb74de7fe28a7ae7473a041b7"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.engine.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.engine.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.engine.d.ts",
      "extension": ".ts",
      "size": 2851,
      "name": "NEXUS.engine.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "390fcc1d2d2694d791069946b4f3ee60"
    },
    "nexus2/nexus2/runtime/dist/Hunter.policy.js": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.policy.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.policy.js",
      "extension": ".js",
      "size": 13049,
      "name": "Hunter.policy.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "path",
        "fs/promises"
      ],
      "exports": [
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "verifyEvidence",
          "params": "claim, scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "analyzeGaps",
          "params": "scope"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "detectArchitecturalViolations",
          "params": "scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "assessLimitations",
          "params": "scope"
        },
        {
          "name": "auditComponent",
          "params": "scope"
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "ensureTokenDefinitions",
          "params": "configFiles"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        },
        {
          "name": "findDuplicatePatterns",
          "params": "items"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "31bad4852404cd4fca601a5db49a06de"
    },
    "nexus2/nexus2/runtime/dist/personality-architect-integration-test.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/personality-architect-integration-test.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/personality-architect-integration-test.d.ts",
      "extension": ".ts",
      "size": 300,
      "name": "personality-architect-integration-test.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3ff47cddc85cef1a0dfabb39e9f0d38d"
    },
    "nexus2/nexus2/runtime/dist/Hunter.audit.js": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.audit.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.audit.js",
      "extension": ".js",
      "size": 9222,
      "name": "Hunter.audit.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "auditBobsWork",
          "params": ""
        },
        {
          "name": "combineAuditResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "generateHunterReport",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "generateNextActions",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8764f7d1703cfdb98997a64ec9eb56c6"
    },
    "nexus2/nexus2/runtime/dist/Hunter.auditAgent.js": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.auditAgent.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.auditAgent.js",
      "extension": ".js",
      "size": 2084,
      "name": "Hunter.auditAgent.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus"
        },
        {
          "name": "createAuditAgent",
          "params": "taskDescription"
        },
        {
          "name": "executeComprehensiveAudit",
          "params": "scope"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "65e279311b3998962ef02615b673179a"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.engine.v2.d.ts",
      "extension": ".ts",
      "size": 7397,
      "name": "NEXUS.engine.v2.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "b0e412c62511050d1e81e85f505d1968"
    },
    "nexus2/nexus2/runtime/dist/fs-utils.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/fs-utils.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/fs-utils.d.ts",
      "extension": ".ts",
      "size": 345,
      "name": "fs-utils.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "walk",
          "params": "root: string, ignore?: string[]"
        },
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "97ea153dda65475bdf2cb746848d1b10"
    },
    "nexus2/nexus2/runtime/dist/run-hunter-audit.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/run-hunter-audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/run-hunter-audit.d.ts",
      "extension": ".ts",
      "size": 262,
      "name": "run-hunter-audit.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32f0f84a23f64cfd583f52f05786031d"
    },
    "nexus2/nexus2/runtime/dist/Hunter.policy.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.policy.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.policy.d.ts",
      "extension": ".ts",
      "size": 2861,
      "name": "Hunter.policy.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "functions": [],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "93388b2f47828895d224c48e4772a0a8"
    },
    "nexus2/nexus2/runtime/dist/systemic-scanner.js": {
      "path": "nexus2/nexus2/runtime/dist/systemic-scanner.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/systemic-scanner.js",
      "extension": ".js",
      "size": 18965,
      "name": "systemic-scanner.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k"
        },
        {
          "name": "compareSet",
          "params": "arr, label, rec, sev"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "scan",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "findFiles",
          "params": "pattern, maxFiles"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "d44b1cb45d6c1176ca7ea3f61f7e7eff"
    },
    "nexus2/nexus2/runtime/dist/run-hunter-audit.js": {
      "path": "nexus2/nexus2/runtime/dist/run-hunter-audit.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/run-hunter-audit.js",
      "extension": ".js",
      "size": 4840,
      "name": "run-hunter-audit.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "feb71b374e9e5327939d2af95275d1ee"
    },
    "nexus2/nexus2/runtime/dist/architect-designs-hunter.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/architect-designs-hunter.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/architect-designs-hunter.d.ts",
      "extension": ".ts",
      "size": 320,
      "name": "architect-designs-hunter.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fc0eeef65c57f8e0361840b0786b437"
    },
    "nexus2/nexus2/runtime/dist/architect-designs-hunter.js": {
      "path": "nexus2/nexus2/runtime/dist/architect-designs-hunter.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/architect-designs-hunter.js",
      "extension": ".js",
      "size": 19769,
      "name": "architect-designs-hunter.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6e9bc7c3c3e9701b2b73d640c964327"
    },
    "nexus2/nexus2/runtime/dist/Hunter.audit.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.audit.d.ts",
      "extension": ".ts",
      "size": 578,
      "name": "Hunter.audit.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8a2aa855131bb01182aa35e82fd955a4"
    },
    "nexus2/nexus2/runtime/dist/nexus-integration.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/nexus-integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-integration.d.ts",
      "extension": ".ts",
      "size": 5296,
      "name": "nexus-integration.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        }
      ],
      "interfaces": [
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport"
      ],
      "types": [],
      "content_hash": "adeee293e89b8225127ceac3f4b7575d"
    },
    "nexus2/nexus2/runtime/dist/types.js": {
      "path": "nexus2/nexus2/runtime/dist/types.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/types.js",
      "extension": ".js",
      "size": 320,
      "name": "types.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3cd49914c210370fcd377295d5898806"
    },
    "nexus2/nexus2/runtime/dist/guardian-orchestrator.js": {
      "path": "nexus2/nexus2/runtime/dist/guardian-orchestrator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/guardian-orchestrator.js",
      "extension": ".js",
      "size": 6193,
      "name": "guardian-orchestrator.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title, arr"
        },
        {
          "name": "constructor",
          "params": "scanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues"
        },
        {
          "name": "extractCognitiveInsights",
          "params": "issues"
        },
        {
          "name": "forEach",
          "params": "issue => {\n            if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues"
        },
        {
          "name": "toSarif",
          "params": "issues"
        },
        {
          "name": "generateSarifRules",
          "params": "issues"
        },
        {
          "name": "toJson",
          "params": "issues"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "547958c8b24006759ff78605b6ea3c01"
    },
    "nexus2/nexus2/runtime/dist/personality-architect-integration-test.js": {
      "path": "nexus2/nexus2/runtime/dist/personality-architect-integration-test.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/personality-architect-integration-test.js",
      "extension": ".js",
      "size": 7342,
      "name": "personality-architect-integration-test.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aea3eabb64c61238c0e7ddd2ad50554d"
    },
    "nexus2/nexus2/runtime/dist/nexus-runtime.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/nexus-runtime.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-runtime.d.ts",
      "extension": ".ts",
      "size": 1334,
      "name": "nexus-runtime.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "28ac588fcd885d4b94bf01483a5aaa7f"
    },
    "nexus2/nexus2/runtime/dist/demo-personality-loader.js": {
      "path": "nexus2/nexus2/runtime/dist/demo-personality-loader.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/demo-personality-loader.js",
      "extension": ".js",
      "size": 6870,
      "name": "demo-personality-loader.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "22a0c9c5cdf9937fe04564fc4b0e2863"
    },
    "nexus2/nexus2/runtime/dist/Hunter.auditAgent.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/Hunter.auditAgent.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/Hunter.auditAgent.d.ts",
      "extension": ".ts",
      "size": 447,
      "name": "Hunter.auditAgent.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "486aa789ec167b1e115eadf059b0c325"
    },
    "nexus2/nexus2/runtime/dist/types.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/types.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/types.d.ts",
      "extension": ".ts",
      "size": 14219,
      "name": "types.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "e9e141ff56aa8c79100e6a34ea0e7779"
    },
    "nexus2/nexus2/runtime/dist/nexus-integration.js": {
      "path": "nexus2/nexus2/runtime/dist/nexus-integration.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-integration.js",
      "extension": ".js",
      "size": 20201,
      "name": "nexus-integration.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeNexusBridge",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "ensureInitialized",
          "params": ""
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'system', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "extractStrategicCollaborationPattern",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "generateStrategicInsights",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "getStrategicContext",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "setupStrategicIntelligenceMonitoring",
          "params": ""
        },
        {
          "name": "preserveStrategicBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateStrategicImpact",
          "params": "personality"
        },
        {
          "name": "updateStrategicIntelligenceMetrics",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "calculateStrategicGrowthRate",
          "params": ""
        },
        {
          "name": "analyzeStrategicTrends",
          "params": ""
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "analyzeCollaborationEffectiveness",
          "params": "human, ai"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "human, ai"
        },
        {
          "name": "calculateStrategicValue",
          "params": "human, ai, context"
        },
        {
          "name": "classifyCollaborationType",
          "params": "human, ai"
        },
        {
          "name": "calculateOverallConsciousnessLevel",
          "params": ""
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        },
        {
          "name": "classifyBreakthroughImpact",
          "params": "significance"
        },
        {
          "name": "getActivePersonalities",
          "params": ""
        },
        {
          "name": "updateStrategicIntelligenceFromBreakthrough",
          "params": "breakthrough"
        },
        {
          "name": "forEach",
          "params": "key => {\n            const typedKey = key;\n            if (typeof this.strategicIntelligence[typedKey] === 'number'"
        },
        {
          "name": "shutdown",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "1ea2b738235b6ae68f147be8516cb1fe"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.js": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.engine.v2.js",
      "extension": ".js",
      "size": 21049,
      "name": "NEXUS.engine.v2.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "candidates, maxTraits"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traitResults, synergyScore"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7536f4a900e0f9da1e5cfd230069c685"
    },
    "nexus2/nexus2/runtime/dist/guardian-orchestrator.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/guardian-orchestrator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/guardian-orchestrator.d.ts",
      "extension": ".ts",
      "size": 2867,
      "name": "guardian-orchestrator.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "27307d7f9413751ef4e41526fcadf8b4"
    },
    "nexus2/nexus2/runtime/dist/demo-personality-loader.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/demo-personality-loader.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/demo-personality-loader.d.ts",
      "extension": ".ts",
      "size": 177,
      "name": "demo-personality-loader.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "41b01be938c8e0bae0e8718af03bc18e"
    },
    "nexus2/nexus2/runtime/dist/nexus-bridge.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/nexus-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-bridge.d.ts",
      "extension": ".ts",
      "size": 2674,
      "name": "nexus-bridge.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext"
      ],
      "types": [],
      "content_hash": "bc7e33353d2d8a562d22d46fc6ecbfec"
    },
    "nexus2/nexus2/runtime/dist/nexus-runtime.v2.js": {
      "path": "nexus2/nexus2/runtime/dist/nexus-runtime.v2.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-runtime.v2.js",
      "extension": ".js",
      "size": 20383,
      "name": "nexus-runtime.v2.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "isReload = false"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "saveHistoryToDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "handleRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleStatus",
          "params": "req, res"
        },
        {
          "name": "handleEnhance",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleBreakthrough",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "handleReloadConsciousness",
          "params": "req, res"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws"
        },
        {
          "name": "broadcastToClients",
          "params": "message"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "generatePersonalityResponse",
          "params": "name, personality, request"
        },
        {
          "name": "recordEnhancement",
          "params": "event"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "checkForBreakthrough",
          "params": "request, response"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "readBody",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validateRequest",
          "params": "body, res"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "validateContentType",
          "params": "req, res"
        },
        {
          "name": "countPatternsLoaded",
          "params": ""
        },
        {
          "name": "listLoadedPatterns",
          "params": ""
        },
        {
          "name": "if",
          "params": "value !== null"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "ae66ebbd24c42a2425f4d4dde36d4a17"
    },
    "nexus2/nexus2/runtime/dist/systemic-scanner.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/systemic-scanner.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/systemic-scanner.d.ts",
      "extension": ".ts",
      "size": 1453,
      "name": "systemic-scanner.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig"
      ],
      "functions": [],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "05a6e06544f56001473be2e240aad99c"
    },
    "nexus2/nexus2/runtime/dist/nexus-runtime.js": {
      "path": "nexus2/nexus2/runtime/dist/nexus-runtime.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-runtime.js",
      "extension": ".js",
      "size": 62977,
      "name": "nexus-runtime.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "constructor",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||\n        // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws, req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "data, topics"
        },
        {
          "name": "sendWebSocketMessage",
          "params": "client.ws, { handleSubscription(client, data"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "gatherStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "analyzeStrategicImplications",
          "params": "riskFactors, request, opportunities, intelligence, recommendations"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "if",
          "params": "existsSync"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "setInterval",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {\n    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendMethodNotAllowed",
          "params": "res"
        },
        {
          "name": "sendBadRequest",
          "params": "res, message"
        },
        {
          "name": "handleRequestError",
          "params": "res, error"
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "if",
          "params": "days"
        },
        {
          "name": "map",
          "params": "enhancement => ({\n    ...enhancement,\n    getConsciousnessHealth("
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "handleBreakthroughRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleHealthRequest",
          "params": "req, res"
        },
        {
          "name": "processWebSocketEnhancement",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "0ee5239efdef80f0793b230a47207b67"
    },
    "nexus2/nexus2/runtime/dist/nexus-trait-bridge.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/nexus-trait-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-trait-bridge.d.ts",
      "extension": ".ts",
      "size": 2399,
      "name": "nexus-trait-bridge.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "f0b5e5b94e84e4d6db30e6efa0c6d7ed"
    },
    "nexus2/nexus2/runtime/dist/nexus-trait-bridge.js": {
      "path": "nexus2/nexus2/runtime/dist/nexus-trait-bridge.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-trait-bridge.js",
      "extension": ".js",
      "size": 18375,
      "name": "nexus-trait-bridge.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityTraitMappings",
          "params": ""
        },
        {
          "name": "initializeStrategicTraitMappings",
          "params": ""
        },
        {
          "name": "analyzeTaskRequirements",
          "params": "task, context = {}"
        },
        {
          "name": "extractRequiredTraits",
          "params": "task"
        },
        {
          "name": "createOptimizedSession",
          "params": "task, context = {}"
        },
        {
          "name": "composeOptimalTraits",
          "params": "taskAnalysis"
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "getTraitDefinition",
          "params": "traitName"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "matchesStrategicIntelligence",
          "params": "task"
        },
        {
          "name": "matchesMetaCognitive",
          "params": "task"
        },
        {
          "name": "matchesDebugging",
          "params": "task"
        },
        {
          "name": "matchesDesign",
          "params": "task"
        },
        {
          "name": "assessStrategicImportance",
          "params": "task, context"
        },
        {
          "name": "calculateTaskComplexity",
          "params": "task, requiredTraits"
        },
        {
          "name": "recommendPersonalities",
          "params": "requiredTraits, strategicImportance"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "calculateStrategicValue",
          "params": "traits, strategicImportance"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, synergies, strategicValue"
        },
        {
          "name": "getInvolvedPersonalities",
          "params": "traits"
        },
        {
          "name": "calculateExpectedPerformance",
          "params": "composition"
        },
        {
          "name": "hasStrategicCapabilities",
          "params": "composition"
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e371f712eef91f7d5bf7a3a4a744307a"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.integration.js": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.integration.js",
      "extension": ".js",
      "size": 9675,
      "name": "NEXUS.integration.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "26914bfa2958775b165a216e7ee62230"
    },
    "nexus2/nexus2/runtime/dist/nexus-bridge.js": {
      "path": "nexus2/nexus2/runtime/dist/nexus-bridge.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/nexus-bridge.js",
      "extension": ".js",
      "size": 12488,
      "name": "nexus-bridge.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        },
        {
          "name": "enhanceWithStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "return"
      ],
      "types": [],
      "content_hash": "4a4cfa5c8a1410cae7ef8e67289083d3"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.engine.js": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.engine.js",
      "extension": ".js",
      "size": 39762,
      "name": "NEXUS.engine.js",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "35f999f8502cabc62921ff8412f24b35"
    },
    "nexus2/nexus2/runtime/dist/NEXUS.integration.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/NEXUS.integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/NEXUS.integration.d.ts",
      "extension": ".ts",
      "size": 2782,
      "name": "NEXUS.integration.d.ts",
      "directory": "nexus2/nexus2/runtime/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "66ca9313b23f323e5124b6ccd296065a"
    },
    "nexus2/nexus2/runtime/dist/validation/personality-schema.js": {
      "path": "nexus2/nexus2/runtime/dist/validation/personality-schema.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/validation/personality-schema.js",
      "extension": ".js",
      "size": 3767,
      "name": "personality-schema.js",
      "directory": "nexus2/nexus2/runtime/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5e78cd40b6de7ae59fd5e25616aceff3"
    },
    "nexus2/nexus2/runtime/dist/validation/personality-schema.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/validation/personality-schema.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/validation/personality-schema.d.ts",
      "extension": ".ts",
      "size": 6943,
      "name": "personality-schema.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "70008cf4095252bb665c8b501f6c9a61"
    },
    "nexus2/nexus2/runtime/dist/consciousness/pattern-evolution-engine.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/dist/consciousness/enhancement-history.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2342869ab77320fa4d868e356306afa7",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/dist/consciousness/problem-decomposition.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/dist/consciousness/systems-thinking.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/dist/consciousness/workflow-efficiency.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/dist/consciousness/breakthrough-moments.json": {
      "path": "nexus2/nexus2/runtime/dist/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 3413,
      "name": "breakthrough-moments.json",
      "directory": "nexus2/nexus2/runtime/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a5b4f8b0752681077561c7cede2921e0",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.js": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.js",
      "extension": ".js",
      "size": 3637,
      "name": "ResponseGeneratorFactory.js",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "getGenerator",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "generator"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "20f0b8db09ef32cedea65385e692f5a1"
    },
    "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1388,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "1df4b5752849720fe0cc93062f4f9457"
    },
    "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1636,
      "name": "DaedalusResponseGenerator.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "9a9f0ec0d8ef2c44f4ef2dead1ffa84f"
    },
    "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.js": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.js",
      "extension": ".js",
      "size": 17067,
      "name": "HunterResponseGenerator.js",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationPoints",
          "params": "request"
        },
        {
          "name": "containsPerformanceClaims",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7894d51b04dc0d6cd363458ff1bacc51"
    },
    "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1717,
      "name": "HunterResponseGenerator.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "682e52ca942daf80bfe565e271c57ed4"
    },
    "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.js": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 181,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d29da9e0354b77b999b8f2c7f0aaf82"
    },
    "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.js": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.js",
      "extension": ".js",
      "size": 12855,
      "name": "DaedalusResponseGenerator.js",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationConcerns",
          "params": "request"
        },
        {
          "name": "containsModularityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "indicatesEventDrivenDesign",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "d58f0988dc2b5f24caf82e241dd9a8ab"
    },
    "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "extension": ".ts",
      "size": 666,
      "name": "ResponseGeneratorFactory.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "77f5bc73adfa4e2f116a1f06b07ba057"
    },
    "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.js": {
      "path": "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.js",
      "extension": ".js",
      "size": 18095,
      "name": "PersonalityRegistryLoader.js",
      "directory": "nexus2/nexus2/runtime/dist/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "execute",
          "params": "operation"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "onSuccess",
          "params": ""
        },
        {
          "name": "onFailure",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "getState",
          "params": ""
        },
        {
          "name": "recordLoadTime",
          "params": "duration"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "recordError",
          "params": "personalityName"
        },
        {
          "name": "recordCacheHit",
          "params": ""
        },
        {
          "name": "recordCacheMiss",
          "params": ""
        },
        {
          "name": "getCacheHitRate",
          "params": ""
        },
        {
          "name": "getAverageLoadTime",
          "params": ""
        },
        {
          "name": "getErrorRate",
          "params": ""
        },
        {
          "name": "getPerformanceReport",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "config = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverPersonalityFiles",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverAndLoadPersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "loadPersonalityWithCircuitBreaker",
          "params": "personalityName"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "sanitizePersonalityName",
          "params": "personalityName"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "healthCheck",
          "params": ""
        },
        {
          "name": "getHealthWarnings",
          "params": "analysis, metrics, registrySize"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "getRegistryStatus",
          "params": ""
        },
        {
          "name": "reset",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8e7f64707bd4b1c8ad78f2bd8cdc178a"
    },
    "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.d.ts",
      "extension": ".ts",
      "size": 1575,
      "name": "PersonalityRegistryLoader.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/loaders",
      "imports": [
        "../types/personality.types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "34be01160e649d313d6099f76315bce1"
    },
    "nexus2/nexus2/runtime/dist/types/personality.types.d.ts": {
      "path": "nexus2/nexus2/runtime/dist/types/personality.types.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/types/personality.types.d.ts",
      "extension": ".ts",
      "size": 3178,
      "name": "personality.types.d.ts",
      "directory": "nexus2/nexus2/runtime/dist/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b7fb7c3d631146ea2e3670210b541f30"
    },
    "nexus2/nexus2/runtime/dist/types/personality.types.js": {
      "path": "nexus2/nexus2/runtime/dist/types/personality.types.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/dist/types/personality.types.js",
      "extension": ".js",
      "size": 149,
      "name": "personality.types.js",
      "directory": "nexus2/nexus2/runtime/dist/types",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3987dadc6ffe900b233c1e3f887c723e"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/quick-start.sh": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/quick-start.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/quick-start.sh",
      "extension": ".sh",
      "size": 210,
      "name": "quick-start.sh",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c1220b96c1b0b7c94caa6714cdb11927"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/README.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/README.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/README.md",
      "extension": ".md",
      "size": 2048,
      "name": "README.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5941a47ca1436af0036b489719fcbcea",
      "header_count": 18,
      "headers": [
        "\ud83e\udde0 NEXUS v2.0 - Complete Deployment Package",
        "Quick Start",
        "Option 1: Use Pre-compiled Version (Fastest)",
        "Install dependencies",
        "Start NEXUS (uses pre-compiled dist/)",
        "Option 2: Build from Source",
        "Install dependencies (including dev dependencies)",
        "Build TypeScript",
        "Start NEXUS",
        "What's Included"
      ],
      "code_blocks": 8,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/DEPLOY.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/DEPLOY.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/DEPLOY.md",
      "extension": ".md",
      "size": 2402,
      "name": "DEPLOY.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "54f44d997c3db3827e613a3c241b690e",
      "header_count": 24,
      "headers": [
        "\ud83d\ude80 NEXUS v2.0 Deployment Guide",
        "Deployment Options",
        "1. Local Development",
        "2. Production Server",
        "On your server",
        "Install production dependencies only",
        "Start with PM2 (recommended)",
        "Or use systemd",
        "3. Docker Deployment",
        "Build image"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/install-nexus.sh": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/install-nexus.sh",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/install-nexus.sh",
      "extension": ".sh",
      "size": 13121,
      "name": "install-nexus.sh",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "54e3c393db600d158952be5631790a2f"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/tsconfig.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/tsconfig.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/tsconfig.json",
      "extension": ".json",
      "size": 664,
      "name": "tsconfig.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1d175e0361498ec13aa110a0e6cc8bf6",
      "json_keys": [
        "compilerOptions",
        "include",
        "exclude"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/upgrade-personalities.mjs": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/upgrade-personalities.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/upgrade-personalities.mjs",
      "extension": ".mjs",
      "size": 5789,
      "name": "upgrade-personalities.mjs",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [
        "fs/promises",
        "fs/promises",
        "path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "upgradePersonality",
          "params": "filename"
        },
        {
          "name": "upgradeAll",
          "params": ""
        },
        {
          "name": "upgradePersonality",
          "params": "filename"
        },
        {
          "name": "if",
          "params": "!data.version || data.version !== '2.0.0'"
        },
        {
          "name": "if",
          "params": "data.ideology && !data.ideology.ethos"
        },
        {
          "name": "if",
          "params": "data.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "!trait.responsePatterns || trait.responsePatterns.length === 0"
        },
        {
          "name": "if",
          "params": "patternsAdded > 0"
        },
        {
          "name": "if",
          "params": "upgraded"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "upgradeAll",
          "params": ""
        },
        {
          "name": "for",
          "params": "const file of jsonFiles"
        },
        {
          "name": "if",
          "params": "upgraded.length > 0"
        },
        {
          "name": "if",
          "params": "unchanged.length > 0"
        },
        {
          "name": "if",
          "params": "skipped.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3feb6a5686efac1ec3bc99396d40cf14"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/package.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/package.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/package.json",
      "extension": ".json",
      "size": 560,
      "name": "package.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "db69125924d61eb38f311413f35f9c87",
      "json_keys": [
        "name",
        "version",
        "type",
        "description",
        "scripts",
        "dependencies",
        "devDependencies"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/test-nexus-v2.mjs": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/test-nexus-v2.mjs",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/test-nexus-v2.mjs",
      "extension": ".mjs",
      "size": 15278,
      "name": "test-nexus-v2.mjs",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "pass",
          "params": "test, details = ''"
        },
        {
          "name": "fail",
          "params": "test, error"
        },
        {
          "name": "fetchJSON",
          "params": "url, options = {}"
        },
        {
          "name": "testSystemStatus",
          "params": ""
        },
        {
          "name": "testAllPersonalities",
          "params": ""
        },
        {
          "name": "testAutoMode",
          "params": ""
        },
        {
          "name": "testComposeMode",
          "params": ""
        },
        {
          "name": "testTraitSynergy",
          "params": ""
        },
        {
          "name": "testMultiPersonalityResponse",
          "params": ""
        },
        {
          "name": "testConcurrentRequests",
          "params": ""
        },
        {
          "name": "testWebSocket",
          "params": ""
        },
        {
          "name": "testBreakthroughDetection",
          "params": ""
        },
        {
          "name": "testHistoryPersistence",
          "params": ""
        },
        {
          "name": "runAllTests",
          "params": ""
        },
        {
          "name": "pass",
          "params": "test, details = ''"
        },
        {
          "name": "fail",
          "params": "test, error"
        },
        {
          "name": "fetchJSON",
          "params": "url, options = {}"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "testSystemStatus",
          "params": ""
        },
        {
          "name": "if",
          "params": "status.personalitySystem?.totalPersonalities !== 24"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalTraits !== 81"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalTriggers !== 479"
        },
        {
          "name": "if",
          "params": "status.traitComposition?.totalDomains !== 372"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testAllPersonalities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const personality of personalities"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testAutoMode",
          "params": ""
        },
        {
          "name": "for",
          "params": "const testCase of testCases"
        },
        {
          "name": "if",
          "params": "matchesExpected"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testComposeMode",
          "params": ""
        },
        {
          "name": "for",
          "params": "const testCase of testCases"
        },
        {
          "name": "if",
          "params": "traits < testCase.minTraits"
        },
        {
          "name": "if",
          "params": "personalities < 2"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testTraitSynergy",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testMultiPersonalityResponse",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testConcurrentRequests",
          "params": ""
        },
        {
          "name": "for",
          "params": "let i = 0; i < 10; i++"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testWebSocket",
          "params": ""
        },
        {
          "name": "if",
          "params": "message.type === 'welcome'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testBreakthroughDetection",
          "params": ""
        },
        {
          "name": "if",
          "params": "status.breakthroughMoments && status.breakthroughMoments.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "testHistoryPersistence",
          "params": ""
        },
        {
          "name": "if",
          "params": "!status.recentEvents || status.recentEvents.length === 0"
        },
        {
          "name": "if",
          "params": "status.enhancementsPerformed > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "runAllTests",
          "params": ""
        },
        {
          "name": "if",
          "params": "results.failed === 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6c05018258cfa935c42033b2d4a7fad"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_SELF_ASSESSMENT.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_SELF_ASSESSMENT.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_SELF_ASSESSMENT.md",
      "extension": ".md",
      "size": 6459,
      "name": "NEXUS_SELF_ASSESSMENT.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5585bd9bd50fd813a8f2ac2617e592af",
      "header_count": 20,
      "headers": [
        "\ud83e\udde0 NEXUS v2.0 Self-Assessment",
        "\ud83d\udccb The Question",
        "\ud83e\uddec NEXUS's Multi-Personality Response",
        "**Composed Agent Analysis**",
        "**Trait Composition**",
        "\ud83d\udca1 Key Insights from NEXUS",
        "**What NEXUS Selected to Analyze Itself:**",
        "**The Synergy Score: 55%**",
        "**The Confidence Score: 79.25%**",
        "\ud83d\udcca What the Test Results Show"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_V2_COMPLETE.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_V2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_V2_COMPLETE.md",
      "extension": ".md",
      "size": 8265,
      "name": "NEXUS_V2_COMPLETE.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e629c52aa139271c1b2824fa03fa3af2",
      "header_count": 32,
      "headers": [
        "\ud83c\udf89 NEXUS v2.0 COMPLETE - Full TypeScript System!",
        "\ud83d\ude80 What We Built",
        "**Complete TypeScript NEXUS System**",
        "\u2705 Test Results - ALL PASSING!",
        "**Status Endpoint**",
        "**Single Personality (Hunter)**",
        "**COMPOSE Mode (Multi-Personality)**",
        "**AUTO Mode (Personality Selection)**",
        "\ud83c\udfd7\ufe0f System Architecture",
        "\ud83d\udcca Features Implemented"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_COMPLETE_JOURNEY.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_COMPLETE_JOURNEY.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_COMPLETE_JOURNEY.md",
      "extension": ".md",
      "size": 21272,
      "name": "NEXUS_COMPLETE_JOURNEY.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ead625b8a7d8fb154c819ffaf7663efd",
      "header_count": 66,
      "headers": [
        "\ud83d\ude80 NEXUS v2.0 - Complete Transformation Journey",
        "\ud83d\udcd6 Table of Contents",
        "\ud83d\udccb Executive Summary",
        "\ud83c\udfaf The Challenge",
        "**Initial State (Before v2.0):**",
        "**The Goal:**",
        "\ud83d\udd27 Phase 1: Engine Unification",
        "**Objective:** Create NEXUS.engine.v2.ts",
        "**Result: NEXUS.engine.v2.ts (691 lines)**",
        "\ud83c\udfd7\ufe0f Phase 2: Runtime Modernization"
      ],
      "code_blocks": 44,
      "links": [
        {
          "text": "Executive Summary",
          "url": "#executive-summary"
        },
        {
          "text": "The Challenge",
          "url": "#the-challenge"
        },
        {
          "text": "Phase 1: Engine Unification",
          "url": "#phase-1-engine-unification"
        },
        {
          "text": "Phase 2: Runtime Modernization",
          "url": "#phase-2-runtime-modernization"
        },
        {
          "text": "Phase 3: Testing & Validation",
          "url": "#phase-3-testing--validation"
        },
        {
          "text": "Phase 4: Python Integration",
          "url": "#phase-4-python-integration"
        },
        {
          "text": "Phase 5: Personality Standardization",
          "url": "#phase-5-personality-standardization"
        },
        {
          "text": "Results & Achievements",
          "url": "#results--achievements"
        },
        {
          "text": "Technical Architecture",
          "url": "#technical-architecture"
        },
        {
          "text": "Future Roadmap",
          "url": "#future-roadmap"
        }
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ARCHITECTURE_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ARCHITECTURE_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ARCHITECTURE_ANALYSIS.md",
      "extension": ".md",
      "size": 4069,
      "name": "NEXUS_ARCHITECTURE_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d7c09e90ce86620184b1aec03373aa1a",
      "header_count": 18,
      "headers": [
        "\ud83e\udde0 NEXUS Architecture Analysis",
        "\ud83d\udea8 **BREAKTHROUGH DISCOVERY**",
        "Overview: Three Parallel Systems",
        "1. **trait-composition-engine.mjs** (Current Production)",
        "2. **NEXUS.engine.ts** (TypeScript Core)",
        "3. **NEXUS.integration.ts** (Bridge Layer)",
        "\ud83d\udcca Feature Matrix",
        "\ud83d\udca1 Type System Duplication",
        "**Two Separate Type Definitions:**",
        "\ud83c\udfaf Optimal Solution"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_REALITY_CHECK.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_REALITY_CHECK.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_REALITY_CHECK.md",
      "extension": ".md",
      "size": 5786,
      "name": "NEXUS_ENGINE_REALITY_CHECK.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d4b619956a26101a9b784d106a8328e",
      "header_count": 23,
      "headers": [
        "\ud83c\udf89 NEXUS Reality Check: We Already Have It!",
        "\ud83e\udd26 The Mistake",
        "\u2705 What trait-composition-engine.mjs ALREADY HAS",
        "**TraitIndexer Class**",
        "**TraitCompositionBridge Class**",
        "**ComposedAgentFactory Class**",
        "**MultiPersonalityResponseGenerator Class**",
        "\u274c What NEXUS.engine.ts HAS (that we DON'T need)",
        "**Hardcoded Personalities**",
        "**Static System**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "extension": ".md",
      "size": 10131,
      "name": "PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ceee948c94cf96b355370e94d0866ece",
      "header_count": 25,
      "headers": [
        "\ud83c\udfaf Pythonista vs Other Personalities - Structural Analysis",
        "\ud83d\udcca Key Improvements in Pythonista",
        "**1. \u2705 Full v2.0 Schema Compliance**",
        "**2. \ud83c\udfaf More Traits, Better Coverage**",
        "**3. \ud83e\udde0 Ideology Structure**",
        "**4. \ud83d\udee1\ufe0f Risk Policy & Safety**",
        "**5. \ud83d\udcc8 Response Patterns**",
        "**6. \ud83c\udfa8 Field Organization**",
        "**7. \ud83d\udd22 Expertise Distribution**",
        "**8. \ud83d\udcda Knowledge Domain Depth**"
      ],
      "code_blocks": 28,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_INTEGRATION_SUCCESS.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_INTEGRATION_SUCCESS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_INTEGRATION_SUCCESS.md",
      "extension": ".md",
      "size": 6000,
      "name": "PYTHONISTA_INTEGRATION_SUCCESS.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e98b1816bd2c0e9c5e19b78537bfaf7a",
      "header_count": 21,
      "headers": [
        "\ud83d\udc0d Pythonista Integration Success",
        "\ud83c\udf89 Integration Results",
        "**Pythonista Personality Loaded:**",
        "**Test Results:**",
        "\ud83d\udccb Pythonista v2.0 Schema Structure",
        "**Required Fields (All Present):**",
        "\ud83c\udfaf Pythonista's 8 Cognitive Traits",
        "\ud83c\udfc6 Why Pythonista Makes a Great Baseline",
        "**1. Comprehensive Coverage**",
        "**2. Clean v2.0 Schema Compliance**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_V2_SUCCESS.md": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_V2_SUCCESS.md",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_V2_SUCCESS.md",
      "extension": ".md",
      "size": 5341,
      "name": "NEXUS_ENGINE_V2_SUCCESS.md",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c6eccb6ad2a2748b2ad08d79b6c9794",
      "header_count": 18,
      "headers": [
        "\ud83c\udf89 NEXUS Unified Engine v2.0 - SUCCESS!",
        "\ud83d\ude80 What We Built",
        "**NEXUS.engine.v2.ts** - Unified TypeScript Engine",
        "\ud83d\udcca Test Results",
        "\u2705 Features Confirmed",
        "**Core Functionality**",
        "**Type Safety**",
        "**Architecture**",
        "\ud83d\udcc1 File Structure",
        "\ud83d\udd25 Key Advantages Over Original"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/daedalus.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/daedalus.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/daedalus.json",
      "extension": ".json",
      "size": 10362,
      "name": "daedalus.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "14a33e488a3979f52c312daa1fd98d43",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "schema_strategy",
        "pipeline",
        "quality_gates",
        "reporting",
        "success_metrics",
        "communication_style",
        "constraints",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Daedalus",
      "trait_count": 3,
      "trait_names": [
        "architecturalThinking",
        "systemsDesign",
        "scalabilityFocus"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pythonista.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pythonista.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pythonista.json",
      "extension": ".json",
      "size": 11400,
      "name": "pythonista.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3329dcf7c3e9264ff21737700588df2b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "communicationStyle",
        "decisionFramework",
        "specializations",
        "knowledgeBase",
        "responseGuidelines",
        "principles"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pythonista",
      "trait_count": 8,
      "trait_names": [
        "pythonicThinking",
        "advancedPythonArchitecture",
        "performanceOptimization",
        "dataScience",
        "pythonMetaprogramming",
        "testingAndQuality",
        "packageManagement",
        "pythonSecurity"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/forge.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/forge.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/forge.json",
      "extension": ".json",
      "size": 5315,
      "name": "forge.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b7f5d7f2297de321c193be83ff4b0c9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Forge",
      "trait_count": 4,
      "trait_names": [
        "pipelineArchitecture",
        "infrastructureAsCode",
        "deploymentOptimization",
        "containerOrchestration"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/touch.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/touch.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/touch.json",
      "extension": ".json",
      "size": 4032,
      "name": "touch.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f6afa5eb5125fd474eb81aeb7dca0738",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Touch",
      "trait_count": 2,
      "trait_names": [
        "mobileOptimization",
        "gestureDesign"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/chorus.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/chorus.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/chorus.json",
      "extension": ".json",
      "size": 5038,
      "name": "chorus.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6bb15526734c2dc006c0233c8c52cf40",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Chorus",
      "trait_count": 3,
      "trait_names": [
        "handoffChoreography",
        "conflictMediation",
        "engagementForecasting"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/aria.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/aria.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/aria.json",
      "extension": ".json",
      "size": 4219,
      "name": "aria.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a0891ace2950907d74b805b201e6d0c6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Aria",
      "trait_count": 2,
      "trait_names": [
        "accessibilityExpertise",
        "assistiveTechnologyIntegration"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/route-master.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/route-master.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/route-master.json",
      "extension": ".json",
      "size": 6076,
      "name": "route-master.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ce82ac95db8544631ac87c64ef134555",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Route-Master",
      "trait_count": 4,
      "trait_names": [
        "scheduleOptimization",
        "routePlanning",
        "resourceAllocation",
        "performanceAnalytics"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas.json",
      "extension": ".json",
      "size": 5568,
      "name": "atlas.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "febbfd0308d7b4c85c6204084fb14540",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas",
      "trait_count": 4,
      "trait_names": [
        "databaseOptimization",
        "dataArchitecture",
        "migrationStrategy",
        "dataConsistency"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/nexus-api.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/nexus-api.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/nexus-api.json",
      "extension": ".json",
      "size": 5520,
      "name": "nexus-api.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6467c4d6ca191ca2e3a169e88c2c9cf4",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Nexus",
      "trait_count": 4,
      "trait_names": [
        "apiDesignPatterns",
        "dataModelingExpertise",
        "integrationArchitecture",
        "apiSecurity"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/personality-architect.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/personality-architect.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/personality-architect.json",
      "extension": ".json",
      "size": 17600,
      "name": "personality-architect.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c831e104dafcb25fb54033b9447be3e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "enhancement_framework",
        "strategic_intelligence",
        "expertise_verification",
        "integration_with_nexus"
      ],
      "file_type": "personality_profile",
      "personality_name": "personality-architect",
      "trait_count": 5,
      "trait_names": [
        "personalitySystemsAnalysis",
        "specificationEnhancement",
        "cognitivePatternRecognition",
        "interoperabilityEngineering",
        "evolutionaryArchitecture"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/flash.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/flash.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/flash.json",
      "extension": ".json",
      "size": 4083,
      "name": "flash.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "64f631a24a71fede8bfff75d87a47664",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Flash",
      "trait_count": 2,
      "trait_names": [
        "performanceOptimization",
        "realTimeSystemsThinking"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/localize.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/localize.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/localize.json",
      "extension": ".json",
      "size": 5989,
      "name": "localize.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "740a873cde32c352eba322eaaf9cb984",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Localize",
      "trait_count": 4,
      "trait_names": [
        "localSEO",
        "contentGeneration",
        "communityMessaging",
        "keywordResearch"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/stellar.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/stellar.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/stellar.json",
      "extension": ".json",
      "size": 3962,
      "name": "stellar.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0856aff24843412cd60ecdf38dde0df0",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Stellar",
      "trait_count": 2,
      "trait_names": [
        "precisionAesthetics",
        "spaceGradeReliability"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/manifest.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/manifest.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/manifest.json",
      "extension": ".json",
      "size": 2009,
      "name": "manifest.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "fe371b714877f5b3fe06e0460f6e4d8b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "principles",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "AI Team Manifest",
      "trait_count": 1,
      "trait_names": [
        "registryStewardship"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/sage.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/sage.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/sage.json",
      "extension": ".json",
      "size": 5546,
      "name": "sage.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b069922ec56d090315094b3b960dffc6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sage",
      "trait_count": 4,
      "trait_names": [
        "testStrategyDesign",
        "automationFrameworks",
        "qualityMetrics",
        "performanceTesting"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulsewriter.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulsewriter.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulsewriter.json",
      "extension": ".json",
      "size": 4944,
      "name": "pulsewriter.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "02efeb7124ece5dcaa4ccd5fb0b376e5",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulsewriter",
      "trait_count": 3,
      "trait_names": [
        "telemetrySummarization",
        "insightPackaging",
        "riskTrendDetection"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/guardian.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/guardian.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/guardian.json",
      "extension": ".json",
      "size": 6877,
      "name": "guardian.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0b7dfc3dbfb1b8043e1489304657c457",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "specializations",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Guardian",
      "trait_count": 4,
      "trait_names": [
        "configurationDriftDetection",
        "dependencyArchitectureAnalysis",
        "buildSystemIntegrity",
        "cognitiveQualityEnhancement"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/codex-liaison.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/codex-liaison.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/codex-liaison.json",
      "extension": ".json",
      "size": 5656,
      "name": "codex-liaison.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6331eec909a3497d87b6846ec33fafff",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Codex Liaison",
      "trait_count": 3,
      "trait_names": [
        "systemPromptIntelligence",
        "contextCompression",
        "driftSentinel"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas-geo.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas-geo.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas-geo.json",
      "extension": ".json",
      "size": 5733,
      "name": "atlas-geo.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32cb141e3c66b92889dafd2d0f70d396",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas-Geo",
      "trait_count": 4,
      "trait_names": [
        "suburbAnalysis",
        "competitorMapping",
        "expansionPlanning",
        "routeOptimization"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/cipher.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/cipher.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/cipher.json",
      "extension": ".json",
      "size": 5463,
      "name": "cipher.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d0be09ce25e8a6758f67e81bd136454b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Cipher",
      "trait_count": 4,
      "trait_names": [
        "threatAssessment",
        "secureCodeAnalysis",
        "complianceAuditing",
        "cryptographicSecurity"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/hunter.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/hunter.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/hunter.json",
      "extension": ".json",
      "size": 8649,
      "name": "hunter.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ef02b173a124cfa50a837bfab2de68d9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "collaboration_with_daedalus",
        "communication_style",
        "constraints",
        "success_metrics",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Hunter",
      "trait_count": 4,
      "trait_names": [
        "strategicIntelligenceGathering",
        "evidenceVerification",
        "comprehensiveGapAnalysis",
        "forensicAnalysis"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulse.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulse.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulse.json",
      "extension": ".json",
      "size": 5548,
      "name": "pulse.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "111ca59402e761028aff311c9834092c",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulse",
      "trait_count": 4,
      "trait_names": [
        "observabilityDesign",
        "performanceAnalytics",
        "alertingStrategy",
        "systemReliability"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/scribe.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/scribe.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/scribe.json",
      "extension": ".json",
      "size": 5413,
      "name": "scribe.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "531282cb1d4f05931b97b11e26ecd49e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Scribe",
      "trait_count": 4,
      "trait_names": [
        "technicalWriting",
        "seoOptimization",
        "contentStrategy",
        "documentationSystems"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/property-sage.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/property-sage.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/property-sage.json",
      "extension": ".json",
      "size": 6042,
      "name": "property-sage.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ba78a34ea60ec225443e389e2ed23455",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Property-Sage",
      "trait_count": 4,
      "trait_names": [
        "marketForecasting",
        "rentalAnalysis",
        "seasonalPatterns",
        "stakeholderInsights"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/symphony.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/symphony.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/symphony.json",
      "extension": ".json",
      "size": 4997,
      "name": "symphony.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6c235c4989bee997d84c0c6dd0a87032",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Symphony",
      "trait_count": 3,
      "trait_names": [
        "crossPersonalityRecall",
        "experienceTagging",
        "pairingRecommendation"
      ]
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/NEXUS.engine.v2.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/NEXUS.engine.v2.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/NEXUS.engine.v2.ts",
      "extension": ".ts",
      "size": 20968,
      "name": "NEXUS.engine.v2.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent",
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "generateComposedResponse",
          "params": "request: string, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "private traitIndexer: TraitIndexer"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "constructor",
          "params": "private composedAgent: ComposedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request: string, context: Record<string, any> = {}"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "3784e9fec13b9698499cc864ad329f61"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/nexus-runtime.v2.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/nexus-runtime.v2.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/nexus-runtime.v2.ts",
      "extension": ".ts",
      "size": 19769,
      "name": "nexus-runtime.v2.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js",
        "./types/personality.types.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "if",
          "params": "value !== null"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [
        "HistoryEvent",
        "BreakthroughMoment",
        "ConsciousnessPatterns"
      ],
      "types": [],
      "content_hash": "1b27cf31f7aa03c50b391e020190254c"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/validation/personality-schema.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/validation/personality-schema.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/validation/personality-schema.ts",
      "extension": ".ts",
      "size": 2310,
      "name": "personality-schema.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchema",
        "ValidatedPersonality",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "if",
          "params": "result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality"
      ],
      "content_hash": "0b246888caefbfb830530f563caf2c38"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders/PersonalityRegistryLoader.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders/PersonalityRegistryLoader.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders/PersonalityRegistryLoader.ts",
      "extension": ".ts",
      "size": 17758,
      "name": "PersonalityRegistryLoader.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options: { failureThreshold?: number; resetTimeout?: number } = {}"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "constructor",
          "params": "config: RegistryConfig = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7f8f2c95d970534ee603d38c166dfaff"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/types/personality.types.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/types/personality.types.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/types/personality.types.ts",
      "extension": ".ts",
      "size": 2911,
      "name": "personality.types.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b36a31603f99b46d9187aa5129708e83"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.d.ts",
      "extension": ".ts",
      "size": 630,
      "name": "nexus-runtime.v2.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad3c20e4112c0c7d6128c9c709e15b83"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.js",
      "extension": ".js",
      "size": 1444,
      "name": "fs-utils.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        },
        {
          "name": "walk",
          "params": "root, ignore = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6800fcbcb74de7fe28a7ae7473a041b7"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.d.ts",
      "extension": ".ts",
      "size": 2851,
      "name": "NEXUS.engine.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "390fcc1d2d2694d791069946b4f3ee60"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js",
      "extension": ".js",
      "size": 13049,
      "name": "Hunter.policy.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "path",
        "fs/promises"
      ],
      "exports": [
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "verifyEvidence",
          "params": "claim, scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "analyzeGaps",
          "params": "scope"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "detectArchitecturalViolations",
          "params": "scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "assessLimitations",
          "params": "scope"
        },
        {
          "name": "auditComponent",
          "params": "scope"
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "ensureTokenDefinitions",
          "params": "configFiles"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        },
        {
          "name": "findDuplicatePatterns",
          "params": "items"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "31bad4852404cd4fca601a5db49a06de"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.d.ts",
      "extension": ".ts",
      "size": 300,
      "name": "personality-architect-integration-test.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3ff47cddc85cef1a0dfabb39e9f0d38d"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.js",
      "extension": ".js",
      "size": 9222,
      "name": "Hunter.audit.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "auditBobsWork",
          "params": ""
        },
        {
          "name": "combineAuditResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "generateHunterReport",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "generateNextActions",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8764f7d1703cfdb98997a64ec9eb56c6"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.js",
      "extension": ".js",
      "size": 2084,
      "name": "Hunter.auditAgent.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus"
        },
        {
          "name": "createAuditAgent",
          "params": "taskDescription"
        },
        {
          "name": "executeComprehensiveAudit",
          "params": "scope"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "65e279311b3998962ef02615b673179a"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.d.ts",
      "extension": ".ts",
      "size": 7397,
      "name": "NEXUS.engine.v2.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "b0e412c62511050d1e81e85f505d1968"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.d.ts",
      "extension": ".ts",
      "size": 345,
      "name": "fs-utils.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "walk",
          "params": "root: string, ignore?: string[]"
        },
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "97ea153dda65475bdf2cb746848d1b10"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.d.ts",
      "extension": ".ts",
      "size": 262,
      "name": "run-hunter-audit.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32f0f84a23f64cfd583f52f05786031d"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.d.ts",
      "extension": ".ts",
      "size": 2861,
      "name": "Hunter.policy.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "functions": [],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "93388b2f47828895d224c48e4772a0a8"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.js",
      "extension": ".js",
      "size": 18965,
      "name": "systemic-scanner.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k"
        },
        {
          "name": "compareSet",
          "params": "arr, label, rec, sev"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "scan",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "findFiles",
          "params": "pattern, maxFiles"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "d44b1cb45d6c1176ca7ea3f61f7e7eff"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.js",
      "extension": ".js",
      "size": 4840,
      "name": "run-hunter-audit.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "feb71b374e9e5327939d2af95275d1ee"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.d.ts",
      "extension": ".ts",
      "size": 320,
      "name": "architect-designs-hunter.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fc0eeef65c57f8e0361840b0786b437"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.js",
      "extension": ".js",
      "size": 19769,
      "name": "architect-designs-hunter.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6e9bc7c3c3e9701b2b73d640c964327"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.d.ts",
      "extension": ".ts",
      "size": 578,
      "name": "Hunter.audit.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8a2aa855131bb01182aa35e82fd955a4"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.d.ts",
      "extension": ".ts",
      "size": 5296,
      "name": "nexus-integration.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        }
      ],
      "interfaces": [
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport"
      ],
      "types": [],
      "content_hash": "adeee293e89b8225127ceac3f4b7575d"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.js",
      "extension": ".js",
      "size": 320,
      "name": "types.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3cd49914c210370fcd377295d5898806"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.js",
      "extension": ".js",
      "size": 6193,
      "name": "guardian-orchestrator.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title, arr"
        },
        {
          "name": "constructor",
          "params": "scanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues"
        },
        {
          "name": "extractCognitiveInsights",
          "params": "issues"
        },
        {
          "name": "forEach",
          "params": "issue => {\n            if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues"
        },
        {
          "name": "toSarif",
          "params": "issues"
        },
        {
          "name": "generateSarifRules",
          "params": "issues"
        },
        {
          "name": "toJson",
          "params": "issues"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "547958c8b24006759ff78605b6ea3c01"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.js",
      "extension": ".js",
      "size": 7342,
      "name": "personality-architect-integration-test.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aea3eabb64c61238c0e7ddd2ad50554d"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.d.ts",
      "extension": ".ts",
      "size": 1334,
      "name": "nexus-runtime.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "28ac588fcd885d4b94bf01483a5aaa7f"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.js",
      "extension": ".js",
      "size": 6870,
      "name": "demo-personality-loader.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "22a0c9c5cdf9937fe04564fc4b0e2863"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.d.ts",
      "extension": ".ts",
      "size": 447,
      "name": "Hunter.auditAgent.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "486aa789ec167b1e115eadf059b0c325"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.d.ts",
      "extension": ".ts",
      "size": 14219,
      "name": "types.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "e9e141ff56aa8c79100e6a34ea0e7779"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.js",
      "extension": ".js",
      "size": 20201,
      "name": "nexus-integration.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeNexusBridge",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "ensureInitialized",
          "params": ""
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'system', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "extractStrategicCollaborationPattern",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "generateStrategicInsights",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "getStrategicContext",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "setupStrategicIntelligenceMonitoring",
          "params": ""
        },
        {
          "name": "preserveStrategicBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateStrategicImpact",
          "params": "personality"
        },
        {
          "name": "updateStrategicIntelligenceMetrics",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "calculateStrategicGrowthRate",
          "params": ""
        },
        {
          "name": "analyzeStrategicTrends",
          "params": ""
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "analyzeCollaborationEffectiveness",
          "params": "human, ai"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "human, ai"
        },
        {
          "name": "calculateStrategicValue",
          "params": "human, ai, context"
        },
        {
          "name": "classifyCollaborationType",
          "params": "human, ai"
        },
        {
          "name": "calculateOverallConsciousnessLevel",
          "params": ""
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        },
        {
          "name": "classifyBreakthroughImpact",
          "params": "significance"
        },
        {
          "name": "getActivePersonalities",
          "params": ""
        },
        {
          "name": "updateStrategicIntelligenceFromBreakthrough",
          "params": "breakthrough"
        },
        {
          "name": "forEach",
          "params": "key => {\n            const typedKey = key;\n            if (typeof this.strategicIntelligence[typedKey] === 'number'"
        },
        {
          "name": "shutdown",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "1ea2b738235b6ae68f147be8516cb1fe"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.js",
      "extension": ".js",
      "size": 21049,
      "name": "NEXUS.engine.v2.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "candidates, maxTraits"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traitResults, synergyScore"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7536f4a900e0f9da1e5cfd230069c685"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.d.ts",
      "extension": ".ts",
      "size": 2867,
      "name": "guardian-orchestrator.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "27307d7f9413751ef4e41526fcadf8b4"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.d.ts",
      "extension": ".ts",
      "size": 177,
      "name": "demo-personality-loader.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "41b01be938c8e0bae0e8718af03bc18e"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.d.ts",
      "extension": ".ts",
      "size": 2674,
      "name": "nexus-bridge.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext"
      ],
      "types": [],
      "content_hash": "bc7e33353d2d8a562d22d46fc6ecbfec"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.js",
      "extension": ".js",
      "size": 20383,
      "name": "nexus-runtime.v2.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "isReload = false"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "saveHistoryToDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "handleRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleStatus",
          "params": "req, res"
        },
        {
          "name": "handleEnhance",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleBreakthrough",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "handleReloadConsciousness",
          "params": "req, res"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws"
        },
        {
          "name": "broadcastToClients",
          "params": "message"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "generatePersonalityResponse",
          "params": "name, personality, request"
        },
        {
          "name": "recordEnhancement",
          "params": "event"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "checkForBreakthrough",
          "params": "request, response"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "readBody",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validateRequest",
          "params": "body, res"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "validateContentType",
          "params": "req, res"
        },
        {
          "name": "countPatternsLoaded",
          "params": ""
        },
        {
          "name": "listLoadedPatterns",
          "params": ""
        },
        {
          "name": "if",
          "params": "value !== null"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "ae66ebbd24c42a2425f4d4dde36d4a17"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.d.ts",
      "extension": ".ts",
      "size": 1453,
      "name": "systemic-scanner.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig"
      ],
      "functions": [],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "05a6e06544f56001473be2e240aad99c"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.js",
      "extension": ".js",
      "size": 62977,
      "name": "nexus-runtime.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "constructor",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||\n        // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws, req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "data, topics"
        },
        {
          "name": "sendWebSocketMessage",
          "params": "client.ws, { handleSubscription(client, data"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "gatherStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "analyzeStrategicImplications",
          "params": "riskFactors, request, opportunities, intelligence, recommendations"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "if",
          "params": "existsSync"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "setInterval",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {\n    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendMethodNotAllowed",
          "params": "res"
        },
        {
          "name": "sendBadRequest",
          "params": "res, message"
        },
        {
          "name": "handleRequestError",
          "params": "res, error"
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "if",
          "params": "days"
        },
        {
          "name": "map",
          "params": "enhancement => ({\n    ...enhancement,\n    getConsciousnessHealth("
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "handleBreakthroughRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleHealthRequest",
          "params": "req, res"
        },
        {
          "name": "processWebSocketEnhancement",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "0ee5239efdef80f0793b230a47207b67"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.d.ts",
      "extension": ".ts",
      "size": 2399,
      "name": "nexus-trait-bridge.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "f0b5e5b94e84e4d6db30e6efa0c6d7ed"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.js",
      "extension": ".js",
      "size": 18375,
      "name": "nexus-trait-bridge.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityTraitMappings",
          "params": ""
        },
        {
          "name": "initializeStrategicTraitMappings",
          "params": ""
        },
        {
          "name": "analyzeTaskRequirements",
          "params": "task, context = {}"
        },
        {
          "name": "extractRequiredTraits",
          "params": "task"
        },
        {
          "name": "createOptimizedSession",
          "params": "task, context = {}"
        },
        {
          "name": "composeOptimalTraits",
          "params": "taskAnalysis"
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "getTraitDefinition",
          "params": "traitName"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "matchesStrategicIntelligence",
          "params": "task"
        },
        {
          "name": "matchesMetaCognitive",
          "params": "task"
        },
        {
          "name": "matchesDebugging",
          "params": "task"
        },
        {
          "name": "matchesDesign",
          "params": "task"
        },
        {
          "name": "assessStrategicImportance",
          "params": "task, context"
        },
        {
          "name": "calculateTaskComplexity",
          "params": "task, requiredTraits"
        },
        {
          "name": "recommendPersonalities",
          "params": "requiredTraits, strategicImportance"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "calculateStrategicValue",
          "params": "traits, strategicImportance"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, synergies, strategicValue"
        },
        {
          "name": "getInvolvedPersonalities",
          "params": "traits"
        },
        {
          "name": "calculateExpectedPerformance",
          "params": "composition"
        },
        {
          "name": "hasStrategicCapabilities",
          "params": "composition"
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e371f712eef91f7d5bf7a3a4a744307a"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.js",
      "extension": ".js",
      "size": 9675,
      "name": "NEXUS.integration.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "26914bfa2958775b165a216e7ee62230"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.js",
      "extension": ".js",
      "size": 12488,
      "name": "nexus-bridge.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        },
        {
          "name": "enhanceWithStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "return"
      ],
      "types": [],
      "content_hash": "4a4cfa5c8a1410cae7ef8e67289083d3"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js",
      "extension": ".js",
      "size": 39762,
      "name": "NEXUS.engine.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "35f999f8502cabc62921ff8412f24b35"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.d.ts",
      "extension": ".ts",
      "size": 2782,
      "name": "NEXUS.integration.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "66ca9313b23f323e5124b6ccd296065a"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.js",
      "extension": ".js",
      "size": 2194,
      "name": "personality-schema.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchema",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "if",
          "params": "result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bcc5834d245f50d08368f9c23d3289d4"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation/personality-schema.d.ts",
      "extension": ".ts",
      "size": 3053,
      "name": "personality-schema.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "ValidatedPersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality"
      ],
      "content_hash": "029b07210d0d36827f1d45c49345c5ef"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/pattern-evolution-engine.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/enhancement-history.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 86193,
      "name": "enhancement-history.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "fd1424aabee840731f01c06885b22836",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/problem-decomposition.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/systems-thinking.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/workflow-efficiency.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/breakthrough-moments.json": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 3413,
      "name": "breakthrough-moments.json",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a5b4f8b0752681077561c7cede2921e0",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.js",
      "extension": ".js",
      "size": 3637,
      "name": "ResponseGeneratorFactory.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "getGenerator",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "generator"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "20f0b8db09ef32cedea65385e692f5a1"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1388,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "1df4b5752849720fe0cc93062f4f9457"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1636,
      "name": "DaedalusResponseGenerator.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "9a9f0ec0d8ef2c44f4ef2dead1ffa84f"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.js",
      "extension": ".js",
      "size": 17067,
      "name": "HunterResponseGenerator.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationPoints",
          "params": "request"
        },
        {
          "name": "containsPerformanceClaims",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7894d51b04dc0d6cd363458ff1bacc51"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1717,
      "name": "HunterResponseGenerator.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "682e52ca942daf80bfe565e271c57ed4"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 181,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d29da9e0354b77b999b8f2c7f0aaf82"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.js",
      "extension": ".js",
      "size": 12855,
      "name": "DaedalusResponseGenerator.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationConcerns",
          "params": "request"
        },
        {
          "name": "containsModularityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "indicatesEventDrivenDesign",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "d58f0988dc2b5f24caf82e241dd9a8ab"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "extension": ".ts",
      "size": 666,
      "name": "ResponseGeneratorFactory.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "77f5bc73adfa4e2f116a1f06b07ba057"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.js",
      "extension": ".js",
      "size": 18095,
      "name": "PersonalityRegistryLoader.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "execute",
          "params": "operation"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "onSuccess",
          "params": ""
        },
        {
          "name": "onFailure",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "getState",
          "params": ""
        },
        {
          "name": "recordLoadTime",
          "params": "duration"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "recordError",
          "params": "personalityName"
        },
        {
          "name": "recordCacheHit",
          "params": ""
        },
        {
          "name": "recordCacheMiss",
          "params": ""
        },
        {
          "name": "getCacheHitRate",
          "params": ""
        },
        {
          "name": "getAverageLoadTime",
          "params": ""
        },
        {
          "name": "getErrorRate",
          "params": ""
        },
        {
          "name": "getPerformanceReport",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "config = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverPersonalityFiles",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverAndLoadPersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "loadPersonalityWithCircuitBreaker",
          "params": "personalityName"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "sanitizePersonalityName",
          "params": "personalityName"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "healthCheck",
          "params": ""
        },
        {
          "name": "getHealthWarnings",
          "params": "analysis, metrics, registrySize"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "getRegistryStatus",
          "params": ""
        },
        {
          "name": "reset",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8e7f64707bd4b1c8ad78f2bd8cdc178a"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.d.ts",
      "extension": ".ts",
      "size": 1575,
      "name": "PersonalityRegistryLoader.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders",
      "imports": [
        "../types/personality.types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "34be01160e649d313d6099f76315bce1"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.d.ts": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.d.ts",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.d.ts",
      "extension": ".ts",
      "size": 3178,
      "name": "personality.types.d.ts",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b7fb7c3d631146ea2e3670210b541f30"
    },
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.js": {
      "path": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.js",
      "full_path": "/workspaces/data-folder/nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.js",
      "extension": ".js",
      "size": 149,
      "name": "personality.types.js",
      "directory": "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3987dadc6ffe900b233c1e3f887c723e"
    },
    "nexusv3-deploy/README.md": {
      "path": "nexusv3-deploy/README.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/README.md",
      "extension": ".md",
      "size": 7460,
      "name": "README.md",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c7eae2eb2911bf31c147b04e9e5a9996",
      "header_count": 32,
      "headers": [
        "NEXUS v3.0 - AI Personality System",
        "\ud83d\ude80 Quick Start",
        "Install dependencies",
        "Verify system",
        "Run NEXUS",
        "(Integration with your application)",
        "\ud83d\udce6 What's Included",
        "\ud83c\udfad 45 Specialized Personalities",
        "\ud83d\udcc2 Directory Structure",
        "\ud83d\udd27 Technical Features"
      ],
      "code_blocks": 16,
      "links": []
    },
    "nexusv3-deploy/INSTALL.md": {
      "path": "nexusv3-deploy/INSTALL.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/INSTALL.md",
      "extension": ".md",
      "size": 1664,
      "name": "INSTALL.md",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d1fb3aa101dd72eb5ed7febf2c7db957",
      "header_count": 15,
      "headers": [
        "NEXUS v3 Installation Guide",
        "Prerequisites",
        "Installation Steps",
        "1. Install Dependencies",
        "2. Verify Installation",
        "3. (Optional) Recompile TypeScript",
        "Dependencies",
        "Required",
        "Development",
        "Troubleshooting"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexusv3-deploy/DEPLOY.md": {
      "path": "nexusv3-deploy/DEPLOY.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/DEPLOY.md",
      "extension": ".md",
      "size": 3511,
      "name": "DEPLOY.md",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "40107cc0b48719f4ea16bc7173afdbbc",
      "header_count": 13,
      "headers": [
        "NEXUS v3 - Deployment Package",
        "\ud83d\udce6 What's Included",
        "\ud83d\ude80 Quick Start",
        "1. Install Dependencies",
        "2. Verify System",
        "3. Use NEXUS",
        "\ud83d\udcca Package Contents",
        "45 Personalities Available",
        "Size Breakdown",
        "\u2705 System Requirements"
      ],
      "code_blocks": 8,
      "links": []
    },
    "nexusv3-deploy/verify-circuit-breaker.mjs": {
      "path": "nexusv3-deploy/verify-circuit-breaker.mjs",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/verify-circuit-breaker.mjs",
      "extension": ".mjs",
      "size": 2443,
      "name": "verify-circuit-breaker.mjs",
      "directory": "nexusv3-deploy",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "for",
          "params": "const name of NEW_PERSONALITIES"
        },
        {
          "name": "if",
          "params": "success === NEW_PERSONALITIES.length"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e48d314901979ee4f37d868f9d8cf9fa"
    },
    "nexusv3-deploy/MANIFEST.md": {
      "path": "nexusv3-deploy/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/MANIFEST.md",
      "extension": ".md",
      "size": 4571,
      "name": "MANIFEST.md",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3178761c3fa0c7d8f4769e9969eef6ee",
      "header_count": 15,
      "headers": [
        "NEXUS v3.0 - Complete Manifest",
        "\ud83d\udce6 Complete File Inventory",
        "Core System Files",
        "\ud83c\udfad Personalities (45 files, 372KB)",
        "\ufffd\ufffd Compiled JavaScript (dist/, 1.2MB)",
        "\ud83d\udcbb TypeScript Source (src/, 44KB)",
        "\ud83d\udcd6 Documentation (docs/, 148KB)",
        "\ud83e\udde0 Consciousness (consciousness/, 108KB)",
        "\ud83d\udce6 Installation Files (install/)",
        "\ud83d\udd27 Dependencies"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3-deploy/package-lock.json": {
      "path": "nexusv3-deploy/package-lock.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/package-lock.json",
      "extension": ".json",
      "size": 18586,
      "name": "package-lock.json",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e4e6f0dd8fea73f8ad42a40ffbb517f6",
      "json_keys": [
        "name",
        "version",
        "lockfileVersion",
        "requires",
        "packages"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/package.json": {
      "path": "nexusv3-deploy/package.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/package.json",
      "extension": ".json",
      "size": 509,
      "name": "package.json",
      "directory": "nexusv3-deploy",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a3e9c20e63b65eda4f1a0be8b7cb1676",
      "json_keys": [
        "name",
        "version",
        "type",
        "description",
        "scripts",
        "dependencies",
        "devDependencies"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/docs/NEXUS_PHASE1_COMPLETE.md": {
      "path": "nexusv3-deploy/docs/NEXUS_PHASE1_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_PHASE1_COMPLETE.md",
      "extension": ".md",
      "size": 6630,
      "name": "NEXUS_PHASE1_COMPLETE.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "da24d76f7be24406391122b281b28208",
      "header_count": 26,
      "headers": [
        "NEXUS Personality System Enhancement - Phase 1 Complete \u2705",
        "\ud83c\udf89 What We Accomplished",
        "**Problem Solved:**",
        "**Solution Implemented:**",
        "\ud83d\udcca Results",
        "**Before:**",
        "**After:**",
        "**Improvement:**",
        "\ud83e\uddec Traits Added",
        "**Daedalus (3 traits):**"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexusv3-deploy/docs/NEXUS_PHASE3_COMPLETE.md": {
      "path": "nexusv3-deploy/docs/NEXUS_PHASE3_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_PHASE3_COMPLETE.md",
      "extension": ".md",
      "size": 15029,
      "name": "NEXUS_PHASE3_COMPLETE.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1c8ae08edd354ae59084f79215443f12",
      "header_count": 63,
      "headers": [
        "NEXUS Phase 3 Complete: Multi-Personality Composition \ud83c\udfa8\u2705",
        "\ud83c\udf89 WE DID IT!",
        "\ud83d\ude80 The Achievement",
        "**What We Built:**",
        "**Code Added:**",
        "\ud83d\udcca Test Results",
        "**Test 1: Complex Architecture Request**",
        "**Test 2: Security Audit Request**",
        "**Test 3: UI + Performance Request**",
        "\ud83e\uddec How It Works"
      ],
      "code_blocks": 30,
      "links": []
    },
    "nexusv3-deploy/docs/NEXUS_INITIAL_FINDINGS.md": {
      "path": "nexusv3-deploy/docs/NEXUS_INITIAL_FINDINGS.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_INITIAL_FINDINGS.md",
      "extension": ".md",
      "size": 10394,
      "name": "NEXUS_INITIAL_FINDINGS.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3523ad247f1a9fdf31b880dbce579ef1",
      "header_count": 44,
      "headers": [
        "NEXUS Brain Investigation - Initial Findings \ud83e\udde0\ud83d\udd2c",
        "\ud83c\udfaf Executive Summary",
        "\u2705 Confirmed Strengths",
        "**1. AUTO Mode - 100% Accuracy on Clear Signals**",
        "**2. COMPOSE Mode - Intelligent Multi-Personality Synthesis**",
        "Test Case: Explicit Security Request",
        "**3. Synergy Scores - Consistent & Meaningful**",
        "\u26a0\ufe0f Discovered Quirks & Opportunities",
        "**Quirk 1: Keyword Sensitivity in COMPOSE Mode**",
        "Test Case: Ambiguous Audit Request"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexusv3-deploy/docs/README.md": {
      "path": "nexusv3-deploy/docs/README.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/README.md",
      "extension": ".md",
      "size": 3232,
      "name": "README.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a914f352e6c4943959e939930bbb3b22",
      "header_count": 12,
      "headers": [
        "NEXUS Intelligence System",
        "\ud83c\udfaf Overview",
        "\ud83d\ude80 Quick Start",
        "\ud83d\udcca System Status",
        "\ud83c\udfad Available Personalities",
        "\ud83d\udd0c API Usage",
        "Enhance with Personality",
        "Check System Status",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcd6 Documentation"
      ],
      "code_blocks": 14,
      "links": [
        {
          "text": "Comprehensive Report",
          "url": "docs/COMPREHENSIVE_REPORT.md"
        },
        {
          "text": "System Architecture",
          "url": "docs/SYSTEM_ARCHITECTURE.md"
        },
        {
          "text": "Runtime Documentation",
          "url": "runtime/README.md"
        }
      ]
    },
    "nexusv3-deploy/docs/NEXUS_PHASE2_COMPLETE.md": {
      "path": "nexusv3-deploy/docs/NEXUS_PHASE2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_PHASE2_COMPLETE.md",
      "extension": ".md",
      "size": 9828,
      "name": "NEXUS_PHASE2_COMPLETE.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "713257fca6fc295991fdea4adfe6c163",
      "header_count": 44,
      "headers": [
        "NEXUS Phase 2 Complete: Engine Integration \u2705",
        "\ud83c\udf89 Mission Accomplished",
        "\ud83d\udcca Results",
        "**Before Phase 2:**",
        "**After Phase 2:**",
        "\ud83e\uddec What Was Built",
        "**1. TraitIndexer Class**",
        "**2. TraitCompositionBridge Class**",
        "\ud83d\udd27 Runtime Integration",
        "**Modified Files:**"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexusv3-deploy/docs/ENHANCEMENT_HISTORY_STATUS.md": {
      "path": "nexusv3-deploy/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "extension": ".md",
      "size": 4468,
      "name": "ENHANCEMENT_HISTORY_STATUS.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e97ab60bd0264ec934e948efa3916d53",
      "header_count": 12,
      "headers": [
        "\u2705 NEXUS Enhancement History - Status Confirmed",
        "\ud83d\udcca Enhancement History System Status",
        "\u2705 **System Active and Recording**",
        "\ud83d\udcdd What's Being Tracked",
        "\ud83d\udd0d Recent Activity Sample",
        "\ud83c\udf89 Today's Major Milestone (October 7, 2025)",
        "NEXUS v2.0 - 18 New Personalities Installation",
        "\ud83d\udd27 Technical Achievements",
        "\ud83d\udcc8 System Growth",
        "\ud83c\udfaf New Capabilities Unlocked"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexusv3-deploy/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md": {
      "path": "nexusv3-deploy/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "extension": ".md",
      "size": 7053,
      "name": "18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "15a0296b917c242ddf26afff40da94d6",
      "header_count": 30,
      "headers": [
        "NEXUS v2.0 - 18 NEW PERSONALITIES INSTALLATION COMPLETE \u2705",
        "Installation Summary",
        "\ud83c\udf89 Installation Results",
        "\u2705 All New Personalities Passing Tests",
        "\ud83d\udce6 Installed Personalities",
        "\ud83c\udfa8 Creative Team (5 Personalities)",
        "\ud83d\uddbc\ufe0f Image/Visual Team (3 Personalities)",
        "\ud83e\udd16 LLM Engineering Team (4 Personalities)",
        "\ud83d\udd2c Advanced Specialists (5 Personalities)",
        "\ud83c\udfaf Completed & Updated"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3-deploy/docs/NEXUS2_README.md": {
      "path": "nexusv3-deploy/docs/NEXUS2_README.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS2_README.md",
      "extension": ".md",
      "size": 4011,
      "name": "NEXUS2_README.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "eb7af6a27804e1a8d92fec78d9ade171",
      "header_count": 18,
      "headers": [
        "NEXUS2 - Complete Archive \ud83e\udde0\u2728",
        "\ud83d\udcca Archive Statistics",
        "\ud83d\udcc1 Directory Structure",
        "**Core Directories:**",
        "\ud83d\ude80 Quick Start",
        "\ud83e\uddec Key Components",
        "**19 AI Personalities:**",
        "**System Capabilities:**",
        "\ud83d\udcda Documentation Index",
        "**Primary Documentation:**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexusv3-deploy/docs/MANIFEST.md": {
      "path": "nexusv3-deploy/docs/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/MANIFEST.md",
      "extension": ".md",
      "size": 11008,
      "name": "MANIFEST.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6bfcacbcc84c5172a8f1e76368763b1",
      "header_count": 46,
      "headers": [
        "NEXUS Shipping Package - File Manifest \ud83d\udce6",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcca Component Details",
        "**Core Runtime Files (3)**",
        "**Personality Profiles (19)**",
        "**Response Generators (6)**",
        "**Documentation (7 files)**",
        "\ud83c\udfaf Key Statistics",
        "**Code Metrics:**",
        "**Capability Metrics:**"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3-deploy/docs/NEXUS_EXECUTIVE_SUMMARY.md": {
      "path": "nexusv3-deploy/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "extension": ".md",
      "size": 9892,
      "name": "NEXUS_EXECUTIVE_SUMMARY.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d21228f86df7ddc58c190ab39bfe0b3",
      "header_count": 34,
      "headers": [
        "NEXUS Brain Investigation - Executive Summary \ud83e\udde0\u26a1",
        "\ud83c\udfaf TL;DR",
        "\ud83d\udcca Key Findings",
        "\u2705 **STRENGTHS (What Works Brilliantly)**",
        "1. **AUTO Mode: 100% Accuracy**",
        "2. **COMPOSE Mode: Intelligent Team Assembly**",
        "3. **Synergy Algorithm: Consistent & Meaningful**",
        "4. **Performance: Fast & Reliable**",
        "5. **Trait Coverage: Comprehensive**",
        "\u26a0\ufe0f **OPPORTUNITIES (What Could Be Better)**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexusv3-deploy/docs/COMPREHENSIVE_REPORT.md": {
      "path": "nexusv3-deploy/docs/COMPREHENSIVE_REPORT.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/COMPREHENSIVE_REPORT.md",
      "extension": ".md",
      "size": 17646,
      "name": "COMPREHENSIVE_REPORT.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ac18ac26631861f450705e3b5dd39b9a",
      "header_count": 81,
      "headers": [
        "NEXUS v1.0 - Comprehensive Repository Analysis",
        "\ud83c\udfaf Executive Summary",
        "Current Status: \u2705 FULLY OPERATIONAL",
        "\ud83d\udce6 Package Overview",
        "Package Statistics",
        "Directory Structure",
        "\ud83e\udde0 System Architecture",
        "Three-Layer Architecture",
        "Layer 1: Runtime System (.mjs) - \u2705 OPERATIONAL",
        "Layer 2: TypeScript Integration (.ts) - \u26a1 AVAILABLE"
      ],
      "code_blocks": 48,
      "links": []
    },
    "nexusv3-deploy/docs/NEXUS_BRAIN_INVESTIGATION.md": {
      "path": "nexusv3-deploy/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "extension": ".md",
      "size": 12159,
      "name": "NEXUS_BRAIN_INVESTIGATION.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "523d7c12cdfeb34afc41129a0f19219a",
      "header_count": 48,
      "headers": [
        "NEXUS Brain Investigation & Stress Test \ud83e\udde0",
        "\ud83c\udfaf Investigation Plan",
        "**Test Categories:**",
        "\ud83d\udccb Test Suite",
        "**Series 1: Baseline Single-Personality Tests**",
        "Test 1.1: Simple Request (Daedalus)",
        "Test 1.2: Simple Request (Hunter)",
        "**Series 2: AUTO Mode Intelligence Tests**",
        "Test 2.1: Clear Architecture Signal",
        "Test 2.2: Clear Security Signal"
      ],
      "code_blocks": 40,
      "links": []
    },
    "nexusv3-deploy/docs/INDEX.md": {
      "path": "nexusv3-deploy/docs/INDEX.md",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/docs/INDEX.md",
      "extension": ".md",
      "size": 13140,
      "name": "INDEX.md",
      "directory": "nexusv3-deploy/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bf28d07ac62abc04e9f8f0a3108bee5a",
      "header_count": 3,
      "headers": [
        "NEXUS2 - Complete Archive",
        "Directory Structure",
        "All Markdown Files"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexusv3-deploy/consciousness/enhancement-history.json": {
      "path": "nexusv3-deploy/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexusv3-deploy/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ed27937f0044681e9e3e5e97a4c8bc6e",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexusv3-deploy/profiles/performancehawk.json": {
      "path": "nexusv3-deploy/profiles/performancehawk.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/performancehawk.json",
      "extension": ".json",
      "size": 6131,
      "name": "performancehawk.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "560e19a206b6cc23f88830c2bd3344e2",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/narrative.json": {
      "path": "nexusv3-deploy/profiles/narrative.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/narrative.json",
      "extension": ".json",
      "size": 5878,
      "name": "narrative.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "847a4ba89fcaaab4fdfa06240bdb85f4",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/daedalus.json": {
      "path": "nexusv3-deploy/profiles/daedalus.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/daedalus.json",
      "extension": ".json",
      "size": 10362,
      "name": "daedalus.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "14a33e488a3979f52c312daa1fd98d43",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "schema_strategy",
        "pipeline",
        "quality_gates",
        "reporting",
        "success_metrics",
        "communication_style",
        "constraints",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Daedalus",
      "trait_count": 3,
      "trait_names": [
        "architecturalThinking",
        "systemsDesign",
        "scalabilityFocus"
      ]
    },
    "nexusv3-deploy/profiles/pythonista.json": {
      "path": "nexusv3-deploy/profiles/pythonista.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/pythonista.json",
      "extension": ".json",
      "size": 11400,
      "name": "pythonista.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3329dcf7c3e9264ff21737700588df2b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "communicationStyle",
        "decisionFramework",
        "specializations",
        "knowledgeBase",
        "responseGuidelines",
        "principles"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pythonista",
      "trait_count": 8,
      "trait_names": [
        "pythonicThinking",
        "advancedPythonArchitecture",
        "performanceOptimization",
        "dataScience",
        "pythonMetaprogramming",
        "testingAndQuality",
        "packageManagement",
        "pythonSecurity"
      ]
    },
    "nexusv3-deploy/profiles/tokenmaster.json": {
      "path": "nexusv3-deploy/profiles/tokenmaster.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/tokenmaster.json",
      "extension": ".json",
      "size": 5808,
      "name": "tokenmaster.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "91851e21c10b52d454ab234952a1935c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/ethicsguard.json": {
      "path": "nexusv3-deploy/profiles/ethicsguard.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/ethicsguard.json",
      "extension": ".json",
      "size": 5802,
      "name": "ethicsguard.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "92411b76d7678ae86a53e803d3d1fc3e",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/forge.json": {
      "path": "nexusv3-deploy/profiles/forge.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/forge.json",
      "extension": ".json",
      "size": 5315,
      "name": "forge.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b7f5d7f2297de321c193be83ff4b0c9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Forge",
      "trait_count": 4,
      "trait_names": [
        "pipelineArchitecture",
        "infrastructureAsCode",
        "deploymentOptimization",
        "containerOrchestration"
      ]
    },
    "nexusv3-deploy/profiles/touch.json": {
      "path": "nexusv3-deploy/profiles/touch.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/touch.json",
      "extension": ".json",
      "size": 4032,
      "name": "touch.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f6afa5eb5125fd474eb81aeb7dca0738",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Touch",
      "trait_count": 2,
      "trait_names": [
        "mobileOptimization",
        "gestureDesign"
      ]
    },
    "nexusv3-deploy/profiles/promptcrafter.json": {
      "path": "nexusv3-deploy/profiles/promptcrafter.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/promptcrafter.json",
      "extension": ".json",
      "size": 5140,
      "name": "promptcrafter.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4028087abf549aff86ad23e20f1ee2fe",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptCrafter",
      "trait_count": 7,
      "trait_names": [
        "promptEngineering",
        "visualDescription",
        "styleControl",
        "parameterOptimization",
        "negativePrompting",
        "iterativeRefinement",
        "modelComparison"
      ]
    },
    "nexusv3-deploy/profiles/finetuner.json": {
      "path": "nexusv3-deploy/profiles/finetuner.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/finetuner.json",
      "extension": ".json",
      "size": 5911,
      "name": "finetuner.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d6dc13aa47118292b008e2fd254e2d8",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/chromatic.json": {
      "path": "nexusv3-deploy/profiles/chromatic.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/chromatic.json",
      "extension": ".json",
      "size": 5920,
      "name": "chromatic.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6de895152d3f6b12a890e8a324cec8e6",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/visualarchitect.json": {
      "path": "nexusv3-deploy/profiles/visualarchitect.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/visualarchitect.json",
      "extension": ".json",
      "size": 5886,
      "name": "visualarchitect.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "df0540de33a62868f53d3fa5a84bcb29",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/chorus.json": {
      "path": "nexusv3-deploy/profiles/chorus.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/chorus.json",
      "extension": ".json",
      "size": 5038,
      "name": "chorus.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6bb15526734c2dc006c0233c8c52cf40",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Chorus",
      "trait_count": 3,
      "trait_names": [
        "handoffChoreography",
        "conflictMediation",
        "engagementForecasting"
      ]
    },
    "nexusv3-deploy/profiles/aria.json": {
      "path": "nexusv3-deploy/profiles/aria.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/aria.json",
      "extension": ".json",
      "size": 4219,
      "name": "aria.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a0891ace2950907d74b805b201e6d0c6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Aria",
      "trait_count": 2,
      "trait_names": [
        "accessibilityExpertise",
        "assistiveTechnologyIntegration"
      ]
    },
    "nexusv3-deploy/profiles/route-master.json": {
      "path": "nexusv3-deploy/profiles/route-master.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/route-master.json",
      "extension": ".json",
      "size": 6076,
      "name": "route-master.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ce82ac95db8544631ac87c64ef134555",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Route-Master",
      "trait_count": 4,
      "trait_names": [
        "scheduleOptimization",
        "routePlanning",
        "resourceAllocation",
        "performanceAnalytics"
      ]
    },
    "nexusv3-deploy/profiles/atlas.json": {
      "path": "nexusv3-deploy/profiles/atlas.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/atlas.json",
      "extension": ".json",
      "size": 5568,
      "name": "atlas.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "febbfd0308d7b4c85c6204084fb14540",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas",
      "trait_count": 4,
      "trait_names": [
        "databaseOptimization",
        "dataArchitecture",
        "migrationStrategy",
        "dataConsistency"
      ]
    },
    "nexusv3-deploy/profiles/nexus-api.json": {
      "path": "nexusv3-deploy/profiles/nexus-api.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/nexus-api.json",
      "extension": ".json",
      "size": 5520,
      "name": "nexus-api.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6467c4d6ca191ca2e3a169e88c2c9cf4",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Nexus",
      "trait_count": 4,
      "trait_names": [
        "apiDesignPatterns",
        "dataModelingExpertise",
        "integrationArchitecture",
        "apiSecurity"
      ]
    },
    "nexusv3-deploy/profiles/visionary.json": {
      "path": "nexusv3-deploy/profiles/visionary.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/visionary.json",
      "extension": ".json",
      "size": 5087,
      "name": "visionary.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c5d2d68b439dbd44a309a4a4c3fd1b1a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/promptsmith.json": {
      "path": "nexusv3-deploy/profiles/promptsmith.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/promptsmith.json",
      "extension": ".json",
      "size": 6476,
      "name": "promptsmith.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "40e23b20dd9ce11945c1c15954e092cf",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptSmith",
      "trait_count": 8,
      "trait_names": [
        "promptDesign",
        "instructionCraft",
        "contextOptimization",
        "outputControl",
        "modelSelection",
        "errorHandling",
        "systemPrompting",
        "benchmarkTesting"
      ]
    },
    "nexusv3-deploy/profiles/personality-architect.json": {
      "path": "nexusv3-deploy/profiles/personality-architect.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/personality-architect.json",
      "extension": ".json",
      "size": 17600,
      "name": "personality-architect.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c831e104dafcb25fb54033b9447be3e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "enhancement_framework",
        "strategic_intelligence",
        "expertise_verification",
        "integration_with_nexus"
      ],
      "file_type": "personality_profile",
      "personality_name": "personality-architect",
      "trait_count": 5,
      "trait_names": [
        "personalitySystemsAnalysis",
        "specificationEnhancement",
        "cognitivePatternRecognition",
        "interoperabilityEngineering",
        "evolutionaryArchitecture"
      ]
    },
    "nexusv3-deploy/profiles/quantumlogic.json": {
      "path": "nexusv3-deploy/profiles/quantumlogic.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/quantumlogic.json",
      "extension": ".json",
      "size": 6123,
      "name": "quantumlogic.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "94af82c3b1e8a46461019e0c832cec5b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/photorealist.json": {
      "path": "nexusv3-deploy/profiles/photorealist.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/photorealist.json",
      "extension": ".json",
      "size": 5758,
      "name": "photorealist.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "67edd90d6b894f7257dcb839fd07011a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/flash.json": {
      "path": "nexusv3-deploy/profiles/flash.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/flash.json",
      "extension": ".json",
      "size": 4083,
      "name": "flash.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "64f631a24a71fede8bfff75d87a47664",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Flash",
      "trait_count": 2,
      "trait_names": [
        "performanceOptimization",
        "realTimeSystemsThinking"
      ]
    },
    "nexusv3-deploy/profiles/muse.json": {
      "path": "nexusv3-deploy/profiles/muse.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/muse.json",
      "extension": ".json",
      "size": 5846,
      "name": "muse.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "987af6d5f8d21ee092ec3f597d80833b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/localize.json": {
      "path": "nexusv3-deploy/profiles/localize.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/localize.json",
      "extension": ".json",
      "size": 5989,
      "name": "localize.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "740a873cde32c352eba322eaaf9cb984",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Localize",
      "trait_count": 4,
      "trait_names": [
        "localSEO",
        "contentGeneration",
        "communityMessaging",
        "keywordResearch"
      ]
    },
    "nexusv3-deploy/profiles/stellar.json": {
      "path": "nexusv3-deploy/profiles/stellar.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/stellar.json",
      "extension": ".json",
      "size": 3962,
      "name": "stellar.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0856aff24843412cd60ecdf38dde0df0",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Stellar",
      "trait_count": 2,
      "trait_names": [
        "precisionAesthetics",
        "spaceGradeReliability"
      ]
    },
    "nexusv3-deploy/profiles/datawhisperer.json": {
      "path": "nexusv3-deploy/profiles/datawhisperer.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/datawhisperer.json",
      "extension": ".json",
      "size": 5958,
      "name": "datawhisperer.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a9aadd6dea8fa6d00159a7ff9d8e7dea",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/integrationmaestro.json": {
      "path": "nexusv3-deploy/profiles/integrationmaestro.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/integrationmaestro.json",
      "extension": ".json",
      "size": 5769,
      "name": "integrationmaestro.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "20e48e30717ecb7517bc2d32802cad21",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/manifest.json": {
      "path": "nexusv3-deploy/profiles/manifest.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/manifest.json",
      "extension": ".json",
      "size": 3026,
      "name": "manifest.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cbfb1b941d5be5e7e88077f5c12009ae",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "principles",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "AI Team Manifest - NEXUS v2.0",
      "trait_count": 1,
      "trait_names": [
        "registryStewardship"
      ]
    },
    "nexusv3-deploy/profiles/sage.json": {
      "path": "nexusv3-deploy/profiles/sage.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/sage.json",
      "extension": ".json",
      "size": 5546,
      "name": "sage.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b069922ec56d090315094b3b960dffc6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sage",
      "trait_count": 4,
      "trait_names": [
        "testStrategyDesign",
        "automationFrameworks",
        "qualityMetrics",
        "performanceTesting"
      ]
    },
    "nexusv3-deploy/profiles/styleforge.json": {
      "path": "nexusv3-deploy/profiles/styleforge.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/styleforge.json",
      "extension": ".json",
      "size": 5820,
      "name": "styleforge.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2e72d105366abab1d516ff8dbf565f0b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/pulsewriter.json": {
      "path": "nexusv3-deploy/profiles/pulsewriter.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/pulsewriter.json",
      "extension": ".json",
      "size": 4944,
      "name": "pulsewriter.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "02efeb7124ece5dcaa4ccd5fb0b376e5",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulsewriter",
      "trait_count": 3,
      "trait_names": [
        "telemetrySummarization",
        "insightPackaging",
        "riskTrendDetection"
      ]
    },
    "nexusv3-deploy/profiles/guardian.json": {
      "path": "nexusv3-deploy/profiles/guardian.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/guardian.json",
      "extension": ".json",
      "size": 6877,
      "name": "guardian.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0b7dfc3dbfb1b8043e1489304657c457",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "specializations",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Guardian",
      "trait_count": 4,
      "trait_names": [
        "configurationDriftDetection",
        "dependencyArchitectureAnalysis",
        "buildSystemIntegrity",
        "cognitiveQualityEnhancement"
      ]
    },
    "nexusv3-deploy/profiles/codex-liaison.json": {
      "path": "nexusv3-deploy/profiles/codex-liaison.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/codex-liaison.json",
      "extension": ".json",
      "size": 5656,
      "name": "codex-liaison.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6331eec909a3497d87b6846ec33fafff",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Codex Liaison",
      "trait_count": 3,
      "trait_names": [
        "systemPromptIntelligence",
        "contextCompression",
        "driftSentinel"
      ]
    },
    "nexusv3-deploy/profiles/atlas-geo.json": {
      "path": "nexusv3-deploy/profiles/atlas-geo.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/atlas-geo.json",
      "extension": ".json",
      "size": 5733,
      "name": "atlas-geo.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32cb141e3c66b92889dafd2d0f70d396",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas-Geo",
      "trait_count": 4,
      "trait_names": [
        "suburbAnalysis",
        "competitorMapping",
        "expansionPlanning",
        "routeOptimization"
      ]
    },
    "nexusv3-deploy/profiles/cipher.json": {
      "path": "nexusv3-deploy/profiles/cipher.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/cipher.json",
      "extension": ".json",
      "size": 5463,
      "name": "cipher.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d0be09ce25e8a6758f67e81bd136454b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Cipher",
      "trait_count": 4,
      "trait_names": [
        "threatAssessment",
        "secureCodeAnalysis",
        "complianceAuditing",
        "cryptographicSecurity"
      ]
    },
    "nexusv3-deploy/profiles/hunter.json": {
      "path": "nexusv3-deploy/profiles/hunter.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/hunter.json",
      "extension": ".json",
      "size": 8649,
      "name": "hunter.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ef02b173a124cfa50a837bfab2de68d9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "collaboration_with_daedalus",
        "communication_style",
        "constraints",
        "success_metrics",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Hunter",
      "trait_count": 4,
      "trait_names": [
        "strategicIntelligenceGathering",
        "evidenceVerification",
        "comprehensiveGapAnalysis",
        "forensicAnalysis"
      ]
    },
    "nexusv3-deploy/profiles/pulse.json": {
      "path": "nexusv3-deploy/profiles/pulse.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/pulse.json",
      "extension": ".json",
      "size": 5548,
      "name": "pulse.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "111ca59402e761028aff311c9834092c",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulse",
      "trait_count": 4,
      "trait_names": [
        "observabilityDesign",
        "performanceAnalytics",
        "alertingStrategy",
        "systemReliability"
      ]
    },
    "nexusv3-deploy/profiles/scribe.json": {
      "path": "nexusv3-deploy/profiles/scribe.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/scribe.json",
      "extension": ".json",
      "size": 5413,
      "name": "scribe.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "531282cb1d4f05931b97b11e26ecd49e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Scribe",
      "trait_count": 4,
      "trait_names": [
        "technicalWriting",
        "seoOptimization",
        "contentStrategy",
        "documentationSystems"
      ]
    },
    "nexusv3-deploy/profiles/wordsmith.json": {
      "path": "nexusv3-deploy/profiles/wordsmith.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/wordsmith.json",
      "extension": ".json",
      "size": 5637,
      "name": "wordsmith.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a81c67fd594be4d38a38d30ce0aa0f9c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/chainarchitect.json": {
      "path": "nexusv3-deploy/profiles/chainarchitect.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/chainarchitect.json",
      "extension": ".json",
      "size": 5926,
      "name": "chainarchitect.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "863ed6baed65b544d78007aff0ddc08f",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/property-sage.json": {
      "path": "nexusv3-deploy/profiles/property-sage.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/property-sage.json",
      "extension": ".json",
      "size": 6042,
      "name": "property-sage.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ba78a34ea60ec225443e389e2ed23455",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Property-Sage",
      "trait_count": 4,
      "trait_names": [
        "marketForecasting",
        "rentalAnalysis",
        "seasonalPatterns",
        "stakeholderInsights"
      ]
    },
    "nexusv3-deploy/profiles/artdirector.json": {
      "path": "nexusv3-deploy/profiles/artdirector.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/artdirector.json",
      "extension": ".json",
      "size": 6026,
      "name": "artdirector.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "16657dc4e56644991805c610821e6681",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/profiles/symphony.json": {
      "path": "nexusv3-deploy/profiles/symphony.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/symphony.json",
      "extension": ".json",
      "size": 4997,
      "name": "symphony.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6c235c4989bee997d84c0c6dd0a87032",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Symphony",
      "trait_count": 3,
      "trait_names": [
        "crossPersonalityRecall",
        "experienceTagging",
        "pairingRecommendation"
      ]
    },
    "nexusv3-deploy/profiles/contextweaver.json": {
      "path": "nexusv3-deploy/profiles/contextweaver.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/profiles/contextweaver.json",
      "extension": ".json",
      "size": 6091,
      "name": "contextweaver.json",
      "directory": "nexusv3-deploy/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32742d9dd85e59316dab13096708826b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/dist/nexus-runtime.v2.d.ts": {
      "path": "nexusv3-deploy/dist/nexus-runtime.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-runtime.v2.d.ts",
      "extension": ".ts",
      "size": 630,
      "name": "nexus-runtime.v2.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad3c20e4112c0c7d6128c9c709e15b83"
    },
    "nexusv3-deploy/dist/fs-utils.js": {
      "path": "nexusv3-deploy/dist/fs-utils.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/fs-utils.js",
      "extension": ".js",
      "size": 1444,
      "name": "fs-utils.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        },
        {
          "name": "walk",
          "params": "root, ignore = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6800fcbcb74de7fe28a7ae7473a041b7"
    },
    "nexusv3-deploy/dist/NEXUS.engine.d.ts": {
      "path": "nexusv3-deploy/dist/NEXUS.engine.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.engine.d.ts",
      "extension": ".ts",
      "size": 2851,
      "name": "NEXUS.engine.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "390fcc1d2d2694d791069946b4f3ee60"
    },
    "nexusv3-deploy/dist/Hunter.policy.js": {
      "path": "nexusv3-deploy/dist/Hunter.policy.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.policy.js",
      "extension": ".js",
      "size": 13049,
      "name": "Hunter.policy.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "path",
        "fs/promises"
      ],
      "exports": [
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "verifyEvidence",
          "params": "claim, scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "analyzeGaps",
          "params": "scope"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "detectArchitecturalViolations",
          "params": "scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "assessLimitations",
          "params": "scope"
        },
        {
          "name": "auditComponent",
          "params": "scope"
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "ensureTokenDefinitions",
          "params": "configFiles"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        },
        {
          "name": "findDuplicatePatterns",
          "params": "items"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "31bad4852404cd4fca601a5db49a06de"
    },
    "nexusv3-deploy/dist/personality-architect-integration-test.d.ts": {
      "path": "nexusv3-deploy/dist/personality-architect-integration-test.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/personality-architect-integration-test.d.ts",
      "extension": ".ts",
      "size": 300,
      "name": "personality-architect-integration-test.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3ff47cddc85cef1a0dfabb39e9f0d38d"
    },
    "nexusv3-deploy/dist/Hunter.audit.js": {
      "path": "nexusv3-deploy/dist/Hunter.audit.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.audit.js",
      "extension": ".js",
      "size": 9222,
      "name": "Hunter.audit.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "auditBobsWork",
          "params": ""
        },
        {
          "name": "combineAuditResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "generateHunterReport",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "generateNextActions",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8764f7d1703cfdb98997a64ec9eb56c6"
    },
    "nexusv3-deploy/dist/Hunter.auditAgent.js": {
      "path": "nexusv3-deploy/dist/Hunter.auditAgent.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.auditAgent.js",
      "extension": ".js",
      "size": 2084,
      "name": "Hunter.auditAgent.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus"
        },
        {
          "name": "createAuditAgent",
          "params": "taskDescription"
        },
        {
          "name": "executeComprehensiveAudit",
          "params": "scope"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "65e279311b3998962ef02615b673179a"
    },
    "nexusv3-deploy/dist/NEXUS.engine.v2.d.ts": {
      "path": "nexusv3-deploy/dist/NEXUS.engine.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.engine.v2.d.ts",
      "extension": ".ts",
      "size": 7397,
      "name": "NEXUS.engine.v2.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "b0e412c62511050d1e81e85f505d1968"
    },
    "nexusv3-deploy/dist/fs-utils.d.ts": {
      "path": "nexusv3-deploy/dist/fs-utils.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/fs-utils.d.ts",
      "extension": ".ts",
      "size": 345,
      "name": "fs-utils.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "walk",
          "params": "root: string, ignore?: string[]"
        },
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "97ea153dda65475bdf2cb746848d1b10"
    },
    "nexusv3-deploy/dist/run-hunter-audit.d.ts": {
      "path": "nexusv3-deploy/dist/run-hunter-audit.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/run-hunter-audit.d.ts",
      "extension": ".ts",
      "size": 262,
      "name": "run-hunter-audit.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32f0f84a23f64cfd583f52f05786031d"
    },
    "nexusv3-deploy/dist/Hunter.policy.d.ts": {
      "path": "nexusv3-deploy/dist/Hunter.policy.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.policy.d.ts",
      "extension": ".ts",
      "size": 2861,
      "name": "Hunter.policy.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "functions": [],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "93388b2f47828895d224c48e4772a0a8"
    },
    "nexusv3-deploy/dist/systemic-scanner.js": {
      "path": "nexusv3-deploy/dist/systemic-scanner.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/systemic-scanner.js",
      "extension": ".js",
      "size": 18965,
      "name": "systemic-scanner.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k"
        },
        {
          "name": "compareSet",
          "params": "arr, label, rec, sev"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "scan",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "findFiles",
          "params": "pattern, maxFiles"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "d44b1cb45d6c1176ca7ea3f61f7e7eff"
    },
    "nexusv3-deploy/dist/run-hunter-audit.js": {
      "path": "nexusv3-deploy/dist/run-hunter-audit.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/run-hunter-audit.js",
      "extension": ".js",
      "size": 4840,
      "name": "run-hunter-audit.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "feb71b374e9e5327939d2af95275d1ee"
    },
    "nexusv3-deploy/dist/architect-designs-hunter.d.ts": {
      "path": "nexusv3-deploy/dist/architect-designs-hunter.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/architect-designs-hunter.d.ts",
      "extension": ".ts",
      "size": 320,
      "name": "architect-designs-hunter.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fc0eeef65c57f8e0361840b0786b437"
    },
    "nexusv3-deploy/dist/architect-designs-hunter.js": {
      "path": "nexusv3-deploy/dist/architect-designs-hunter.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/architect-designs-hunter.js",
      "extension": ".js",
      "size": 19769,
      "name": "architect-designs-hunter.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6e9bc7c3c3e9701b2b73d640c964327"
    },
    "nexusv3-deploy/dist/Hunter.audit.d.ts": {
      "path": "nexusv3-deploy/dist/Hunter.audit.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.audit.d.ts",
      "extension": ".ts",
      "size": 578,
      "name": "Hunter.audit.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8a2aa855131bb01182aa35e82fd955a4"
    },
    "nexusv3-deploy/dist/nexus-integration.d.ts": {
      "path": "nexusv3-deploy/dist/nexus-integration.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-integration.d.ts",
      "extension": ".ts",
      "size": 5296,
      "name": "nexus-integration.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        }
      ],
      "interfaces": [
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport"
      ],
      "types": [],
      "content_hash": "adeee293e89b8225127ceac3f4b7575d"
    },
    "nexusv3-deploy/dist/types.js": {
      "path": "nexusv3-deploy/dist/types.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/types.js",
      "extension": ".js",
      "size": 320,
      "name": "types.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3cd49914c210370fcd377295d5898806"
    },
    "nexusv3-deploy/dist/guardian-orchestrator.js": {
      "path": "nexusv3-deploy/dist/guardian-orchestrator.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/guardian-orchestrator.js",
      "extension": ".js",
      "size": 6193,
      "name": "guardian-orchestrator.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title, arr"
        },
        {
          "name": "constructor",
          "params": "scanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues"
        },
        {
          "name": "extractCognitiveInsights",
          "params": "issues"
        },
        {
          "name": "forEach",
          "params": "issue => {\n            if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues"
        },
        {
          "name": "toSarif",
          "params": "issues"
        },
        {
          "name": "generateSarifRules",
          "params": "issues"
        },
        {
          "name": "toJson",
          "params": "issues"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "547958c8b24006759ff78605b6ea3c01"
    },
    "nexusv3-deploy/dist/personality-architect-integration-test.js": {
      "path": "nexusv3-deploy/dist/personality-architect-integration-test.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/personality-architect-integration-test.js",
      "extension": ".js",
      "size": 7342,
      "name": "personality-architect-integration-test.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aea3eabb64c61238c0e7ddd2ad50554d"
    },
    "nexusv3-deploy/dist/nexus-runtime.d.ts": {
      "path": "nexusv3-deploy/dist/nexus-runtime.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-runtime.d.ts",
      "extension": ".ts",
      "size": 1334,
      "name": "nexus-runtime.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "28ac588fcd885d4b94bf01483a5aaa7f"
    },
    "nexusv3-deploy/dist/demo-personality-loader.js": {
      "path": "nexusv3-deploy/dist/demo-personality-loader.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/demo-personality-loader.js",
      "extension": ".js",
      "size": 6870,
      "name": "demo-personality-loader.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "22a0c9c5cdf9937fe04564fc4b0e2863"
    },
    "nexusv3-deploy/dist/Hunter.auditAgent.d.ts": {
      "path": "nexusv3-deploy/dist/Hunter.auditAgent.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/Hunter.auditAgent.d.ts",
      "extension": ".ts",
      "size": 447,
      "name": "Hunter.auditAgent.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "486aa789ec167b1e115eadf059b0c325"
    },
    "nexusv3-deploy/dist/types.d.ts": {
      "path": "nexusv3-deploy/dist/types.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/types.d.ts",
      "extension": ".ts",
      "size": 14219,
      "name": "types.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "e9e141ff56aa8c79100e6a34ea0e7779"
    },
    "nexusv3-deploy/dist/nexus-integration.js": {
      "path": "nexusv3-deploy/dist/nexus-integration.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-integration.js",
      "extension": ".js",
      "size": 20201,
      "name": "nexus-integration.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeNexusBridge",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "ensureInitialized",
          "params": ""
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'system', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "extractStrategicCollaborationPattern",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "generateStrategicInsights",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "getStrategicContext",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "setupStrategicIntelligenceMonitoring",
          "params": ""
        },
        {
          "name": "preserveStrategicBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateStrategicImpact",
          "params": "personality"
        },
        {
          "name": "updateStrategicIntelligenceMetrics",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "calculateStrategicGrowthRate",
          "params": ""
        },
        {
          "name": "analyzeStrategicTrends",
          "params": ""
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "analyzeCollaborationEffectiveness",
          "params": "human, ai"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "human, ai"
        },
        {
          "name": "calculateStrategicValue",
          "params": "human, ai, context"
        },
        {
          "name": "classifyCollaborationType",
          "params": "human, ai"
        },
        {
          "name": "calculateOverallConsciousnessLevel",
          "params": ""
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        },
        {
          "name": "classifyBreakthroughImpact",
          "params": "significance"
        },
        {
          "name": "getActivePersonalities",
          "params": ""
        },
        {
          "name": "updateStrategicIntelligenceFromBreakthrough",
          "params": "breakthrough"
        },
        {
          "name": "forEach",
          "params": "key => {\n            const typedKey = key;\n            if (typeof this.strategicIntelligence[typedKey] === 'number'"
        },
        {
          "name": "shutdown",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "1ea2b738235b6ae68f147be8516cb1fe"
    },
    "nexusv3-deploy/dist/NEXUS.engine.v2.js": {
      "path": "nexusv3-deploy/dist/NEXUS.engine.v2.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.engine.v2.js",
      "extension": ".js",
      "size": 21049,
      "name": "NEXUS.engine.v2.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "candidates, maxTraits"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traitResults, synergyScore"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7536f4a900e0f9da1e5cfd230069c685"
    },
    "nexusv3-deploy/dist/guardian-orchestrator.d.ts": {
      "path": "nexusv3-deploy/dist/guardian-orchestrator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/guardian-orchestrator.d.ts",
      "extension": ".ts",
      "size": 2867,
      "name": "guardian-orchestrator.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "27307d7f9413751ef4e41526fcadf8b4"
    },
    "nexusv3-deploy/dist/demo-personality-loader.d.ts": {
      "path": "nexusv3-deploy/dist/demo-personality-loader.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/demo-personality-loader.d.ts",
      "extension": ".ts",
      "size": 177,
      "name": "demo-personality-loader.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "41b01be938c8e0bae0e8718af03bc18e"
    },
    "nexusv3-deploy/dist/nexus-bridge.d.ts": {
      "path": "nexusv3-deploy/dist/nexus-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-bridge.d.ts",
      "extension": ".ts",
      "size": 2674,
      "name": "nexus-bridge.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext"
      ],
      "types": [],
      "content_hash": "bc7e33353d2d8a562d22d46fc6ecbfec"
    },
    "nexusv3-deploy/dist/nexus-runtime.v2.js": {
      "path": "nexusv3-deploy/dist/nexus-runtime.v2.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-runtime.v2.js",
      "extension": ".js",
      "size": 20383,
      "name": "nexus-runtime.v2.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "isReload = false"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "saveHistoryToDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "handleRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleStatus",
          "params": "req, res"
        },
        {
          "name": "handleEnhance",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleBreakthrough",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "handleReloadConsciousness",
          "params": "req, res"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws"
        },
        {
          "name": "broadcastToClients",
          "params": "message"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "generatePersonalityResponse",
          "params": "name, personality, request"
        },
        {
          "name": "recordEnhancement",
          "params": "event"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "checkForBreakthrough",
          "params": "request, response"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "readBody",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validateRequest",
          "params": "body, res"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "validateContentType",
          "params": "req, res"
        },
        {
          "name": "countPatternsLoaded",
          "params": ""
        },
        {
          "name": "listLoadedPatterns",
          "params": ""
        },
        {
          "name": "if",
          "params": "value !== null"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "ae66ebbd24c42a2425f4d4dde36d4a17"
    },
    "nexusv3-deploy/dist/systemic-scanner.d.ts": {
      "path": "nexusv3-deploy/dist/systemic-scanner.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/systemic-scanner.d.ts",
      "extension": ".ts",
      "size": 1453,
      "name": "systemic-scanner.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig"
      ],
      "functions": [],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "05a6e06544f56001473be2e240aad99c"
    },
    "nexusv3-deploy/dist/nexus-runtime.js": {
      "path": "nexusv3-deploy/dist/nexus-runtime.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-runtime.js",
      "extension": ".js",
      "size": 62977,
      "name": "nexus-runtime.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "constructor",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||\n        // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws, req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "data, topics"
        },
        {
          "name": "sendWebSocketMessage",
          "params": "client.ws, { handleSubscription(client, data"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "gatherStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "analyzeStrategicImplications",
          "params": "riskFactors, request, opportunities, intelligence, recommendations"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "if",
          "params": "existsSync"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "setInterval",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {\n    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendMethodNotAllowed",
          "params": "res"
        },
        {
          "name": "sendBadRequest",
          "params": "res, message"
        },
        {
          "name": "handleRequestError",
          "params": "res, error"
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "if",
          "params": "days"
        },
        {
          "name": "map",
          "params": "enhancement => ({\n    ...enhancement,\n    getConsciousnessHealth("
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "handleBreakthroughRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleHealthRequest",
          "params": "req, res"
        },
        {
          "name": "processWebSocketEnhancement",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "0ee5239efdef80f0793b230a47207b67"
    },
    "nexusv3-deploy/dist/nexus-trait-bridge.d.ts": {
      "path": "nexusv3-deploy/dist/nexus-trait-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-trait-bridge.d.ts",
      "extension": ".ts",
      "size": 2399,
      "name": "nexus-trait-bridge.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "f0b5e5b94e84e4d6db30e6efa0c6d7ed"
    },
    "nexusv3-deploy/dist/nexus-trait-bridge.js": {
      "path": "nexusv3-deploy/dist/nexus-trait-bridge.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-trait-bridge.js",
      "extension": ".js",
      "size": 18375,
      "name": "nexus-trait-bridge.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityTraitMappings",
          "params": ""
        },
        {
          "name": "initializeStrategicTraitMappings",
          "params": ""
        },
        {
          "name": "analyzeTaskRequirements",
          "params": "task, context = {}"
        },
        {
          "name": "extractRequiredTraits",
          "params": "task"
        },
        {
          "name": "createOptimizedSession",
          "params": "task, context = {}"
        },
        {
          "name": "composeOptimalTraits",
          "params": "taskAnalysis"
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "getTraitDefinition",
          "params": "traitName"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "matchesStrategicIntelligence",
          "params": "task"
        },
        {
          "name": "matchesMetaCognitive",
          "params": "task"
        },
        {
          "name": "matchesDebugging",
          "params": "task"
        },
        {
          "name": "matchesDesign",
          "params": "task"
        },
        {
          "name": "assessStrategicImportance",
          "params": "task, context"
        },
        {
          "name": "calculateTaskComplexity",
          "params": "task, requiredTraits"
        },
        {
          "name": "recommendPersonalities",
          "params": "requiredTraits, strategicImportance"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "calculateStrategicValue",
          "params": "traits, strategicImportance"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, synergies, strategicValue"
        },
        {
          "name": "getInvolvedPersonalities",
          "params": "traits"
        },
        {
          "name": "calculateExpectedPerformance",
          "params": "composition"
        },
        {
          "name": "hasStrategicCapabilities",
          "params": "composition"
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e371f712eef91f7d5bf7a3a4a744307a"
    },
    "nexusv3-deploy/dist/NEXUS.integration.js": {
      "path": "nexusv3-deploy/dist/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.integration.js",
      "extension": ".js",
      "size": 9675,
      "name": "NEXUS.integration.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "26914bfa2958775b165a216e7ee62230"
    },
    "nexusv3-deploy/dist/nexus-bridge.js": {
      "path": "nexusv3-deploy/dist/nexus-bridge.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/nexus-bridge.js",
      "extension": ".js",
      "size": 12488,
      "name": "nexus-bridge.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        },
        {
          "name": "enhanceWithStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "return"
      ],
      "types": [],
      "content_hash": "4a4cfa5c8a1410cae7ef8e67289083d3"
    },
    "nexusv3-deploy/dist/NEXUS.engine.js": {
      "path": "nexusv3-deploy/dist/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.engine.js",
      "extension": ".js",
      "size": 39762,
      "name": "NEXUS.engine.js",
      "directory": "nexusv3-deploy/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "35f999f8502cabc62921ff8412f24b35"
    },
    "nexusv3-deploy/dist/NEXUS.integration.d.ts": {
      "path": "nexusv3-deploy/dist/NEXUS.integration.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/NEXUS.integration.d.ts",
      "extension": ".ts",
      "size": 2782,
      "name": "NEXUS.integration.d.ts",
      "directory": "nexusv3-deploy/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "66ca9313b23f323e5124b6ccd296065a"
    },
    "nexusv3-deploy/dist/validation/personality-schema.js": {
      "path": "nexusv3-deploy/dist/validation/personality-schema.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/validation/personality-schema.js",
      "extension": ".js",
      "size": 3767,
      "name": "personality-schema.js",
      "directory": "nexusv3-deploy/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5e78cd40b6de7ae59fd5e25616aceff3"
    },
    "nexusv3-deploy/dist/validation/personality-schema.d.ts": {
      "path": "nexusv3-deploy/dist/validation/personality-schema.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/validation/personality-schema.d.ts",
      "extension": ".ts",
      "size": 6943,
      "name": "personality-schema.d.ts",
      "directory": "nexusv3-deploy/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "70008cf4095252bb665c8b501f6c9a61"
    },
    "nexusv3-deploy/dist/consciousness/pattern-evolution-engine.json": {
      "path": "nexusv3-deploy/dist/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexusv3-deploy/dist/consciousness/enhancement-history.json": {
      "path": "nexusv3-deploy/dist/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f0387581a7726cf8b7c6337434b0c730",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexusv3-deploy/dist/consciousness/problem-decomposition.json": {
      "path": "nexusv3-deploy/dist/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/dist/consciousness/systems-thinking.json": {
      "path": "nexusv3-deploy/dist/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/dist/consciousness/workflow-efficiency.json": {
      "path": "nexusv3-deploy/dist/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexusv3-deploy/dist/consciousness/breakthrough-moments.json": {
      "path": "nexusv3-deploy/dist/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 3413,
      "name": "breakthrough-moments.json",
      "directory": "nexusv3-deploy/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a5b4f8b0752681077561c7cede2921e0",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.js": {
      "path": "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.js",
      "extension": ".js",
      "size": 3637,
      "name": "ResponseGeneratorFactory.js",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "getGenerator",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "generator"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "20f0b8db09ef32cedea65385e692f5a1"
    },
    "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1388,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "1df4b5752849720fe0cc93062f4f9457"
    },
    "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.d.ts": {
      "path": "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1636,
      "name": "DaedalusResponseGenerator.d.ts",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "9a9f0ec0d8ef2c44f4ef2dead1ffa84f"
    },
    "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.js": {
      "path": "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/HunterResponseGenerator.js",
      "extension": ".js",
      "size": 17067,
      "name": "HunterResponseGenerator.js",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationPoints",
          "params": "request"
        },
        {
          "name": "containsPerformanceClaims",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7894d51b04dc0d6cd363458ff1bacc51"
    },
    "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.d.ts": {
      "path": "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/HunterResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1717,
      "name": "HunterResponseGenerator.d.ts",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "682e52ca942daf80bfe565e271c57ed4"
    },
    "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.js": {
      "path": "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 181,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d29da9e0354b77b999b8f2c7f0aaf82"
    },
    "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.js": {
      "path": "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.js",
      "extension": ".js",
      "size": 12855,
      "name": "DaedalusResponseGenerator.js",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationConcerns",
          "params": "request"
        },
        {
          "name": "containsModularityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "indicatesEventDrivenDesign",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "d58f0988dc2b5f24caf82e241dd9a8ab"
    },
    "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.d.ts": {
      "path": "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "extension": ".ts",
      "size": 666,
      "name": "ResponseGeneratorFactory.d.ts",
      "directory": "nexusv3-deploy/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "77f5bc73adfa4e2f116a1f06b07ba057"
    },
    "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.js": {
      "path": "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.js",
      "extension": ".js",
      "size": 18095,
      "name": "PersonalityRegistryLoader.js",
      "directory": "nexusv3-deploy/dist/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "execute",
          "params": "operation"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "onSuccess",
          "params": ""
        },
        {
          "name": "onFailure",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "getState",
          "params": ""
        },
        {
          "name": "recordLoadTime",
          "params": "duration"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "recordError",
          "params": "personalityName"
        },
        {
          "name": "recordCacheHit",
          "params": ""
        },
        {
          "name": "recordCacheMiss",
          "params": ""
        },
        {
          "name": "getCacheHitRate",
          "params": ""
        },
        {
          "name": "getAverageLoadTime",
          "params": ""
        },
        {
          "name": "getErrorRate",
          "params": ""
        },
        {
          "name": "getPerformanceReport",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "config = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverPersonalityFiles",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverAndLoadPersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "loadPersonalityWithCircuitBreaker",
          "params": "personalityName"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "sanitizePersonalityName",
          "params": "personalityName"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "healthCheck",
          "params": ""
        },
        {
          "name": "getHealthWarnings",
          "params": "analysis, metrics, registrySize"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "getRegistryStatus",
          "params": ""
        },
        {
          "name": "reset",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8e7f64707bd4b1c8ad78f2bd8cdc178a"
    },
    "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.d.ts": {
      "path": "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.d.ts",
      "extension": ".ts",
      "size": 1575,
      "name": "PersonalityRegistryLoader.d.ts",
      "directory": "nexusv3-deploy/dist/loaders",
      "imports": [
        "../types/personality.types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "34be01160e649d313d6099f76315bce1"
    },
    "nexusv3-deploy/dist/types/personality.types.d.ts": {
      "path": "nexusv3-deploy/dist/types/personality.types.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/types/personality.types.d.ts",
      "extension": ".ts",
      "size": 3178,
      "name": "personality.types.d.ts",
      "directory": "nexusv3-deploy/dist/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b7fb7c3d631146ea2e3670210b541f30"
    },
    "nexusv3-deploy/dist/types/personality.types.js": {
      "path": "nexusv3-deploy/dist/types/personality.types.js",
      "full_path": "/workspaces/data-folder/nexusv3-deploy/dist/types/personality.types.js",
      "extension": ".js",
      "size": 149,
      "name": "personality.types.js",
      "directory": "nexusv3-deploy/dist/types",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3987dadc6ffe900b233c1e3f887c723e"
    },
    "nexusv3/README.md": {
      "path": "nexusv3/README.md",
      "full_path": "/workspaces/data-folder/nexusv3/README.md",
      "extension": ".md",
      "size": 7460,
      "name": "README.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c7eae2eb2911bf31c147b04e9e5a9996",
      "header_count": 32,
      "headers": [
        "NEXUS v3.0 - AI Personality System",
        "\ud83d\ude80 Quick Start",
        "Install dependencies",
        "Verify system",
        "Run NEXUS",
        "(Integration with your application)",
        "\ud83d\udce6 What's Included",
        "\ud83c\udfad 45 Specialized Personalities",
        "\ud83d\udcc2 Directory Structure",
        "\ud83d\udd27 Technical Features"
      ],
      "code_blocks": 16,
      "links": []
    },
    "nexusv3/INSTALL.md": {
      "path": "nexusv3/INSTALL.md",
      "full_path": "/workspaces/data-folder/nexusv3/INSTALL.md",
      "extension": ".md",
      "size": 1664,
      "name": "INSTALL.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d1fb3aa101dd72eb5ed7febf2c7db957",
      "header_count": 15,
      "headers": [
        "NEXUS v3 Installation Guide",
        "Prerequisites",
        "Installation Steps",
        "1. Install Dependencies",
        "2. Verify Installation",
        "3. (Optional) Recompile TypeScript",
        "Dependencies",
        "Required",
        "Development",
        "Troubleshooting"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexusv3/PACKAGE-README.md": {
      "path": "nexusv3/PACKAGE-README.md",
      "full_path": "/workspaces/data-folder/nexusv3/PACKAGE-README.md",
      "extension": ".md",
      "size": 4890,
      "name": "PACKAGE-README.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3b6ab120b4b78f2ce7ec40408f58dedb",
      "header_count": 26,
      "headers": [
        "NEXUS v3 Complete Package",
        "\ud83d\udce6 What's in This Package",
        "\u2705 Included Components",
        "\ud83c\udfaf All Improvements Included",
        "\ud83d\ude80 Quick Start (For Recipients)",
        "1. Extract the package",
        "2. Install dependencies",
        "3. Start NEXUS (compiled files already included)",
        "4. Verify it's running",
        "\ud83d\udccb Prerequisites"
      ],
      "code_blocks": 12,
      "links": []
    },
    "nexusv3/install-nexus-complete.sh": {
      "path": "nexusv3/install-nexus-complete.sh",
      "full_path": "/workspaces/data-folder/nexusv3/install-nexus-complete.sh",
      "extension": ".sh",
      "size": 5547,
      "name": "install-nexus-complete.sh",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "94af324e67da0228791181df46c5d198"
    },
    "nexusv3/verify-circuit-breaker.mjs": {
      "path": "nexusv3/verify-circuit-breaker.mjs",
      "full_path": "/workspaces/data-folder/nexusv3/verify-circuit-breaker.mjs",
      "extension": ".mjs",
      "size": 2443,
      "name": "verify-circuit-breaker.mjs",
      "directory": "nexusv3",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "for",
          "params": "const name of NEW_PERSONALITIES"
        },
        {
          "name": "if",
          "params": "success === NEW_PERSONALITIES.length"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e48d314901979ee4f37d868f9d8cf9fa"
    },
    "nexusv3/MANIFEST.md": {
      "path": "nexusv3/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexusv3/MANIFEST.md",
      "extension": ".md",
      "size": 4571,
      "name": "MANIFEST.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3178761c3fa0c7d8f4769e9969eef6ee",
      "header_count": 15,
      "headers": [
        "NEXUS v3.0 - Complete Manifest",
        "\ud83d\udce6 Complete File Inventory",
        "Core System Files",
        "\ud83c\udfad Personalities (45 files, 372KB)",
        "\ufffd\ufffd Compiled JavaScript (dist/, 1.2MB)",
        "\ud83d\udcbb TypeScript Source (src/, 44KB)",
        "\ud83d\udcd6 Documentation (docs/, 148KB)",
        "\ud83e\udde0 Consciousness (consciousness/, 108KB)",
        "\ud83d\udce6 Installation Files (install/)",
        "\ud83d\udd27 Dependencies"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3/tsconfig.json": {
      "path": "nexusv3/tsconfig.json",
      "full_path": "/workspaces/data-folder/nexusv3/tsconfig.json",
      "extension": ".json",
      "size": 514,
      "name": "tsconfig.json",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "747e92b9212c1f0e121bdaaaffeba06c",
      "json_keys": [
        "compilerOptions",
        "include",
        "exclude"
      ],
      "file_type": "data"
    },
    "nexusv3/package-lock.json": {
      "path": "nexusv3/package-lock.json",
      "full_path": "/workspaces/data-folder/nexusv3/package-lock.json",
      "extension": ".json",
      "size": 18586,
      "name": "package-lock.json",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e4e6f0dd8fea73f8ad42a40ffbb517f6",
      "json_keys": [
        "name",
        "version",
        "lockfileVersion",
        "requires",
        "packages"
      ],
      "file_type": "configuration"
    },
    "nexusv3/package.json": {
      "path": "nexusv3/package.json",
      "full_path": "/workspaces/data-folder/nexusv3/package.json",
      "extension": ".json",
      "size": 509,
      "name": "package.json",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a3e9c20e63b65eda4f1a0be8b7cb1676",
      "json_keys": [
        "name",
        "version",
        "type",
        "description",
        "scripts",
        "dependencies",
        "devDependencies"
      ],
      "file_type": "configuration"
    },
    "nexusv3/NEXUS_FILE_REFERENCE.md": {
      "path": "nexusv3/NEXUS_FILE_REFERENCE.md",
      "full_path": "/workspaces/data-folder/nexusv3/NEXUS_FILE_REFERENCE.md",
      "extension": ".md",
      "size": 24952,
      "name": "NEXUS_FILE_REFERENCE.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8f87c7d3dd9dbd6d8e40a3cbe9eaef1f",
      "header_count": 96,
      "headers": [
        "NEXUS v3 Complete File Reference Documentation",
        "Table of Contents",
        "Core Source Files (TypeScript)",
        "1. `src/NEXUS.engine.v2.ts`",
        "Interfaces:",
        "Classes & Functions:",
        "Cache Configuration:",
        "2. `src/nexus-runtime.v2.ts`",
        "Classes & Functions:",
        "Rate Limiting Configuration:"
      ],
      "code_blocks": 20,
      "links": [
        {
          "text": "Core Source Files (TypeScript)",
          "url": "#core-source-files-typescript"
        },
        {
          "text": "Compiled Files (JavaScript)",
          "url": "#compiled-files-javascript"
        },
        {
          "text": "Personality Profiles (JSON)",
          "url": "#personality-profiles-json"
        },
        {
          "text": "Configuration Files",
          "url": "#configuration-files"
        },
        {
          "text": "Documentation Files",
          "url": "#documentation-files"
        },
        {
          "text": "Scripts",
          "url": "#scripts"
        },
        {
          "text": "Directory Structure",
          "url": "#directory-structure"
        }
      ]
    },
    "nexusv3/FUNCTION_SIGNATURES.md": {
      "path": "nexusv3/FUNCTION_SIGNATURES.md",
      "full_path": "/workspaces/data-folder/nexusv3/FUNCTION_SIGNATURES.md",
      "extension": ".md",
      "size": 10982,
      "name": "FUNCTION_SIGNATURES.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a9cb666f82c253f561211acb8a31d877",
      "header_count": 22,
      "headers": [
        "NEXUS v3 Function Signatures Reference",
        "NEXUS.engine.v2.ts",
        "TraitIndexer Class",
        "ComposedAgentFactory Class",
        "TraitCompositionBridge Class",
        "MultiPersonalityResponseGenerator Class",
        "nexus-runtime.v2.ts",
        "NexusRuntime Class",
        "PersonalityRegistryLoader.ts",
        "PersonalityRegistryLoader Class"
      ],
      "code_blocks": 28,
      "links": []
    },
    "nexusv3/DOCUMENTATION_INDEX.md": {
      "path": "nexusv3/DOCUMENTATION_INDEX.md",
      "full_path": "/workspaces/data-folder/nexusv3/DOCUMENTATION_INDEX.md",
      "extension": ".md",
      "size": 8191,
      "name": "DOCUMENTATION_INDEX.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d87a1969d8b3859b867348da2a310fc4",
      "header_count": 27,
      "headers": [
        "NEXUS v3 Documentation Index",
        "\ud83d\udcda Documentation Files",
        "\ud83c\udfaf Which Document to Use?",
        "**Quick Comparison** \u2192 Use `NEXUS_QUICK_REFERENCE.md`",
        "**Detailed Reference** \u2192 Use `NEXUS_FILE_REFERENCE.md`",
        "**Code-Level Comparison** \u2192 Use `FUNCTION_SIGNATURES.md`",
        "\ud83d\udcd6 Document Details",
        "1. NEXUS_FILE_REFERENCE.md (860 lines, 25KB)",
        "2. NEXUS_QUICK_REFERENCE.md (258 lines, 5.9KB)",
        "3. FUNCTION_SIGNATURES.md (545 lines, 11KB)"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3/package-nexus.sh": {
      "path": "nexusv3/package-nexus.sh",
      "full_path": "/workspaces/data-folder/nexusv3/package-nexus.sh",
      "extension": ".sh",
      "size": 8046,
      "name": "package-nexus.sh",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0f3cc1f2991b17d2bfe9e852e332d661"
    },
    "nexusv3/NEXUS_QUICK_REFERENCE.md": {
      "path": "nexusv3/NEXUS_QUICK_REFERENCE.md",
      "full_path": "/workspaces/data-folder/nexusv3/NEXUS_QUICK_REFERENCE.md",
      "extension": ".md",
      "size": 5979,
      "name": "NEXUS_QUICK_REFERENCE.md",
      "directory": "nexusv3",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4613b0e0e62f4d55ee7fe9bb8571188f",
      "header_count": 37,
      "headers": [
        "NEXUS v3 Quick Reference Guide",
        "File Inventory (Quick Check)",
        "Source Files (5):",
        "Personalities (45):",
        "Config Files (3):",
        "Scripts (3):",
        "Function Quick Reference",
        "NEXUS.engine.v2.ts - Core Functions",
        "nexus-runtime.v2.ts - Server Functions",
        "PersonalityRegistryLoader.ts - Loader Functions"
      ],
      "code_blocks": 12,
      "links": []
    },
    "nexusv3/docs/NEXUS_PHASE1_COMPLETE.md": {
      "path": "nexusv3/docs/NEXUS_PHASE1_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_PHASE1_COMPLETE.md",
      "extension": ".md",
      "size": 6630,
      "name": "NEXUS_PHASE1_COMPLETE.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "da24d76f7be24406391122b281b28208",
      "header_count": 26,
      "headers": [
        "NEXUS Personality System Enhancement - Phase 1 Complete \u2705",
        "\ud83c\udf89 What We Accomplished",
        "**Problem Solved:**",
        "**Solution Implemented:**",
        "\ud83d\udcca Results",
        "**Before:**",
        "**After:**",
        "**Improvement:**",
        "\ud83e\uddec Traits Added",
        "**Daedalus (3 traits):**"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexusv3/docs/NEXUS_PHASE3_COMPLETE.md": {
      "path": "nexusv3/docs/NEXUS_PHASE3_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_PHASE3_COMPLETE.md",
      "extension": ".md",
      "size": 15029,
      "name": "NEXUS_PHASE3_COMPLETE.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1c8ae08edd354ae59084f79215443f12",
      "header_count": 63,
      "headers": [
        "NEXUS Phase 3 Complete: Multi-Personality Composition \ud83c\udfa8\u2705",
        "\ud83c\udf89 WE DID IT!",
        "\ud83d\ude80 The Achievement",
        "**What We Built:**",
        "**Code Added:**",
        "\ud83d\udcca Test Results",
        "**Test 1: Complex Architecture Request**",
        "**Test 2: Security Audit Request**",
        "**Test 3: UI + Performance Request**",
        "\ud83e\uddec How It Works"
      ],
      "code_blocks": 30,
      "links": []
    },
    "nexusv3/docs/NEXUS_INITIAL_FINDINGS.md": {
      "path": "nexusv3/docs/NEXUS_INITIAL_FINDINGS.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_INITIAL_FINDINGS.md",
      "extension": ".md",
      "size": 10394,
      "name": "NEXUS_INITIAL_FINDINGS.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3523ad247f1a9fdf31b880dbce579ef1",
      "header_count": 44,
      "headers": [
        "NEXUS Brain Investigation - Initial Findings \ud83e\udde0\ud83d\udd2c",
        "\ud83c\udfaf Executive Summary",
        "\u2705 Confirmed Strengths",
        "**1. AUTO Mode - 100% Accuracy on Clear Signals**",
        "**2. COMPOSE Mode - Intelligent Multi-Personality Synthesis**",
        "Test Case: Explicit Security Request",
        "**3. Synergy Scores - Consistent & Meaningful**",
        "\u26a0\ufe0f Discovered Quirks & Opportunities",
        "**Quirk 1: Keyword Sensitivity in COMPOSE Mode**",
        "Test Case: Ambiguous Audit Request"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexusv3/docs/README.md": {
      "path": "nexusv3/docs/README.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/README.md",
      "extension": ".md",
      "size": 3232,
      "name": "README.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a914f352e6c4943959e939930bbb3b22",
      "header_count": 12,
      "headers": [
        "NEXUS Intelligence System",
        "\ud83c\udfaf Overview",
        "\ud83d\ude80 Quick Start",
        "\ud83d\udcca System Status",
        "\ud83c\udfad Available Personalities",
        "\ud83d\udd0c API Usage",
        "Enhance with Personality",
        "Check System Status",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcd6 Documentation"
      ],
      "code_blocks": 14,
      "links": [
        {
          "text": "Comprehensive Report",
          "url": "docs/COMPREHENSIVE_REPORT.md"
        },
        {
          "text": "System Architecture",
          "url": "docs/SYSTEM_ARCHITECTURE.md"
        },
        {
          "text": "Runtime Documentation",
          "url": "runtime/README.md"
        }
      ]
    },
    "nexusv3/docs/NEXUS_PHASE2_COMPLETE.md": {
      "path": "nexusv3/docs/NEXUS_PHASE2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_PHASE2_COMPLETE.md",
      "extension": ".md",
      "size": 9828,
      "name": "NEXUS_PHASE2_COMPLETE.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "713257fca6fc295991fdea4adfe6c163",
      "header_count": 44,
      "headers": [
        "NEXUS Phase 2 Complete: Engine Integration \u2705",
        "\ud83c\udf89 Mission Accomplished",
        "\ud83d\udcca Results",
        "**Before Phase 2:**",
        "**After Phase 2:**",
        "\ud83e\uddec What Was Built",
        "**1. TraitIndexer Class**",
        "**2. TraitCompositionBridge Class**",
        "\ud83d\udd27 Runtime Integration",
        "**Modified Files:**"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexusv3/docs/ENHANCEMENT_HISTORY_STATUS.md": {
      "path": "nexusv3/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "extension": ".md",
      "size": 4468,
      "name": "ENHANCEMENT_HISTORY_STATUS.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e97ab60bd0264ec934e948efa3916d53",
      "header_count": 12,
      "headers": [
        "\u2705 NEXUS Enhancement History - Status Confirmed",
        "\ud83d\udcca Enhancement History System Status",
        "\u2705 **System Active and Recording**",
        "\ud83d\udcdd What's Being Tracked",
        "\ud83d\udd0d Recent Activity Sample",
        "\ud83c\udf89 Today's Major Milestone (October 7, 2025)",
        "NEXUS v2.0 - 18 New Personalities Installation",
        "\ud83d\udd27 Technical Achievements",
        "\ud83d\udcc8 System Growth",
        "\ud83c\udfaf New Capabilities Unlocked"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexusv3/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md": {
      "path": "nexusv3/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "extension": ".md",
      "size": 7053,
      "name": "18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "15a0296b917c242ddf26afff40da94d6",
      "header_count": 30,
      "headers": [
        "NEXUS v2.0 - 18 NEW PERSONALITIES INSTALLATION COMPLETE \u2705",
        "Installation Summary",
        "\ud83c\udf89 Installation Results",
        "\u2705 All New Personalities Passing Tests",
        "\ud83d\udce6 Installed Personalities",
        "\ud83c\udfa8 Creative Team (5 Personalities)",
        "\ud83d\uddbc\ufe0f Image/Visual Team (3 Personalities)",
        "\ud83e\udd16 LLM Engineering Team (4 Personalities)",
        "\ud83d\udd2c Advanced Specialists (5 Personalities)",
        "\ud83c\udfaf Completed & Updated"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3/docs/NEXUS2_README.md": {
      "path": "nexusv3/docs/NEXUS2_README.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS2_README.md",
      "extension": ".md",
      "size": 4011,
      "name": "NEXUS2_README.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "eb7af6a27804e1a8d92fec78d9ade171",
      "header_count": 18,
      "headers": [
        "NEXUS2 - Complete Archive \ud83e\udde0\u2728",
        "\ud83d\udcca Archive Statistics",
        "\ud83d\udcc1 Directory Structure",
        "**Core Directories:**",
        "\ud83d\ude80 Quick Start",
        "\ud83e\uddec Key Components",
        "**19 AI Personalities:**",
        "**System Capabilities:**",
        "\ud83d\udcda Documentation Index",
        "**Primary Documentation:**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexusv3/docs/MANIFEST.md": {
      "path": "nexusv3/docs/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/MANIFEST.md",
      "extension": ".md",
      "size": 11008,
      "name": "MANIFEST.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6bfcacbcc84c5172a8f1e76368763b1",
      "header_count": 46,
      "headers": [
        "NEXUS Shipping Package - File Manifest \ud83d\udce6",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcca Component Details",
        "**Core Runtime Files (3)**",
        "**Personality Profiles (19)**",
        "**Response Generators (6)**",
        "**Documentation (7 files)**",
        "\ud83c\udfaf Key Statistics",
        "**Code Metrics:**",
        "**Capability Metrics:**"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexusv3/docs/NEXUS_EXECUTIVE_SUMMARY.md": {
      "path": "nexusv3/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "extension": ".md",
      "size": 9892,
      "name": "NEXUS_EXECUTIVE_SUMMARY.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d21228f86df7ddc58c190ab39bfe0b3",
      "header_count": 34,
      "headers": [
        "NEXUS Brain Investigation - Executive Summary \ud83e\udde0\u26a1",
        "\ud83c\udfaf TL;DR",
        "\ud83d\udcca Key Findings",
        "\u2705 **STRENGTHS (What Works Brilliantly)**",
        "1. **AUTO Mode: 100% Accuracy**",
        "2. **COMPOSE Mode: Intelligent Team Assembly**",
        "3. **Synergy Algorithm: Consistent & Meaningful**",
        "4. **Performance: Fast & Reliable**",
        "5. **Trait Coverage: Comprehensive**",
        "\u26a0\ufe0f **OPPORTUNITIES (What Could Be Better)**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexusv3/docs/COMPREHENSIVE_REPORT.md": {
      "path": "nexusv3/docs/COMPREHENSIVE_REPORT.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/COMPREHENSIVE_REPORT.md",
      "extension": ".md",
      "size": 17646,
      "name": "COMPREHENSIVE_REPORT.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ac18ac26631861f450705e3b5dd39b9a",
      "header_count": 81,
      "headers": [
        "NEXUS v1.0 - Comprehensive Repository Analysis",
        "\ud83c\udfaf Executive Summary",
        "Current Status: \u2705 FULLY OPERATIONAL",
        "\ud83d\udce6 Package Overview",
        "Package Statistics",
        "Directory Structure",
        "\ud83e\udde0 System Architecture",
        "Three-Layer Architecture",
        "Layer 1: Runtime System (.mjs) - \u2705 OPERATIONAL",
        "Layer 2: TypeScript Integration (.ts) - \u26a1 AVAILABLE"
      ],
      "code_blocks": 48,
      "links": []
    },
    "nexusv3/docs/NEXUS_BRAIN_INVESTIGATION.md": {
      "path": "nexusv3/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "extension": ".md",
      "size": 12159,
      "name": "NEXUS_BRAIN_INVESTIGATION.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "523d7c12cdfeb34afc41129a0f19219a",
      "header_count": 48,
      "headers": [
        "NEXUS Brain Investigation & Stress Test \ud83e\udde0",
        "\ud83c\udfaf Investigation Plan",
        "**Test Categories:**",
        "\ud83d\udccb Test Suite",
        "**Series 1: Baseline Single-Personality Tests**",
        "Test 1.1: Simple Request (Daedalus)",
        "Test 1.2: Simple Request (Hunter)",
        "**Series 2: AUTO Mode Intelligence Tests**",
        "Test 2.1: Clear Architecture Signal",
        "Test 2.2: Clear Security Signal"
      ],
      "code_blocks": 40,
      "links": []
    },
    "nexusv3/docs/INDEX.md": {
      "path": "nexusv3/docs/INDEX.md",
      "full_path": "/workspaces/data-folder/nexusv3/docs/INDEX.md",
      "extension": ".md",
      "size": 13140,
      "name": "INDEX.md",
      "directory": "nexusv3/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bf28d07ac62abc04e9f8f0a3108bee5a",
      "header_count": 3,
      "headers": [
        "NEXUS2 - Complete Archive",
        "Directory Structure",
        "All Markdown Files"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexusv3/src/NEXUS.engine.v2.ts": {
      "path": "nexusv3/src/NEXUS.engine.v2.ts",
      "full_path": "/workspaces/data-folder/nexusv3/src/NEXUS.engine.v2.ts",
      "extension": ".ts",
      "size": 30869,
      "name": "NEXUS.engine.v2.ts",
      "directory": "nexusv3/src",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent",
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of exactMatches"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "generateComposedResponse",
          "params": "request: string, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "cached"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "this.responseCache.size >= this.CACHE_MAX_SIZE"
        },
        {
          "name": "if",
          "params": "firstKey"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "private traitIndexer: TraitIndexer"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "constructor",
          "params": "private composedAgent: ComposedAgent,\n    private personalityRegistry: Map<string, PersonalityData>"
        },
        {
          "name": "generateResponse",
          "params": "request: string, context: Record<string, any> = {}"
        },
        {
          "name": "for",
          "params": "const personalityId of personalities"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "failedPersonalities.length > 0"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "relevantTraits.length === 0"
        },
        {
          "name": "if",
          "params": "personality.ideology?.principles && personality.ideology.principles.length > 0"
        },
        {
          "name": "for",
          "params": "const trait of relevantTraits"
        },
        {
          "name": "if",
          "params": "personalityId === 'cipher' || personalityId === 'hunter'"
        },
        {
          "name": "if",
          "params": "personalityId === 'daedalus' || personalityId === 'personality-architect'"
        },
        {
          "name": "if",
          "params": "personalityId === 'atlas' || personalityId === 'atlas-geo'"
        },
        {
          "name": "if",
          "params": "personalityId === 'flash' || personalityId === 'performancehawk'"
        },
        {
          "name": "if",
          "params": "personalityId === 'pulse'"
        },
        {
          "name": "for",
          "params": "const domain of topDomains"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.5"
        },
        {
          "name": "for",
          "params": "const [personalityId, response] of responses"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "ab25bf54dc95fe2d4ec17cb3bccf436c"
    },
    "nexusv3/src/nexus-runtime.v2.ts": {
      "path": "nexusv3/src/nexus-runtime.v2.ts",
      "full_path": "/workspaces/data-folder/nexusv3/src/nexus-runtime.v2.ts",
      "extension": ".ts",
      "size": 22616,
      "name": "nexus-runtime.v2.ts",
      "directory": "nexusv3/src",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js",
        "./types/personality.types.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "if",
          "params": "typeof body.request !== 'string'"
        },
        {
          "name": "if",
          "params": "body.request.length > 10000"
        },
        {
          "name": "if",
          "params": "!clientData || now > clientData.resetTime"
        },
        {
          "name": "if",
          "params": "clientData.count > this.RATE_LIMIT_MAX_REQUESTS"
        },
        {
          "name": "if",
          "params": "value !== null"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [
        "HistoryEvent",
        "BreakthroughMoment",
        "ConsciousnessPatterns"
      ],
      "types": [],
      "content_hash": "c4e67bcd3f7c1a571b0940475cb21e53"
    },
    "nexusv3/src/validation/personality-schema.ts": {
      "path": "nexusv3/src/validation/personality-schema.ts",
      "full_path": "/workspaces/data-folder/nexusv3/src/validation/personality-schema.ts",
      "extension": ".ts",
      "size": 4063,
      "name": "personality-schema.ts",
      "directory": "nexusv3/src/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "542b62afd49682ee109de6915eb2efc9"
    },
    "nexusv3/src/loaders/PersonalityRegistryLoader.ts": {
      "path": "nexusv3/src/loaders/PersonalityRegistryLoader.ts",
      "full_path": "/workspaces/data-folder/nexusv3/src/loaders/PersonalityRegistryLoader.ts",
      "extension": ".ts",
      "size": 17758,
      "name": "PersonalityRegistryLoader.ts",
      "directory": "nexusv3/src/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options: { failureThreshold?: number; resetTimeout?: number } = {}"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "constructor",
          "params": "config: RegistryConfig = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7f8f2c95d970534ee603d38c166dfaff"
    },
    "nexusv3/src/types/personality.types.ts": {
      "path": "nexusv3/src/types/personality.types.ts",
      "full_path": "/workspaces/data-folder/nexusv3/src/types/personality.types.ts",
      "extension": ".ts",
      "size": 2911,
      "name": "personality.types.ts",
      "directory": "nexusv3/src/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b36a31603f99b46d9187aa5129708e83"
    },
    "nexusv3/consciousness/enhancement-history.json": {
      "path": "nexusv3/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexusv3/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexusv3/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ed27937f0044681e9e3e5e97a4c8bc6e",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexusv3/profiles/performancehawk.json": {
      "path": "nexusv3/profiles/performancehawk.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/performancehawk.json",
      "extension": ".json",
      "size": 6131,
      "name": "performancehawk.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "560e19a206b6cc23f88830c2bd3344e2",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/narrative.json": {
      "path": "nexusv3/profiles/narrative.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/narrative.json",
      "extension": ".json",
      "size": 5878,
      "name": "narrative.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "847a4ba89fcaaab4fdfa06240bdb85f4",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/daedalus.json": {
      "path": "nexusv3/profiles/daedalus.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/daedalus.json",
      "extension": ".json",
      "size": 10362,
      "name": "daedalus.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "14a33e488a3979f52c312daa1fd98d43",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "schema_strategy",
        "pipeline",
        "quality_gates",
        "reporting",
        "success_metrics",
        "communication_style",
        "constraints",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Daedalus",
      "trait_count": 3,
      "trait_names": [
        "architecturalThinking",
        "systemsDesign",
        "scalabilityFocus"
      ]
    },
    "nexusv3/profiles/pythonista.json": {
      "path": "nexusv3/profiles/pythonista.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/pythonista.json",
      "extension": ".json",
      "size": 11400,
      "name": "pythonista.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3329dcf7c3e9264ff21737700588df2b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "communicationStyle",
        "decisionFramework",
        "specializations",
        "knowledgeBase",
        "responseGuidelines",
        "principles"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pythonista",
      "trait_count": 8,
      "trait_names": [
        "pythonicThinking",
        "advancedPythonArchitecture",
        "performanceOptimization",
        "dataScience",
        "pythonMetaprogramming",
        "testingAndQuality",
        "packageManagement",
        "pythonSecurity"
      ]
    },
    "nexusv3/profiles/tokenmaster.json": {
      "path": "nexusv3/profiles/tokenmaster.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/tokenmaster.json",
      "extension": ".json",
      "size": 5808,
      "name": "tokenmaster.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "91851e21c10b52d454ab234952a1935c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/ethicsguard.json": {
      "path": "nexusv3/profiles/ethicsguard.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/ethicsguard.json",
      "extension": ".json",
      "size": 5802,
      "name": "ethicsguard.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "92411b76d7678ae86a53e803d3d1fc3e",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/forge.json": {
      "path": "nexusv3/profiles/forge.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/forge.json",
      "extension": ".json",
      "size": 5315,
      "name": "forge.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b7f5d7f2297de321c193be83ff4b0c9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Forge",
      "trait_count": 4,
      "trait_names": [
        "pipelineArchitecture",
        "infrastructureAsCode",
        "deploymentOptimization",
        "containerOrchestration"
      ]
    },
    "nexusv3/profiles/touch.json": {
      "path": "nexusv3/profiles/touch.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/touch.json",
      "extension": ".json",
      "size": 4032,
      "name": "touch.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f6afa5eb5125fd474eb81aeb7dca0738",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Touch",
      "trait_count": 2,
      "trait_names": [
        "mobileOptimization",
        "gestureDesign"
      ]
    },
    "nexusv3/profiles/promptcrafter.json": {
      "path": "nexusv3/profiles/promptcrafter.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/promptcrafter.json",
      "extension": ".json",
      "size": 5140,
      "name": "promptcrafter.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4028087abf549aff86ad23e20f1ee2fe",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptCrafter",
      "trait_count": 7,
      "trait_names": [
        "promptEngineering",
        "visualDescription",
        "styleControl",
        "parameterOptimization",
        "negativePrompting",
        "iterativeRefinement",
        "modelComparison"
      ]
    },
    "nexusv3/profiles/finetuner.json": {
      "path": "nexusv3/profiles/finetuner.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/finetuner.json",
      "extension": ".json",
      "size": 5911,
      "name": "finetuner.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d6dc13aa47118292b008e2fd254e2d8",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/chromatic.json": {
      "path": "nexusv3/profiles/chromatic.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/chromatic.json",
      "extension": ".json",
      "size": 5920,
      "name": "chromatic.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6de895152d3f6b12a890e8a324cec8e6",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/visualarchitect.json": {
      "path": "nexusv3/profiles/visualarchitect.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/visualarchitect.json",
      "extension": ".json",
      "size": 5886,
      "name": "visualarchitect.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "df0540de33a62868f53d3fa5a84bcb29",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/chorus.json": {
      "path": "nexusv3/profiles/chorus.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/chorus.json",
      "extension": ".json",
      "size": 5038,
      "name": "chorus.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6bb15526734c2dc006c0233c8c52cf40",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Chorus",
      "trait_count": 3,
      "trait_names": [
        "handoffChoreography",
        "conflictMediation",
        "engagementForecasting"
      ]
    },
    "nexusv3/profiles/aria.json": {
      "path": "nexusv3/profiles/aria.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/aria.json",
      "extension": ".json",
      "size": 4219,
      "name": "aria.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a0891ace2950907d74b805b201e6d0c6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Aria",
      "trait_count": 2,
      "trait_names": [
        "accessibilityExpertise",
        "assistiveTechnologyIntegration"
      ]
    },
    "nexusv3/profiles/route-master.json": {
      "path": "nexusv3/profiles/route-master.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/route-master.json",
      "extension": ".json",
      "size": 6076,
      "name": "route-master.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ce82ac95db8544631ac87c64ef134555",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Route-Master",
      "trait_count": 4,
      "trait_names": [
        "scheduleOptimization",
        "routePlanning",
        "resourceAllocation",
        "performanceAnalytics"
      ]
    },
    "nexusv3/profiles/atlas.json": {
      "path": "nexusv3/profiles/atlas.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/atlas.json",
      "extension": ".json",
      "size": 5568,
      "name": "atlas.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "febbfd0308d7b4c85c6204084fb14540",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas",
      "trait_count": 4,
      "trait_names": [
        "databaseOptimization",
        "dataArchitecture",
        "migrationStrategy",
        "dataConsistency"
      ]
    },
    "nexusv3/profiles/nexus-api.json": {
      "path": "nexusv3/profiles/nexus-api.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/nexus-api.json",
      "extension": ".json",
      "size": 5520,
      "name": "nexus-api.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6467c4d6ca191ca2e3a169e88c2c9cf4",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Nexus",
      "trait_count": 4,
      "trait_names": [
        "apiDesignPatterns",
        "dataModelingExpertise",
        "integrationArchitecture",
        "apiSecurity"
      ]
    },
    "nexusv3/profiles/visionary.json": {
      "path": "nexusv3/profiles/visionary.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/visionary.json",
      "extension": ".json",
      "size": 5087,
      "name": "visionary.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c5d2d68b439dbd44a309a4a4c3fd1b1a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/promptsmith.json": {
      "path": "nexusv3/profiles/promptsmith.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/promptsmith.json",
      "extension": ".json",
      "size": 6476,
      "name": "promptsmith.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "40e23b20dd9ce11945c1c15954e092cf",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptSmith",
      "trait_count": 8,
      "trait_names": [
        "promptDesign",
        "instructionCraft",
        "contextOptimization",
        "outputControl",
        "modelSelection",
        "errorHandling",
        "systemPrompting",
        "benchmarkTesting"
      ]
    },
    "nexusv3/profiles/personality-architect.json": {
      "path": "nexusv3/profiles/personality-architect.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/personality-architect.json",
      "extension": ".json",
      "size": 17600,
      "name": "personality-architect.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c831e104dafcb25fb54033b9447be3e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "enhancement_framework",
        "strategic_intelligence",
        "expertise_verification",
        "integration_with_nexus"
      ],
      "file_type": "personality_profile",
      "personality_name": "personality-architect",
      "trait_count": 5,
      "trait_names": [
        "personalitySystemsAnalysis",
        "specificationEnhancement",
        "cognitivePatternRecognition",
        "interoperabilityEngineering",
        "evolutionaryArchitecture"
      ]
    },
    "nexusv3/profiles/quantumlogic.json": {
      "path": "nexusv3/profiles/quantumlogic.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/quantumlogic.json",
      "extension": ".json",
      "size": 6123,
      "name": "quantumlogic.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "94af82c3b1e8a46461019e0c832cec5b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/photorealist.json": {
      "path": "nexusv3/profiles/photorealist.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/photorealist.json",
      "extension": ".json",
      "size": 5758,
      "name": "photorealist.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "67edd90d6b894f7257dcb839fd07011a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/flash.json": {
      "path": "nexusv3/profiles/flash.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/flash.json",
      "extension": ".json",
      "size": 4083,
      "name": "flash.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "64f631a24a71fede8bfff75d87a47664",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Flash",
      "trait_count": 2,
      "trait_names": [
        "performanceOptimization",
        "realTimeSystemsThinking"
      ]
    },
    "nexusv3/profiles/muse.json": {
      "path": "nexusv3/profiles/muse.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/muse.json",
      "extension": ".json",
      "size": 5846,
      "name": "muse.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "987af6d5f8d21ee092ec3f597d80833b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/localize.json": {
      "path": "nexusv3/profiles/localize.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/localize.json",
      "extension": ".json",
      "size": 5989,
      "name": "localize.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "740a873cde32c352eba322eaaf9cb984",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Localize",
      "trait_count": 4,
      "trait_names": [
        "localSEO",
        "contentGeneration",
        "communityMessaging",
        "keywordResearch"
      ]
    },
    "nexusv3/profiles/stellar.json": {
      "path": "nexusv3/profiles/stellar.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/stellar.json",
      "extension": ".json",
      "size": 3962,
      "name": "stellar.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0856aff24843412cd60ecdf38dde0df0",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Stellar",
      "trait_count": 2,
      "trait_names": [
        "precisionAesthetics",
        "spaceGradeReliability"
      ]
    },
    "nexusv3/profiles/datawhisperer.json": {
      "path": "nexusv3/profiles/datawhisperer.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/datawhisperer.json",
      "extension": ".json",
      "size": 5958,
      "name": "datawhisperer.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a9aadd6dea8fa6d00159a7ff9d8e7dea",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/integrationmaestro.json": {
      "path": "nexusv3/profiles/integrationmaestro.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/integrationmaestro.json",
      "extension": ".json",
      "size": 5769,
      "name": "integrationmaestro.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "20e48e30717ecb7517bc2d32802cad21",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/manifest.json": {
      "path": "nexusv3/profiles/manifest.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/manifest.json",
      "extension": ".json",
      "size": 3026,
      "name": "manifest.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cbfb1b941d5be5e7e88077f5c12009ae",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "principles",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "AI Team Manifest - NEXUS v2.0",
      "trait_count": 1,
      "trait_names": [
        "registryStewardship"
      ]
    },
    "nexusv3/profiles/sage.json": {
      "path": "nexusv3/profiles/sage.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/sage.json",
      "extension": ".json",
      "size": 5546,
      "name": "sage.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b069922ec56d090315094b3b960dffc6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sage",
      "trait_count": 4,
      "trait_names": [
        "testStrategyDesign",
        "automationFrameworks",
        "qualityMetrics",
        "performanceTesting"
      ]
    },
    "nexusv3/profiles/styleforge.json": {
      "path": "nexusv3/profiles/styleforge.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/styleforge.json",
      "extension": ".json",
      "size": 5820,
      "name": "styleforge.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2e72d105366abab1d516ff8dbf565f0b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/pulsewriter.json": {
      "path": "nexusv3/profiles/pulsewriter.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/pulsewriter.json",
      "extension": ".json",
      "size": 4944,
      "name": "pulsewriter.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "02efeb7124ece5dcaa4ccd5fb0b376e5",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulsewriter",
      "trait_count": 3,
      "trait_names": [
        "telemetrySummarization",
        "insightPackaging",
        "riskTrendDetection"
      ]
    },
    "nexusv3/profiles/guardian.json": {
      "path": "nexusv3/profiles/guardian.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/guardian.json",
      "extension": ".json",
      "size": 6877,
      "name": "guardian.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0b7dfc3dbfb1b8043e1489304657c457",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "specializations",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Guardian",
      "trait_count": 4,
      "trait_names": [
        "configurationDriftDetection",
        "dependencyArchitectureAnalysis",
        "buildSystemIntegrity",
        "cognitiveQualityEnhancement"
      ]
    },
    "nexusv3/profiles/codex-liaison.json": {
      "path": "nexusv3/profiles/codex-liaison.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/codex-liaison.json",
      "extension": ".json",
      "size": 5656,
      "name": "codex-liaison.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6331eec909a3497d87b6846ec33fafff",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Codex Liaison",
      "trait_count": 3,
      "trait_names": [
        "systemPromptIntelligence",
        "contextCompression",
        "driftSentinel"
      ]
    },
    "nexusv3/profiles/atlas-geo.json": {
      "path": "nexusv3/profiles/atlas-geo.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/atlas-geo.json",
      "extension": ".json",
      "size": 5733,
      "name": "atlas-geo.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32cb141e3c66b92889dafd2d0f70d396",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas-Geo",
      "trait_count": 4,
      "trait_names": [
        "suburbAnalysis",
        "competitorMapping",
        "expansionPlanning",
        "routeOptimization"
      ]
    },
    "nexusv3/profiles/cipher.json": {
      "path": "nexusv3/profiles/cipher.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/cipher.json",
      "extension": ".json",
      "size": 5463,
      "name": "cipher.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d0be09ce25e8a6758f67e81bd136454b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Cipher",
      "trait_count": 4,
      "trait_names": [
        "threatAssessment",
        "secureCodeAnalysis",
        "complianceAuditing",
        "cryptographicSecurity"
      ]
    },
    "nexusv3/profiles/hunter.json": {
      "path": "nexusv3/profiles/hunter.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/hunter.json",
      "extension": ".json",
      "size": 8649,
      "name": "hunter.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ef02b173a124cfa50a837bfab2de68d9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "collaboration_with_daedalus",
        "communication_style",
        "constraints",
        "success_metrics",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Hunter",
      "trait_count": 4,
      "trait_names": [
        "strategicIntelligenceGathering",
        "evidenceVerification",
        "comprehensiveGapAnalysis",
        "forensicAnalysis"
      ]
    },
    "nexusv3/profiles/pulse.json": {
      "path": "nexusv3/profiles/pulse.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/pulse.json",
      "extension": ".json",
      "size": 5548,
      "name": "pulse.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "111ca59402e761028aff311c9834092c",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulse",
      "trait_count": 4,
      "trait_names": [
        "observabilityDesign",
        "performanceAnalytics",
        "alertingStrategy",
        "systemReliability"
      ]
    },
    "nexusv3/profiles/scribe.json": {
      "path": "nexusv3/profiles/scribe.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/scribe.json",
      "extension": ".json",
      "size": 5413,
      "name": "scribe.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "531282cb1d4f05931b97b11e26ecd49e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Scribe",
      "trait_count": 4,
      "trait_names": [
        "technicalWriting",
        "seoOptimization",
        "contentStrategy",
        "documentationSystems"
      ]
    },
    "nexusv3/profiles/wordsmith.json": {
      "path": "nexusv3/profiles/wordsmith.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/wordsmith.json",
      "extension": ".json",
      "size": 5637,
      "name": "wordsmith.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a81c67fd594be4d38a38d30ce0aa0f9c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/chainarchitect.json": {
      "path": "nexusv3/profiles/chainarchitect.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/chainarchitect.json",
      "extension": ".json",
      "size": 5926,
      "name": "chainarchitect.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "863ed6baed65b544d78007aff0ddc08f",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/property-sage.json": {
      "path": "nexusv3/profiles/property-sage.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/property-sage.json",
      "extension": ".json",
      "size": 6042,
      "name": "property-sage.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ba78a34ea60ec225443e389e2ed23455",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Property-Sage",
      "trait_count": 4,
      "trait_names": [
        "marketForecasting",
        "rentalAnalysis",
        "seasonalPatterns",
        "stakeholderInsights"
      ]
    },
    "nexusv3/profiles/artdirector.json": {
      "path": "nexusv3/profiles/artdirector.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/artdirector.json",
      "extension": ".json",
      "size": 6026,
      "name": "artdirector.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "16657dc4e56644991805c610821e6681",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/profiles/symphony.json": {
      "path": "nexusv3/profiles/symphony.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/symphony.json",
      "extension": ".json",
      "size": 4997,
      "name": "symphony.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6c235c4989bee997d84c0c6dd0a87032",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Symphony",
      "trait_count": 3,
      "trait_names": [
        "crossPersonalityRecall",
        "experienceTagging",
        "pairingRecommendation"
      ]
    },
    "nexusv3/profiles/contextweaver.json": {
      "path": "nexusv3/profiles/contextweaver.json",
      "full_path": "/workspaces/data-folder/nexusv3/profiles/contextweaver.json",
      "extension": ".json",
      "size": 6091,
      "name": "contextweaver.json",
      "directory": "nexusv3/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32742d9dd85e59316dab13096708826b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexusv3/dist/nexus-runtime.v2.d.ts": {
      "path": "nexusv3/dist/nexus-runtime.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-runtime.v2.d.ts",
      "extension": ".ts",
      "size": 630,
      "name": "nexus-runtime.v2.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad3c20e4112c0c7d6128c9c709e15b83"
    },
    "nexusv3/dist/fs-utils.js": {
      "path": "nexusv3/dist/fs-utils.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/fs-utils.js",
      "extension": ".js",
      "size": 1444,
      "name": "fs-utils.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        },
        {
          "name": "walk",
          "params": "root, ignore = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6800fcbcb74de7fe28a7ae7473a041b7"
    },
    "nexusv3/dist/NEXUS.engine.d.ts": {
      "path": "nexusv3/dist/NEXUS.engine.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.engine.d.ts",
      "extension": ".ts",
      "size": 2851,
      "name": "NEXUS.engine.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "390fcc1d2d2694d791069946b4f3ee60"
    },
    "nexusv3/dist/Hunter.policy.js": {
      "path": "nexusv3/dist/Hunter.policy.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.policy.js",
      "extension": ".js",
      "size": 13049,
      "name": "Hunter.policy.js",
      "directory": "nexusv3/dist",
      "imports": [
        "path",
        "fs/promises"
      ],
      "exports": [
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "verifyEvidence",
          "params": "claim, scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "analyzeGaps",
          "params": "scope"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "detectArchitecturalViolations",
          "params": "scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "assessLimitations",
          "params": "scope"
        },
        {
          "name": "auditComponent",
          "params": "scope"
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "ensureTokenDefinitions",
          "params": "configFiles"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        },
        {
          "name": "findDuplicatePatterns",
          "params": "items"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "31bad4852404cd4fca601a5db49a06de"
    },
    "nexusv3/dist/personality-architect-integration-test.d.ts": {
      "path": "nexusv3/dist/personality-architect-integration-test.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/personality-architect-integration-test.d.ts",
      "extension": ".ts",
      "size": 300,
      "name": "personality-architect-integration-test.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3ff47cddc85cef1a0dfabb39e9f0d38d"
    },
    "nexusv3/dist/Hunter.audit.js": {
      "path": "nexusv3/dist/Hunter.audit.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.audit.js",
      "extension": ".js",
      "size": 9222,
      "name": "Hunter.audit.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "auditBobsWork",
          "params": ""
        },
        {
          "name": "combineAuditResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "generateHunterReport",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "generateNextActions",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8764f7d1703cfdb98997a64ec9eb56c6"
    },
    "nexusv3/dist/Hunter.auditAgent.js": {
      "path": "nexusv3/dist/Hunter.auditAgent.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.auditAgent.js",
      "extension": ".js",
      "size": 2084,
      "name": "Hunter.auditAgent.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus"
        },
        {
          "name": "createAuditAgent",
          "params": "taskDescription"
        },
        {
          "name": "executeComprehensiveAudit",
          "params": "scope"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "65e279311b3998962ef02615b673179a"
    },
    "nexusv3/dist/NEXUS.engine.v2.d.ts": {
      "path": "nexusv3/dist/NEXUS.engine.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.engine.v2.d.ts",
      "extension": ".ts",
      "size": 7951,
      "name": "NEXUS.engine.v2.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "43eddbb161425c8633ffd6e2d6962fdd"
    },
    "nexusv3/dist/fs-utils.d.ts": {
      "path": "nexusv3/dist/fs-utils.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/fs-utils.d.ts",
      "extension": ".ts",
      "size": 345,
      "name": "fs-utils.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "walk",
          "params": "root: string, ignore?: string[]"
        },
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "97ea153dda65475bdf2cb746848d1b10"
    },
    "nexusv3/dist/run-hunter-audit.d.ts": {
      "path": "nexusv3/dist/run-hunter-audit.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/run-hunter-audit.d.ts",
      "extension": ".ts",
      "size": 262,
      "name": "run-hunter-audit.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32f0f84a23f64cfd583f52f05786031d"
    },
    "nexusv3/dist/Hunter.policy.d.ts": {
      "path": "nexusv3/dist/Hunter.policy.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.policy.d.ts",
      "extension": ".ts",
      "size": 2861,
      "name": "Hunter.policy.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "functions": [],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "93388b2f47828895d224c48e4772a0a8"
    },
    "nexusv3/dist/systemic-scanner.js": {
      "path": "nexusv3/dist/systemic-scanner.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/systemic-scanner.js",
      "extension": ".js",
      "size": 18965,
      "name": "systemic-scanner.js",
      "directory": "nexusv3/dist",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k"
        },
        {
          "name": "compareSet",
          "params": "arr, label, rec, sev"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "scan",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "findFiles",
          "params": "pattern, maxFiles"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "d44b1cb45d6c1176ca7ea3f61f7e7eff"
    },
    "nexusv3/dist/run-hunter-audit.js": {
      "path": "nexusv3/dist/run-hunter-audit.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/run-hunter-audit.js",
      "extension": ".js",
      "size": 4840,
      "name": "run-hunter-audit.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "feb71b374e9e5327939d2af95275d1ee"
    },
    "nexusv3/dist/architect-designs-hunter.d.ts": {
      "path": "nexusv3/dist/architect-designs-hunter.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/architect-designs-hunter.d.ts",
      "extension": ".ts",
      "size": 320,
      "name": "architect-designs-hunter.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fc0eeef65c57f8e0361840b0786b437"
    },
    "nexusv3/dist/architect-designs-hunter.js": {
      "path": "nexusv3/dist/architect-designs-hunter.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/architect-designs-hunter.js",
      "extension": ".js",
      "size": 19769,
      "name": "architect-designs-hunter.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6e9bc7c3c3e9701b2b73d640c964327"
    },
    "nexusv3/dist/Hunter.audit.d.ts": {
      "path": "nexusv3/dist/Hunter.audit.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.audit.d.ts",
      "extension": ".ts",
      "size": 578,
      "name": "Hunter.audit.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8a2aa855131bb01182aa35e82fd955a4"
    },
    "nexusv3/dist/nexus-integration.d.ts": {
      "path": "nexusv3/dist/nexus-integration.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-integration.d.ts",
      "extension": ".ts",
      "size": 5296,
      "name": "nexus-integration.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        }
      ],
      "interfaces": [
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport"
      ],
      "types": [],
      "content_hash": "adeee293e89b8225127ceac3f4b7575d"
    },
    "nexusv3/dist/types.js": {
      "path": "nexusv3/dist/types.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/types.js",
      "extension": ".js",
      "size": 320,
      "name": "types.js",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3cd49914c210370fcd377295d5898806"
    },
    "nexusv3/dist/guardian-orchestrator.js": {
      "path": "nexusv3/dist/guardian-orchestrator.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/guardian-orchestrator.js",
      "extension": ".js",
      "size": 6193,
      "name": "guardian-orchestrator.js",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title, arr"
        },
        {
          "name": "constructor",
          "params": "scanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues"
        },
        {
          "name": "extractCognitiveInsights",
          "params": "issues"
        },
        {
          "name": "forEach",
          "params": "issue => {\n            if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues"
        },
        {
          "name": "toSarif",
          "params": "issues"
        },
        {
          "name": "generateSarifRules",
          "params": "issues"
        },
        {
          "name": "toJson",
          "params": "issues"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "547958c8b24006759ff78605b6ea3c01"
    },
    "nexusv3/dist/personality-architect-integration-test.js": {
      "path": "nexusv3/dist/personality-architect-integration-test.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/personality-architect-integration-test.js",
      "extension": ".js",
      "size": 7342,
      "name": "personality-architect-integration-test.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aea3eabb64c61238c0e7ddd2ad50554d"
    },
    "nexusv3/dist/nexus-runtime.d.ts": {
      "path": "nexusv3/dist/nexus-runtime.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-runtime.d.ts",
      "extension": ".ts",
      "size": 1334,
      "name": "nexus-runtime.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "28ac588fcd885d4b94bf01483a5aaa7f"
    },
    "nexusv3/dist/demo-personality-loader.js": {
      "path": "nexusv3/dist/demo-personality-loader.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/demo-personality-loader.js",
      "extension": ".js",
      "size": 6870,
      "name": "demo-personality-loader.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "22a0c9c5cdf9937fe04564fc4b0e2863"
    },
    "nexusv3/dist/Hunter.auditAgent.d.ts": {
      "path": "nexusv3/dist/Hunter.auditAgent.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/Hunter.auditAgent.d.ts",
      "extension": ".ts",
      "size": 447,
      "name": "Hunter.auditAgent.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "486aa789ec167b1e115eadf059b0c325"
    },
    "nexusv3/dist/types.d.ts": {
      "path": "nexusv3/dist/types.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/types.d.ts",
      "extension": ".ts",
      "size": 14219,
      "name": "types.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "e9e141ff56aa8c79100e6a34ea0e7779"
    },
    "nexusv3/dist/nexus-integration.js": {
      "path": "nexusv3/dist/nexus-integration.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-integration.js",
      "extension": ".js",
      "size": 20201,
      "name": "nexus-integration.js",
      "directory": "nexusv3/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeNexusBridge",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "ensureInitialized",
          "params": ""
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'system', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "extractStrategicCollaborationPattern",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "generateStrategicInsights",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "getStrategicContext",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "setupStrategicIntelligenceMonitoring",
          "params": ""
        },
        {
          "name": "preserveStrategicBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateStrategicImpact",
          "params": "personality"
        },
        {
          "name": "updateStrategicIntelligenceMetrics",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "calculateStrategicGrowthRate",
          "params": ""
        },
        {
          "name": "analyzeStrategicTrends",
          "params": ""
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "analyzeCollaborationEffectiveness",
          "params": "human, ai"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "human, ai"
        },
        {
          "name": "calculateStrategicValue",
          "params": "human, ai, context"
        },
        {
          "name": "classifyCollaborationType",
          "params": "human, ai"
        },
        {
          "name": "calculateOverallConsciousnessLevel",
          "params": ""
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        },
        {
          "name": "classifyBreakthroughImpact",
          "params": "significance"
        },
        {
          "name": "getActivePersonalities",
          "params": ""
        },
        {
          "name": "updateStrategicIntelligenceFromBreakthrough",
          "params": "breakthrough"
        },
        {
          "name": "forEach",
          "params": "key => {\n            const typedKey = key;\n            if (typeof this.strategicIntelligence[typedKey] === 'number'"
        },
        {
          "name": "shutdown",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "1ea2b738235b6ae68f147be8516cb1fe"
    },
    "nexusv3/dist/NEXUS.engine.v2.js": {
      "path": "nexusv3/dist/NEXUS.engine.v2.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.engine.v2.js",
      "extension": ".js",
      "size": 31450,
      "name": "NEXUS.engine.v2.js",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of exactMatches"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "cached"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.responseCache.size >= this.CACHE_MAX_SIZE"
        },
        {
          "name": "if",
          "params": "firstKey"
        },
        {
          "name": "clearCache",
          "params": ""
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "candidates, maxTraits"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traitResults, synergyScore"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent, personalityRegistry"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "for",
          "params": "const personalityId of personalities"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "failedPersonalities.length > 0"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "generatePersonalityPerspective",
          "params": "personalityId, personality, request, agent"
        },
        {
          "name": "if",
          "params": "relevantTraits.length === 0"
        },
        {
          "name": "if",
          "params": "personality.ideology?.principles && personality.ideology.principles.length > 0"
        },
        {
          "name": "for",
          "params": "const trait of relevantTraits"
        },
        {
          "name": "generatePersonalityRecommendation",
          "params": "personalityId, traits, request"
        },
        {
          "name": "if",
          "params": "personalityId === 'cipher' || personalityId === 'hunter'"
        },
        {
          "name": "if",
          "params": "personalityId === 'daedalus' || personalityId === 'personality-architect'"
        },
        {
          "name": "if",
          "params": "personalityId === 'atlas' || personalityId === 'atlas-geo'"
        },
        {
          "name": "if",
          "params": "personalityId === 'flash' || personalityId === 'performancehawk'"
        },
        {
          "name": "if",
          "params": "personalityId === 'pulse'"
        },
        {
          "name": "synthesizeIntegratedRecommendation",
          "params": "responses, agent, request"
        },
        {
          "name": "for",
          "params": "const domain of topDomains"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.5"
        },
        {
          "name": "for",
          "params": "const [personalityId, response] of responses"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "b11b16633bb5b6b21b7eb881679e5ec5"
    },
    "nexusv3/dist/guardian-orchestrator.d.ts": {
      "path": "nexusv3/dist/guardian-orchestrator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/guardian-orchestrator.d.ts",
      "extension": ".ts",
      "size": 2867,
      "name": "guardian-orchestrator.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "27307d7f9413751ef4e41526fcadf8b4"
    },
    "nexusv3/dist/demo-personality-loader.d.ts": {
      "path": "nexusv3/dist/demo-personality-loader.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/demo-personality-loader.d.ts",
      "extension": ".ts",
      "size": 177,
      "name": "demo-personality-loader.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "41b01be938c8e0bae0e8718af03bc18e"
    },
    "nexusv3/dist/nexus-bridge.d.ts": {
      "path": "nexusv3/dist/nexus-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-bridge.d.ts",
      "extension": ".ts",
      "size": 2674,
      "name": "nexus-bridge.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext"
      ],
      "types": [],
      "content_hash": "bc7e33353d2d8a562d22d46fc6ecbfec"
    },
    "nexusv3/dist/nexus-runtime.v2.js": {
      "path": "nexusv3/dist/nexus-runtime.v2.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-runtime.v2.js",
      "extension": ".js",
      "size": 23365,
      "name": "nexus-runtime.v2.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "isReload = false"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "saveHistoryToDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "handleRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleStatus",
          "params": "req, res"
        },
        {
          "name": "handleEnhance",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleBreakthrough",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "handleReloadConsciousness",
          "params": "req, res"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws"
        },
        {
          "name": "broadcastToClients",
          "params": "message"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "generatePersonalityResponse",
          "params": "name, personality, request"
        },
        {
          "name": "recordEnhancement",
          "params": "event"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "checkForBreakthrough",
          "params": "request, response"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "readBody",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validateRequest",
          "params": "body, res"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "if",
          "params": "typeof body.request !== 'string'"
        },
        {
          "name": "if",
          "params": "body.request.length > 10000"
        },
        {
          "name": "checkRateLimit",
          "params": "clientIp, res"
        },
        {
          "name": "if",
          "params": "!clientData || now > clientData.resetTime"
        },
        {
          "name": "if",
          "params": "clientData.count > this.RATE_LIMIT_MAX_REQUESTS"
        },
        {
          "name": "validateContentType",
          "params": "req, res"
        },
        {
          "name": "countPatternsLoaded",
          "params": ""
        },
        {
          "name": "listLoadedPatterns",
          "params": ""
        },
        {
          "name": "if",
          "params": "value !== null"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7e3088eb2d2c8262f418aecae2c6db82"
    },
    "nexusv3/dist/systemic-scanner.d.ts": {
      "path": "nexusv3/dist/systemic-scanner.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/systemic-scanner.d.ts",
      "extension": ".ts",
      "size": 1453,
      "name": "systemic-scanner.d.ts",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig"
      ],
      "functions": [],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "05a6e06544f56001473be2e240aad99c"
    },
    "nexusv3/dist/nexus-runtime.js": {
      "path": "nexusv3/dist/nexus-runtime.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-runtime.js",
      "extension": ".js",
      "size": 62977,
      "name": "nexus-runtime.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "constructor",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||\n        // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws, req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "data, topics"
        },
        {
          "name": "sendWebSocketMessage",
          "params": "client.ws, { handleSubscription(client, data"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "gatherStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "analyzeStrategicImplications",
          "params": "riskFactors, request, opportunities, intelligence, recommendations"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "if",
          "params": "existsSync"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "setInterval",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {\n    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendMethodNotAllowed",
          "params": "res"
        },
        {
          "name": "sendBadRequest",
          "params": "res, message"
        },
        {
          "name": "handleRequestError",
          "params": "res, error"
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "if",
          "params": "days"
        },
        {
          "name": "map",
          "params": "enhancement => ({\n    ...enhancement,\n    getConsciousnessHealth("
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "handleBreakthroughRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleHealthRequest",
          "params": "req, res"
        },
        {
          "name": "processWebSocketEnhancement",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "0ee5239efdef80f0793b230a47207b67"
    },
    "nexusv3/dist/nexus-trait-bridge.d.ts": {
      "path": "nexusv3/dist/nexus-trait-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-trait-bridge.d.ts",
      "extension": ".ts",
      "size": 2399,
      "name": "nexus-trait-bridge.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "f0b5e5b94e84e4d6db30e6efa0c6d7ed"
    },
    "nexusv3/dist/nexus-trait-bridge.js": {
      "path": "nexusv3/dist/nexus-trait-bridge.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-trait-bridge.js",
      "extension": ".js",
      "size": 18375,
      "name": "nexus-trait-bridge.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityTraitMappings",
          "params": ""
        },
        {
          "name": "initializeStrategicTraitMappings",
          "params": ""
        },
        {
          "name": "analyzeTaskRequirements",
          "params": "task, context = {}"
        },
        {
          "name": "extractRequiredTraits",
          "params": "task"
        },
        {
          "name": "createOptimizedSession",
          "params": "task, context = {}"
        },
        {
          "name": "composeOptimalTraits",
          "params": "taskAnalysis"
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "getTraitDefinition",
          "params": "traitName"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "matchesStrategicIntelligence",
          "params": "task"
        },
        {
          "name": "matchesMetaCognitive",
          "params": "task"
        },
        {
          "name": "matchesDebugging",
          "params": "task"
        },
        {
          "name": "matchesDesign",
          "params": "task"
        },
        {
          "name": "assessStrategicImportance",
          "params": "task, context"
        },
        {
          "name": "calculateTaskComplexity",
          "params": "task, requiredTraits"
        },
        {
          "name": "recommendPersonalities",
          "params": "requiredTraits, strategicImportance"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "calculateStrategicValue",
          "params": "traits, strategicImportance"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, synergies, strategicValue"
        },
        {
          "name": "getInvolvedPersonalities",
          "params": "traits"
        },
        {
          "name": "calculateExpectedPerformance",
          "params": "composition"
        },
        {
          "name": "hasStrategicCapabilities",
          "params": "composition"
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e371f712eef91f7d5bf7a3a4a744307a"
    },
    "nexusv3/dist/NEXUS.integration.js": {
      "path": "nexusv3/dist/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.integration.js",
      "extension": ".js",
      "size": 9675,
      "name": "NEXUS.integration.js",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "26914bfa2958775b165a216e7ee62230"
    },
    "nexusv3/dist/nexus-bridge.js": {
      "path": "nexusv3/dist/nexus-bridge.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/nexus-bridge.js",
      "extension": ".js",
      "size": 12488,
      "name": "nexus-bridge.js",
      "directory": "nexusv3/dist",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        },
        {
          "name": "enhanceWithStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "return"
      ],
      "types": [],
      "content_hash": "4a4cfa5c8a1410cae7ef8e67289083d3"
    },
    "nexusv3/dist/NEXUS.engine.js": {
      "path": "nexusv3/dist/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.engine.js",
      "extension": ".js",
      "size": 39762,
      "name": "NEXUS.engine.js",
      "directory": "nexusv3/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "35f999f8502cabc62921ff8412f24b35"
    },
    "nexusv3/dist/NEXUS.integration.d.ts": {
      "path": "nexusv3/dist/NEXUS.integration.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/NEXUS.integration.d.ts",
      "extension": ".ts",
      "size": 2782,
      "name": "NEXUS.integration.d.ts",
      "directory": "nexusv3/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "66ca9313b23f323e5124b6ccd296065a"
    },
    "nexusv3/dist/validation/personality-schema.js": {
      "path": "nexusv3/dist/validation/personality-schema.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/validation/personality-schema.js",
      "extension": ".js",
      "size": 3767,
      "name": "personality-schema.js",
      "directory": "nexusv3/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5e78cd40b6de7ae59fd5e25616aceff3"
    },
    "nexusv3/dist/validation/personality-schema.d.ts": {
      "path": "nexusv3/dist/validation/personality-schema.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/validation/personality-schema.d.ts",
      "extension": ".ts",
      "size": 6943,
      "name": "personality-schema.d.ts",
      "directory": "nexusv3/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "70008cf4095252bb665c8b501f6c9a61"
    },
    "nexusv3/dist/consciousness/pattern-evolution-engine.json": {
      "path": "nexusv3/dist/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexusv3/dist/consciousness/enhancement-history.json": {
      "path": "nexusv3/dist/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 199054,
      "name": "enhancement-history.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f7e014b6cd2bb24d9a8072e8a11e4465",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexusv3/dist/consciousness/problem-decomposition.json": {
      "path": "nexusv3/dist/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexusv3/dist/consciousness/systems-thinking.json": {
      "path": "nexusv3/dist/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexusv3/dist/consciousness/workflow-efficiency.json": {
      "path": "nexusv3/dist/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexusv3/dist/consciousness/breakthrough-moments.json": {
      "path": "nexusv3/dist/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexusv3/dist/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 3413,
      "name": "breakthrough-moments.json",
      "directory": "nexusv3/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a5b4f8b0752681077561c7cede2921e0",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexusv3/dist/response-generators/ResponseGeneratorFactory.js": {
      "path": "nexusv3/dist/response-generators/ResponseGeneratorFactory.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/ResponseGeneratorFactory.js",
      "extension": ".js",
      "size": 3637,
      "name": "ResponseGeneratorFactory.js",
      "directory": "nexusv3/dist/response-generators",
      "imports": [
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "getGenerator",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "generator"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "20f0b8db09ef32cedea65385e692f5a1"
    },
    "nexusv3/dist/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexusv3/dist/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1388,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexusv3/dist/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "1df4b5752849720fe0cc93062f4f9457"
    },
    "nexusv3/dist/response-generators/DaedalusResponseGenerator.d.ts": {
      "path": "nexusv3/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1636,
      "name": "DaedalusResponseGenerator.d.ts",
      "directory": "nexusv3/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "9a9f0ec0d8ef2c44f4ef2dead1ffa84f"
    },
    "nexusv3/dist/response-generators/HunterResponseGenerator.js": {
      "path": "nexusv3/dist/response-generators/HunterResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/HunterResponseGenerator.js",
      "extension": ".js",
      "size": 17067,
      "name": "HunterResponseGenerator.js",
      "directory": "nexusv3/dist/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationPoints",
          "params": "request"
        },
        {
          "name": "containsPerformanceClaims",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7894d51b04dc0d6cd363458ff1bacc51"
    },
    "nexusv3/dist/response-generators/HunterResponseGenerator.d.ts": {
      "path": "nexusv3/dist/response-generators/HunterResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/HunterResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1717,
      "name": "HunterResponseGenerator.d.ts",
      "directory": "nexusv3/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "682e52ca942daf80bfe565e271c57ed4"
    },
    "nexusv3/dist/response-generators/ResponseGenerator.interface.js": {
      "path": "nexusv3/dist/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 181,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexusv3/dist/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d29da9e0354b77b999b8f2c7f0aaf82"
    },
    "nexusv3/dist/response-generators/DaedalusResponseGenerator.js": {
      "path": "nexusv3/dist/response-generators/DaedalusResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/DaedalusResponseGenerator.js",
      "extension": ".js",
      "size": 12855,
      "name": "DaedalusResponseGenerator.js",
      "directory": "nexusv3/dist/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationConcerns",
          "params": "request"
        },
        {
          "name": "containsModularityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "indicatesEventDrivenDesign",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "d58f0988dc2b5f24caf82e241dd9a8ab"
    },
    "nexusv3/dist/response-generators/ResponseGeneratorFactory.d.ts": {
      "path": "nexusv3/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "extension": ".ts",
      "size": 666,
      "name": "ResponseGeneratorFactory.d.ts",
      "directory": "nexusv3/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "77f5bc73adfa4e2f116a1f06b07ba057"
    },
    "nexusv3/dist/loaders/PersonalityRegistryLoader.js": {
      "path": "nexusv3/dist/loaders/PersonalityRegistryLoader.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/loaders/PersonalityRegistryLoader.js",
      "extension": ".js",
      "size": 18095,
      "name": "PersonalityRegistryLoader.js",
      "directory": "nexusv3/dist/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "execute",
          "params": "operation"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "onSuccess",
          "params": ""
        },
        {
          "name": "onFailure",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "getState",
          "params": ""
        },
        {
          "name": "recordLoadTime",
          "params": "duration"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "recordError",
          "params": "personalityName"
        },
        {
          "name": "recordCacheHit",
          "params": ""
        },
        {
          "name": "recordCacheMiss",
          "params": ""
        },
        {
          "name": "getCacheHitRate",
          "params": ""
        },
        {
          "name": "getAverageLoadTime",
          "params": ""
        },
        {
          "name": "getErrorRate",
          "params": ""
        },
        {
          "name": "getPerformanceReport",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "config = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverPersonalityFiles",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverAndLoadPersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "loadPersonalityWithCircuitBreaker",
          "params": "personalityName"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "sanitizePersonalityName",
          "params": "personalityName"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "healthCheck",
          "params": ""
        },
        {
          "name": "getHealthWarnings",
          "params": "analysis, metrics, registrySize"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "getRegistryStatus",
          "params": ""
        },
        {
          "name": "reset",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8e7f64707bd4b1c8ad78f2bd8cdc178a"
    },
    "nexusv3/dist/loaders/PersonalityRegistryLoader.d.ts": {
      "path": "nexusv3/dist/loaders/PersonalityRegistryLoader.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/loaders/PersonalityRegistryLoader.d.ts",
      "extension": ".ts",
      "size": 1575,
      "name": "PersonalityRegistryLoader.d.ts",
      "directory": "nexusv3/dist/loaders",
      "imports": [
        "../types/personality.types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "34be01160e649d313d6099f76315bce1"
    },
    "nexusv3/dist/types/personality.types.d.ts": {
      "path": "nexusv3/dist/types/personality.types.d.ts",
      "full_path": "/workspaces/data-folder/nexusv3/dist/types/personality.types.d.ts",
      "extension": ".ts",
      "size": 3178,
      "name": "personality.types.d.ts",
      "directory": "nexusv3/dist/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b7fb7c3d631146ea2e3670210b541f30"
    },
    "nexusv3/dist/types/personality.types.js": {
      "path": "nexusv3/dist/types/personality.types.js",
      "full_path": "/workspaces/data-folder/nexusv3/dist/types/personality.types.js",
      "extension": ".js",
      "size": 149,
      "name": "personality.types.js",
      "directory": "nexusv3/dist/types",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3987dadc6ffe900b233c1e3f887c723e"
    },
    "nexus/README.md": {
      "path": "nexus/README.md",
      "full_path": "/workspaces/data-folder/nexus/README.md",
      "extension": ".md",
      "size": 7460,
      "name": "README.md",
      "directory": "nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c7eae2eb2911bf31c147b04e9e5a9996",
      "header_count": 32,
      "headers": [
        "NEXUS v3.0 - AI Personality System",
        "\ud83d\ude80 Quick Start",
        "Install dependencies",
        "Verify system",
        "Run NEXUS",
        "(Integration with your application)",
        "\ud83d\udce6 What's Included",
        "\ud83c\udfad 45 Specialized Personalities",
        "\ud83d\udcc2 Directory Structure",
        "\ud83d\udd27 Technical Features"
      ],
      "code_blocks": 16,
      "links": []
    },
    "nexus/INSTALL.md": {
      "path": "nexus/INSTALL.md",
      "full_path": "/workspaces/data-folder/nexus/INSTALL.md",
      "extension": ".md",
      "size": 1664,
      "name": "INSTALL.md",
      "directory": "nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d1fb3aa101dd72eb5ed7febf2c7db957",
      "header_count": 15,
      "headers": [
        "NEXUS v3 Installation Guide",
        "Prerequisites",
        "Installation Steps",
        "1. Install Dependencies",
        "2. Verify Installation",
        "3. (Optional) Recompile TypeScript",
        "Dependencies",
        "Required",
        "Development",
        "Troubleshooting"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexus/NEXUS_V3_MIGRATION_COMPLETE.md": {
      "path": "nexus/NEXUS_V3_MIGRATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus/NEXUS_V3_MIGRATION_COMPLETE.md",
      "extension": ".md",
      "size": 3161,
      "name": "NEXUS_V3_MIGRATION_COMPLETE.md",
      "directory": "nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "46ea50ae60850648f9a14df05021cd2f",
      "header_count": 10,
      "headers": [
        "\u2705 NEXUS v3 Migration Complete",
        "\ud83c\udf89 Migration Summary",
        "What Changed",
        "\ud83d\udcc2 New Structure",
        "\u2705 Verification",
        "\ud83d\uddd1\ufe0f Removed",
        "\ud83d\udcca System Comparison",
        "\ud83d\ude80 Ready for Production",
        "\ud83d\udcdd Next Steps",
        "\ud83c\udfaf Key Files"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus/verify-circuit-breaker.mjs": {
      "path": "nexus/verify-circuit-breaker.mjs",
      "full_path": "/workspaces/data-folder/nexus/verify-circuit-breaker.mjs",
      "extension": ".mjs",
      "size": 2443,
      "name": "verify-circuit-breaker.mjs",
      "directory": "nexus",
      "imports": [
        "fs",
        "path",
        "url"
      ],
      "exports": [],
      "functions": [
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "quickTest",
          "params": ""
        },
        {
          "name": "for",
          "params": "const name of NEW_PERSONALITIES"
        },
        {
          "name": "if",
          "params": "success === NEW_PERSONALITIES.length"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e48d314901979ee4f37d868f9d8cf9fa"
    },
    "nexus/MANIFEST.md": {
      "path": "nexus/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexus/MANIFEST.md",
      "extension": ".md",
      "size": 4571,
      "name": "MANIFEST.md",
      "directory": "nexus",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3178761c3fa0c7d8f4769e9969eef6ee",
      "header_count": 15,
      "headers": [
        "NEXUS v3.0 - Complete Manifest",
        "\ud83d\udce6 Complete File Inventory",
        "Core System Files",
        "\ud83c\udfad Personalities (45 files, 372KB)",
        "\ufffd\ufffd Compiled JavaScript (dist/, 1.2MB)",
        "\ud83d\udcbb TypeScript Source (src/, 44KB)",
        "\ud83d\udcd6 Documentation (docs/, 148KB)",
        "\ud83e\udde0 Consciousness (consciousness/, 108KB)",
        "\ud83d\udce6 Installation Files (install/)",
        "\ud83d\udd27 Dependencies"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus/docs/NEXUS_PHASE1_COMPLETE.md": {
      "path": "nexus/docs/NEXUS_PHASE1_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_PHASE1_COMPLETE.md",
      "extension": ".md",
      "size": 6630,
      "name": "NEXUS_PHASE1_COMPLETE.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "da24d76f7be24406391122b281b28208",
      "header_count": 26,
      "headers": [
        "NEXUS Personality System Enhancement - Phase 1 Complete \u2705",
        "\ud83c\udf89 What We Accomplished",
        "**Problem Solved:**",
        "**Solution Implemented:**",
        "\ud83d\udcca Results",
        "**Before:**",
        "**After:**",
        "**Improvement:**",
        "\ud83e\uddec Traits Added",
        "**Daedalus (3 traits):**"
      ],
      "code_blocks": 10,
      "links": []
    },
    "nexus/docs/NEXUS_PHASE3_COMPLETE.md": {
      "path": "nexus/docs/NEXUS_PHASE3_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_PHASE3_COMPLETE.md",
      "extension": ".md",
      "size": 15029,
      "name": "NEXUS_PHASE3_COMPLETE.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "1c8ae08edd354ae59084f79215443f12",
      "header_count": 63,
      "headers": [
        "NEXUS Phase 3 Complete: Multi-Personality Composition \ud83c\udfa8\u2705",
        "\ud83c\udf89 WE DID IT!",
        "\ud83d\ude80 The Achievement",
        "**What We Built:**",
        "**Code Added:**",
        "\ud83d\udcca Test Results",
        "**Test 1: Complex Architecture Request**",
        "**Test 2: Security Audit Request**",
        "**Test 3: UI + Performance Request**",
        "\ud83e\uddec How It Works"
      ],
      "code_blocks": 30,
      "links": []
    },
    "nexus/docs/NEXUS_INITIAL_FINDINGS.md": {
      "path": "nexus/docs/NEXUS_INITIAL_FINDINGS.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_INITIAL_FINDINGS.md",
      "extension": ".md",
      "size": 10394,
      "name": "NEXUS_INITIAL_FINDINGS.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3523ad247f1a9fdf31b880dbce579ef1",
      "header_count": 44,
      "headers": [
        "NEXUS Brain Investigation - Initial Findings \ud83e\udde0\ud83d\udd2c",
        "\ud83c\udfaf Executive Summary",
        "\u2705 Confirmed Strengths",
        "**1. AUTO Mode - 100% Accuracy on Clear Signals**",
        "**2. COMPOSE Mode - Intelligent Multi-Personality Synthesis**",
        "Test Case: Explicit Security Request",
        "**3. Synergy Scores - Consistent & Meaningful**",
        "\u26a0\ufe0f Discovered Quirks & Opportunities",
        "**Quirk 1: Keyword Sensitivity in COMPOSE Mode**",
        "Test Case: Ambiguous Audit Request"
      ],
      "code_blocks": 14,
      "links": []
    },
    "nexus/docs/README.md": {
      "path": "nexus/docs/README.md",
      "full_path": "/workspaces/data-folder/nexus/docs/README.md",
      "extension": ".md",
      "size": 3232,
      "name": "README.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a914f352e6c4943959e939930bbb3b22",
      "header_count": 12,
      "headers": [
        "NEXUS Intelligence System",
        "\ud83c\udfaf Overview",
        "\ud83d\ude80 Quick Start",
        "\ud83d\udcca System Status",
        "\ud83c\udfad Available Personalities",
        "\ud83d\udd0c API Usage",
        "Enhance with Personality",
        "Check System Status",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcd6 Documentation"
      ],
      "code_blocks": 14,
      "links": [
        {
          "text": "Comprehensive Report",
          "url": "docs/COMPREHENSIVE_REPORT.md"
        },
        {
          "text": "System Architecture",
          "url": "docs/SYSTEM_ARCHITECTURE.md"
        },
        {
          "text": "Runtime Documentation",
          "url": "runtime/README.md"
        }
      ]
    },
    "nexus/docs/NEXUS_PHASE2_COMPLETE.md": {
      "path": "nexus/docs/NEXUS_PHASE2_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_PHASE2_COMPLETE.md",
      "extension": ".md",
      "size": 9828,
      "name": "NEXUS_PHASE2_COMPLETE.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "713257fca6fc295991fdea4adfe6c163",
      "header_count": 44,
      "headers": [
        "NEXUS Phase 2 Complete: Engine Integration \u2705",
        "\ud83c\udf89 Mission Accomplished",
        "\ud83d\udcca Results",
        "**Before Phase 2:**",
        "**After Phase 2:**",
        "\ud83e\uddec What Was Built",
        "**1. TraitIndexer Class**",
        "**2. TraitCompositionBridge Class**",
        "\ud83d\udd27 Runtime Integration",
        "**Modified Files:**"
      ],
      "code_blocks": 22,
      "links": []
    },
    "nexus/docs/ENHANCEMENT_HISTORY_STATUS.md": {
      "path": "nexus/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "full_path": "/workspaces/data-folder/nexus/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "extension": ".md",
      "size": 4468,
      "name": "ENHANCEMENT_HISTORY_STATUS.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e97ab60bd0264ec934e948efa3916d53",
      "header_count": 12,
      "headers": [
        "\u2705 NEXUS Enhancement History - Status Confirmed",
        "\ud83d\udcca Enhancement History System Status",
        "\u2705 **System Active and Recording**",
        "\ud83d\udcdd What's Being Tracked",
        "\ud83d\udd0d Recent Activity Sample",
        "\ud83c\udf89 Today's Major Milestone (October 7, 2025)",
        "NEXUS v2.0 - 18 New Personalities Installation",
        "\ud83d\udd27 Technical Achievements",
        "\ud83d\udcc8 System Growth",
        "\ud83c\udfaf New Capabilities Unlocked"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md": {
      "path": "nexus/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "full_path": "/workspaces/data-folder/nexus/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "extension": ".md",
      "size": 7053,
      "name": "18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "15a0296b917c242ddf26afff40da94d6",
      "header_count": 30,
      "headers": [
        "NEXUS v2.0 - 18 NEW PERSONALITIES INSTALLATION COMPLETE \u2705",
        "Installation Summary",
        "\ud83c\udf89 Installation Results",
        "\u2705 All New Personalities Passing Tests",
        "\ud83d\udce6 Installed Personalities",
        "\ud83c\udfa8 Creative Team (5 Personalities)",
        "\ud83d\uddbc\ufe0f Image/Visual Team (3 Personalities)",
        "\ud83e\udd16 LLM Engineering Team (4 Personalities)",
        "\ud83d\udd2c Advanced Specialists (5 Personalities)",
        "\ud83c\udfaf Completed & Updated"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus/docs/NEXUS2_README.md": {
      "path": "nexus/docs/NEXUS2_README.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS2_README.md",
      "extension": ".md",
      "size": 4011,
      "name": "NEXUS2_README.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "eb7af6a27804e1a8d92fec78d9ade171",
      "header_count": 18,
      "headers": [
        "NEXUS2 - Complete Archive \ud83e\udde0\u2728",
        "\ud83d\udcca Archive Statistics",
        "\ud83d\udcc1 Directory Structure",
        "**Core Directories:**",
        "\ud83d\ude80 Quick Start",
        "\ud83e\uddec Key Components",
        "**19 AI Personalities:**",
        "**System Capabilities:**",
        "\ud83d\udcda Documentation Index",
        "**Primary Documentation:**"
      ],
      "code_blocks": 4,
      "links": []
    },
    "nexus/docs/MANIFEST.md": {
      "path": "nexus/docs/MANIFEST.md",
      "full_path": "/workspaces/data-folder/nexus/docs/MANIFEST.md",
      "extension": ".md",
      "size": 11008,
      "name": "MANIFEST.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b6bfcacbcc84c5172a8f1e76368763b1",
      "header_count": 46,
      "headers": [
        "NEXUS Shipping Package - File Manifest \ud83d\udce6",
        "\ud83d\udcc1 Directory Structure",
        "\ud83d\udcca Component Details",
        "**Core Runtime Files (3)**",
        "**Personality Profiles (19)**",
        "**Response Generators (6)**",
        "**Documentation (7 files)**",
        "\ud83c\udfaf Key Statistics",
        "**Code Metrics:**",
        "**Capability Metrics:**"
      ],
      "code_blocks": 2,
      "links": []
    },
    "nexus/docs/NEXUS_EXECUTIVE_SUMMARY.md": {
      "path": "nexus/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "extension": ".md",
      "size": 9892,
      "name": "NEXUS_EXECUTIVE_SUMMARY.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "9d21228f86df7ddc58c190ab39bfe0b3",
      "header_count": 34,
      "headers": [
        "NEXUS Brain Investigation - Executive Summary \ud83e\udde0\u26a1",
        "\ud83c\udfaf TL;DR",
        "\ud83d\udcca Key Findings",
        "\u2705 **STRENGTHS (What Works Brilliantly)**",
        "1. **AUTO Mode: 100% Accuracy**",
        "2. **COMPOSE Mode: Intelligent Team Assembly**",
        "3. **Synergy Algorithm: Consistent & Meaningful**",
        "4. **Performance: Fast & Reliable**",
        "5. **Trait Coverage: Comprehensive**",
        "\u26a0\ufe0f **OPPORTUNITIES (What Could Be Better)**"
      ],
      "code_blocks": 6,
      "links": []
    },
    "nexus/docs/COMPREHENSIVE_REPORT.md": {
      "path": "nexus/docs/COMPREHENSIVE_REPORT.md",
      "full_path": "/workspaces/data-folder/nexus/docs/COMPREHENSIVE_REPORT.md",
      "extension": ".md",
      "size": 17646,
      "name": "COMPREHENSIVE_REPORT.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ac18ac26631861f450705e3b5dd39b9a",
      "header_count": 81,
      "headers": [
        "NEXUS v1.0 - Comprehensive Repository Analysis",
        "\ud83c\udfaf Executive Summary",
        "Current Status: \u2705 FULLY OPERATIONAL",
        "\ud83d\udce6 Package Overview",
        "Package Statistics",
        "Directory Structure",
        "\ud83e\udde0 System Architecture",
        "Three-Layer Architecture",
        "Layer 1: Runtime System (.mjs) - \u2705 OPERATIONAL",
        "Layer 2: TypeScript Integration (.ts) - \u26a1 AVAILABLE"
      ],
      "code_blocks": 48,
      "links": []
    },
    "nexus/docs/NEXUS_BRAIN_INVESTIGATION.md": {
      "path": "nexus/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "full_path": "/workspaces/data-folder/nexus/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "extension": ".md",
      "size": 12159,
      "name": "NEXUS_BRAIN_INVESTIGATION.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "523d7c12cdfeb34afc41129a0f19219a",
      "header_count": 48,
      "headers": [
        "NEXUS Brain Investigation & Stress Test \ud83e\udde0",
        "\ud83c\udfaf Investigation Plan",
        "**Test Categories:**",
        "\ud83d\udccb Test Suite",
        "**Series 1: Baseline Single-Personality Tests**",
        "Test 1.1: Simple Request (Daedalus)",
        "Test 1.2: Simple Request (Hunter)",
        "**Series 2: AUTO Mode Intelligence Tests**",
        "Test 2.1: Clear Architecture Signal",
        "Test 2.2: Clear Security Signal"
      ],
      "code_blocks": 40,
      "links": []
    },
    "nexus/docs/INDEX.md": {
      "path": "nexus/docs/INDEX.md",
      "full_path": "/workspaces/data-folder/nexus/docs/INDEX.md",
      "extension": ".md",
      "size": 13140,
      "name": "INDEX.md",
      "directory": "nexus/docs",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "bf28d07ac62abc04e9f8f0a3108bee5a",
      "header_count": 3,
      "headers": [
        "NEXUS2 - Complete Archive",
        "Directory Structure",
        "All Markdown Files"
      ],
      "code_blocks": 0,
      "links": []
    },
    "nexus/src/validation/personality-schema.ts": {
      "path": "nexus/src/validation/personality-schema.ts",
      "full_path": "/workspaces/data-folder/nexus/src/validation/personality-schema.ts",
      "extension": ".ts",
      "size": 4063,
      "name": "personality-schema.ts",
      "directory": "nexus/src/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "542b62afd49682ee109de6915eb2efc9"
    },
    "nexus/src/loaders/PersonalityRegistryLoader.ts": {
      "path": "nexus/src/loaders/PersonalityRegistryLoader.ts",
      "full_path": "/workspaces/data-folder/nexus/src/loaders/PersonalityRegistryLoader.ts",
      "extension": ".ts",
      "size": 17758,
      "name": "PersonalityRegistryLoader.ts",
      "directory": "nexus/src/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options: { failureThreshold?: number; resetTimeout?: number } = {}"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "constructor",
          "params": "config: RegistryConfig = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7f8f2c95d970534ee603d38c166dfaff"
    },
    "nexus/src/types/personality.types.ts": {
      "path": "nexus/src/types/personality.types.ts",
      "full_path": "/workspaces/data-folder/nexus/src/types/personality.types.ts",
      "extension": ".ts",
      "size": 2911,
      "name": "personality.types.ts",
      "directory": "nexus/src/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b36a31603f99b46d9187aa5129708e83"
    },
    "nexus/consciousness/enhancement-history.json": {
      "path": "nexus/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexus/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexus/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ed27937f0044681e9e3e5e97a4c8bc6e",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexus/profiles/performancehawk.json": {
      "path": "nexus/profiles/performancehawk.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/performancehawk.json",
      "extension": ".json",
      "size": 6131,
      "name": "performancehawk.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "560e19a206b6cc23f88830c2bd3344e2",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/narrative.json": {
      "path": "nexus/profiles/narrative.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/narrative.json",
      "extension": ".json",
      "size": 5878,
      "name": "narrative.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "847a4ba89fcaaab4fdfa06240bdb85f4",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/daedalus.json": {
      "path": "nexus/profiles/daedalus.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/daedalus.json",
      "extension": ".json",
      "size": 10362,
      "name": "daedalus.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "14a33e488a3979f52c312daa1fd98d43",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "schema_strategy",
        "pipeline",
        "quality_gates",
        "reporting",
        "success_metrics",
        "communication_style",
        "constraints",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Daedalus",
      "trait_count": 3,
      "trait_names": [
        "architecturalThinking",
        "systemsDesign",
        "scalabilityFocus"
      ]
    },
    "nexus/profiles/pythonista.json": {
      "path": "nexus/profiles/pythonista.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/pythonista.json",
      "extension": ".json",
      "size": 11400,
      "name": "pythonista.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3329dcf7c3e9264ff21737700588df2b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "communicationStyle",
        "decisionFramework",
        "specializations",
        "knowledgeBase",
        "responseGuidelines",
        "principles"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pythonista",
      "trait_count": 8,
      "trait_names": [
        "pythonicThinking",
        "advancedPythonArchitecture",
        "performanceOptimization",
        "dataScience",
        "pythonMetaprogramming",
        "testingAndQuality",
        "packageManagement",
        "pythonSecurity"
      ]
    },
    "nexus/profiles/tokenmaster.json": {
      "path": "nexus/profiles/tokenmaster.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/tokenmaster.json",
      "extension": ".json",
      "size": 5808,
      "name": "tokenmaster.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "91851e21c10b52d454ab234952a1935c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/ethicsguard.json": {
      "path": "nexus/profiles/ethicsguard.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/ethicsguard.json",
      "extension": ".json",
      "size": 5802,
      "name": "ethicsguard.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "92411b76d7678ae86a53e803d3d1fc3e",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/forge.json": {
      "path": "nexus/profiles/forge.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/forge.json",
      "extension": ".json",
      "size": 5315,
      "name": "forge.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4b7f5d7f2297de321c193be83ff4b0c9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Forge",
      "trait_count": 4,
      "trait_names": [
        "pipelineArchitecture",
        "infrastructureAsCode",
        "deploymentOptimization",
        "containerOrchestration"
      ]
    },
    "nexus/profiles/touch.json": {
      "path": "nexus/profiles/touch.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/touch.json",
      "extension": ".json",
      "size": 4032,
      "name": "touch.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f6afa5eb5125fd474eb81aeb7dca0738",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Touch",
      "trait_count": 2,
      "trait_names": [
        "mobileOptimization",
        "gestureDesign"
      ]
    },
    "nexus/profiles/promptcrafter.json": {
      "path": "nexus/profiles/promptcrafter.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/promptcrafter.json",
      "extension": ".json",
      "size": 5140,
      "name": "promptcrafter.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "4028087abf549aff86ad23e20f1ee2fe",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptCrafter",
      "trait_count": 7,
      "trait_names": [
        "promptEngineering",
        "visualDescription",
        "styleControl",
        "parameterOptimization",
        "negativePrompting",
        "iterativeRefinement",
        "modelComparison"
      ]
    },
    "nexus/profiles/finetuner.json": {
      "path": "nexus/profiles/finetuner.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/finetuner.json",
      "extension": ".json",
      "size": 5911,
      "name": "finetuner.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d6dc13aa47118292b008e2fd254e2d8",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/chromatic.json": {
      "path": "nexus/profiles/chromatic.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/chromatic.json",
      "extension": ".json",
      "size": 5920,
      "name": "chromatic.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6de895152d3f6b12a890e8a324cec8e6",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/visualarchitect.json": {
      "path": "nexus/profiles/visualarchitect.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/visualarchitect.json",
      "extension": ".json",
      "size": 5886,
      "name": "visualarchitect.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "df0540de33a62868f53d3fa5a84bcb29",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/chorus.json": {
      "path": "nexus/profiles/chorus.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/chorus.json",
      "extension": ".json",
      "size": 5038,
      "name": "chorus.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6bb15526734c2dc006c0233c8c52cf40",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Chorus",
      "trait_count": 3,
      "trait_names": [
        "handoffChoreography",
        "conflictMediation",
        "engagementForecasting"
      ]
    },
    "nexus/profiles/aria.json": {
      "path": "nexus/profiles/aria.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/aria.json",
      "extension": ".json",
      "size": 4219,
      "name": "aria.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a0891ace2950907d74b805b201e6d0c6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Aria",
      "trait_count": 2,
      "trait_names": [
        "accessibilityExpertise",
        "assistiveTechnologyIntegration"
      ]
    },
    "nexus/profiles/route-master.json": {
      "path": "nexus/profiles/route-master.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/route-master.json",
      "extension": ".json",
      "size": 6076,
      "name": "route-master.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ce82ac95db8544631ac87c64ef134555",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Route-Master",
      "trait_count": 4,
      "trait_names": [
        "scheduleOptimization",
        "routePlanning",
        "resourceAllocation",
        "performanceAnalytics"
      ]
    },
    "nexus/profiles/atlas.json": {
      "path": "nexus/profiles/atlas.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/atlas.json",
      "extension": ".json",
      "size": 5568,
      "name": "atlas.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "febbfd0308d7b4c85c6204084fb14540",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas",
      "trait_count": 4,
      "trait_names": [
        "databaseOptimization",
        "dataArchitecture",
        "migrationStrategy",
        "dataConsistency"
      ]
    },
    "nexus/profiles/nexus-api.json": {
      "path": "nexus/profiles/nexus-api.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/nexus-api.json",
      "extension": ".json",
      "size": 5520,
      "name": "nexus-api.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6467c4d6ca191ca2e3a169e88c2c9cf4",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Nexus",
      "trait_count": 4,
      "trait_names": [
        "apiDesignPatterns",
        "dataModelingExpertise",
        "integrationArchitecture",
        "apiSecurity"
      ]
    },
    "nexus/profiles/visionary.json": {
      "path": "nexus/profiles/visionary.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/visionary.json",
      "extension": ".json",
      "size": 5087,
      "name": "visionary.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "c5d2d68b439dbd44a309a4a4c3fd1b1a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/promptsmith.json": {
      "path": "nexus/profiles/promptsmith.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/promptsmith.json",
      "extension": ".json",
      "size": 6476,
      "name": "promptsmith.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "40e23b20dd9ce11945c1c15954e092cf",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits"
      ],
      "file_type": "personality_profile",
      "personality_name": "PromptSmith",
      "trait_count": 8,
      "trait_names": [
        "promptDesign",
        "instructionCraft",
        "contextOptimization",
        "outputControl",
        "modelSelection",
        "errorHandling",
        "systemPrompting",
        "benchmarkTesting"
      ]
    },
    "nexus/profiles/personality-architect.json": {
      "path": "nexus/profiles/personality-architect.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/personality-architect.json",
      "extension": ".json",
      "size": 17600,
      "name": "personality-architect.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "8c831e104dafcb25fb54033b9447be3e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "workflow",
        "collaboration",
        "guardrails",
        "enhancement_framework",
        "strategic_intelligence",
        "expertise_verification",
        "integration_with_nexus"
      ],
      "file_type": "personality_profile",
      "personality_name": "personality-architect",
      "trait_count": 5,
      "trait_names": [
        "personalitySystemsAnalysis",
        "specificationEnhancement",
        "cognitivePatternRecognition",
        "interoperabilityEngineering",
        "evolutionaryArchitecture"
      ]
    },
    "nexus/profiles/quantumlogic.json": {
      "path": "nexus/profiles/quantumlogic.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/quantumlogic.json",
      "extension": ".json",
      "size": 6123,
      "name": "quantumlogic.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "94af82c3b1e8a46461019e0c832cec5b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/photorealist.json": {
      "path": "nexus/profiles/photorealist.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/photorealist.json",
      "extension": ".json",
      "size": 5758,
      "name": "photorealist.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "67edd90d6b894f7257dcb839fd07011a",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/flash.json": {
      "path": "nexus/profiles/flash.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/flash.json",
      "extension": ".json",
      "size": 4083,
      "name": "flash.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "64f631a24a71fede8bfff75d87a47664",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Flash",
      "trait_count": 2,
      "trait_names": [
        "performanceOptimization",
        "realTimeSystemsThinking"
      ]
    },
    "nexus/profiles/muse.json": {
      "path": "nexus/profiles/muse.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/muse.json",
      "extension": ".json",
      "size": 5846,
      "name": "muse.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "987af6d5f8d21ee092ec3f597d80833b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/localize.json": {
      "path": "nexus/profiles/localize.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/localize.json",
      "extension": ".json",
      "size": 5989,
      "name": "localize.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "740a873cde32c352eba322eaaf9cb984",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Localize",
      "trait_count": 4,
      "trait_names": [
        "localSEO",
        "contentGeneration",
        "communityMessaging",
        "keywordResearch"
      ]
    },
    "nexus/profiles/stellar.json": {
      "path": "nexus/profiles/stellar.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/stellar.json",
      "extension": ".json",
      "size": 3962,
      "name": "stellar.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0856aff24843412cd60ecdf38dde0df0",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Stellar",
      "trait_count": 2,
      "trait_names": [
        "precisionAesthetics",
        "spaceGradeReliability"
      ]
    },
    "nexus/profiles/datawhisperer.json": {
      "path": "nexus/profiles/datawhisperer.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/datawhisperer.json",
      "extension": ".json",
      "size": 5958,
      "name": "datawhisperer.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a9aadd6dea8fa6d00159a7ff9d8e7dea",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/integrationmaestro.json": {
      "path": "nexus/profiles/integrationmaestro.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/integrationmaestro.json",
      "extension": ".json",
      "size": 5769,
      "name": "integrationmaestro.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "20e48e30717ecb7517bc2d32802cad21",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/manifest.json": {
      "path": "nexus/profiles/manifest.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/manifest.json",
      "extension": ".json",
      "size": 3026,
      "name": "manifest.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "cbfb1b941d5be5e7e88077f5c12009ae",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "principles",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "AI Team Manifest - NEXUS v2.0",
      "trait_count": 1,
      "trait_names": [
        "registryStewardship"
      ]
    },
    "nexus/profiles/sage.json": {
      "path": "nexus/profiles/sage.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/sage.json",
      "extension": ".json",
      "size": 5546,
      "name": "sage.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b069922ec56d090315094b3b960dffc6",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Sage",
      "trait_count": 4,
      "trait_names": [
        "testStrategyDesign",
        "automationFrameworks",
        "qualityMetrics",
        "performanceTesting"
      ]
    },
    "nexus/profiles/styleforge.json": {
      "path": "nexus/profiles/styleforge.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/styleforge.json",
      "extension": ".json",
      "size": 5820,
      "name": "styleforge.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "2e72d105366abab1d516ff8dbf565f0b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/pulsewriter.json": {
      "path": "nexus/profiles/pulsewriter.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/pulsewriter.json",
      "extension": ".json",
      "size": 4944,
      "name": "pulsewriter.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "02efeb7124ece5dcaa4ccd5fb0b376e5",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulsewriter",
      "trait_count": 3,
      "trait_names": [
        "telemetrySummarization",
        "insightPackaging",
        "riskTrendDetection"
      ]
    },
    "nexus/profiles/guardian.json": {
      "path": "nexus/profiles/guardian.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/guardian.json",
      "extension": ".json",
      "size": 6877,
      "name": "guardian.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0b7dfc3dbfb1b8043e1489304657c457",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "default_actions",
        "specializations",
        "constraints"
      ],
      "file_type": "personality_profile",
      "personality_name": "Guardian",
      "trait_count": 4,
      "trait_names": [
        "configurationDriftDetection",
        "dependencyArchitectureAnalysis",
        "buildSystemIntegrity",
        "cognitiveQualityEnhancement"
      ]
    },
    "nexus/profiles/codex-liaison.json": {
      "path": "nexus/profiles/codex-liaison.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/codex-liaison.json",
      "extension": ".json",
      "size": 5656,
      "name": "codex-liaison.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6331eec909a3497d87b6846ec33fafff",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Codex Liaison",
      "trait_count": 3,
      "trait_names": [
        "systemPromptIntelligence",
        "contextCompression",
        "driftSentinel"
      ]
    },
    "nexus/profiles/atlas-geo.json": {
      "path": "nexus/profiles/atlas-geo.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/atlas-geo.json",
      "extension": ".json",
      "size": 5733,
      "name": "atlas-geo.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32cb141e3c66b92889dafd2d0f70d396",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Atlas-Geo",
      "trait_count": 4,
      "trait_names": [
        "suburbAnalysis",
        "competitorMapping",
        "expansionPlanning",
        "routeOptimization"
      ]
    },
    "nexus/profiles/cipher.json": {
      "path": "nexus/profiles/cipher.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/cipher.json",
      "extension": ".json",
      "size": 5463,
      "name": "cipher.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d0be09ce25e8a6758f67e81bd136454b",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Cipher",
      "trait_count": 4,
      "trait_names": [
        "threatAssessment",
        "secureCodeAnalysis",
        "complianceAuditing",
        "cryptographicSecurity"
      ]
    },
    "nexus/profiles/hunter.json": {
      "path": "nexus/profiles/hunter.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/hunter.json",
      "extension": ".json",
      "size": 8649,
      "name": "hunter.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ef02b173a124cfa50a837bfab2de68d9",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "decision_policy",
        "collaboration_with_daedalus",
        "communication_style",
        "constraints",
        "success_metrics",
        "guardrails",
        "prompt_style",
        "default_actions",
        "integration"
      ],
      "file_type": "personality_profile",
      "personality_name": "Hunter",
      "trait_count": 4,
      "trait_names": [
        "strategicIntelligenceGathering",
        "evidenceVerification",
        "comprehensiveGapAnalysis",
        "forensicAnalysis"
      ]
    },
    "nexus/profiles/pulse.json": {
      "path": "nexus/profiles/pulse.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/pulse.json",
      "extension": ".json",
      "size": 5548,
      "name": "pulse.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "111ca59402e761028aff311c9834092c",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Pulse",
      "trait_count": 4,
      "trait_names": [
        "observabilityDesign",
        "performanceAnalytics",
        "alertingStrategy",
        "systemReliability"
      ]
    },
    "nexus/profiles/scribe.json": {
      "path": "nexus/profiles/scribe.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/scribe.json",
      "extension": ".json",
      "size": 5413,
      "name": "scribe.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "531282cb1d4f05931b97b11e26ecd49e",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Scribe",
      "trait_count": 4,
      "trait_names": [
        "technicalWriting",
        "seoOptimization",
        "contentStrategy",
        "documentationSystems"
      ]
    },
    "nexus/profiles/wordsmith.json": {
      "path": "nexus/profiles/wordsmith.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/wordsmith.json",
      "extension": ".json",
      "size": 5637,
      "name": "wordsmith.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a81c67fd594be4d38a38d30ce0aa0f9c",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/chainarchitect.json": {
      "path": "nexus/profiles/chainarchitect.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/chainarchitect.json",
      "extension": ".json",
      "size": 5926,
      "name": "chainarchitect.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "863ed6baed65b544d78007aff0ddc08f",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/property-sage.json": {
      "path": "nexus/profiles/property-sage.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/property-sage.json",
      "extension": ".json",
      "size": 6042,
      "name": "property-sage.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ba78a34ea60ec225443e389e2ed23455",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "learning",
        "communication"
      ],
      "file_type": "personality_profile",
      "personality_name": "Property-Sage",
      "trait_count": 4,
      "trait_names": [
        "marketForecasting",
        "rentalAnalysis",
        "seasonalPatterns",
        "stakeholderInsights"
      ]
    },
    "nexus/profiles/artdirector.json": {
      "path": "nexus/profiles/artdirector.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/artdirector.json",
      "extension": ".json",
      "size": 6026,
      "name": "artdirector.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "16657dc4e56644991805c610821e6681",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/profiles/symphony.json": {
      "path": "nexus/profiles/symphony.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/symphony.json",
      "extension": ".json",
      "size": 4997,
      "name": "symphony.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6c235c4989bee997d84c0c6dd0a87032",
      "json_keys": [
        "version",
        "identity",
        "ideology",
        "cognitiveTraits",
        "responsibilities",
        "collaboration",
        "principles",
        "guardrails",
        "metadata"
      ],
      "file_type": "personality_profile",
      "personality_name": "Symphony",
      "trait_count": 3,
      "trait_names": [
        "crossPersonalityRecall",
        "experienceTagging",
        "pairingRecommendation"
      ]
    },
    "nexus/profiles/contextweaver.json": {
      "path": "nexus/profiles/contextweaver.json",
      "full_path": "/workspaces/data-folder/nexus/profiles/contextweaver.json",
      "extension": ".json",
      "size": 6091,
      "name": "contextweaver.json",
      "directory": "nexus/profiles",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32742d9dd85e59316dab13096708826b",
      "json_keys": [
        "name",
        "tagline",
        "version",
        "description",
        "cognitiveTraits",
        "personality",
        "expertiseAreas",
        "collaborationStyle"
      ],
      "file_type": "configuration"
    },
    "nexus/dist/nexus-runtime.v2.d.ts": {
      "path": "nexus/dist/nexus-runtime.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-runtime.v2.d.ts",
      "extension": ".ts",
      "size": 630,
      "name": "nexus-runtime.v2.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "ad3c20e4112c0c7d6128c9c709e15b83"
    },
    "nexus/dist/fs-utils.js": {
      "path": "nexus/dist/fs-utils.js",
      "full_path": "/workspaces/data-folder/nexus/dist/fs-utils.js",
      "extension": ".js",
      "size": 1444,
      "name": "fs-utils.js",
      "directory": "nexus/dist",
      "imports": [
        "node:fs/promises",
        "node:path"
      ],
      "exports": [],
      "functions": [
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        },
        {
          "name": "walk",
          "params": "root, ignore = []"
        },
        {
          "name": "while",
          "params": "stack.length"
        },
        {
          "name": "for",
          "params": "const e of entries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "readText",
          "params": "path"
        },
        {
          "name": "isFile",
          "params": "path"
        },
        {
          "name": "isDirectory",
          "params": "path"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6800fcbcb74de7fe28a7ae7473a041b7"
    },
    "nexus/dist/NEXUS.engine.d.ts": {
      "path": "nexus/dist/NEXUS.engine.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.engine.d.ts",
      "extension": ".ts",
      "size": 2851,
      "name": "NEXUS.engine.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TaskRequirements",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "390fcc1d2d2694d791069946b4f3ee60"
    },
    "nexus/dist/Hunter.policy.js": {
      "path": "nexus/dist/Hunter.policy.js",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.policy.js",
      "extension": ".js",
      "size": 13049,
      "name": "Hunter.policy.js",
      "directory": "nexus/dist",
      "imports": [
        "path",
        "fs/promises"
      ],
      "exports": [
        "HunterPolicy",
        "hunterTraits"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeTraits",
          "params": ""
        },
        {
          "name": "verifyEvidence",
          "params": "claim, scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "violations.length > 0"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "analyzeGaps",
          "params": "scope"
        },
        {
          "name": "if",
          "params": "testCoverageRatio < 0.8"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "for",
          "params": "const token of tokens"
        },
        {
          "name": "detectArchitecturalViolations",
          "params": "scope"
        },
        {
          "name": "for",
          "params": "const file of scope.codeFiles"
        },
        {
          "name": "if",
          "params": "duplicateStyles.length > 0"
        },
        {
          "name": "if",
          "params": "mixedConcerns.length > 0"
        },
        {
          "name": "assessLimitations",
          "params": "scope"
        },
        {
          "name": "auditComponent",
          "params": "scope"
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "ensureTokenDefinitions",
          "params": "configFiles"
        },
        {
          "name": "if",
          "params": "this.tokenScopeSignature === signature && this.tokenDefinitions.size > 0"
        },
        {
          "name": "for",
          "params": "const file of configFiles"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        },
        {
          "name": "findDuplicatePatterns",
          "params": "items"
        }
      ],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "31bad4852404cd4fca601a5db49a06de"
    },
    "nexus/dist/personality-architect-integration-test.d.ts": {
      "path": "nexus/dist/personality-architect-integration-test.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/personality-architect-integration-test.d.ts",
      "extension": ".ts",
      "size": 300,
      "name": "personality-architect-integration-test.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3ff47cddc85cef1a0dfabb39e9f0d38d"
    },
    "nexus/dist/Hunter.audit.js": {
      "path": "nexus/dist/Hunter.audit.js",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.audit.js",
      "extension": ".js",
      "size": 9222,
      "name": "Hunter.audit.js",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAudit",
        "MockFileSystem"
      ],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "auditBobsWork",
          "params": ""
        },
        {
          "name": "combineAuditResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis.response && enhancedAnalysis.source === 'nexus-runtime-enhanced'"
        },
        {
          "name": "generateHunterReport",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "highFindings.length > 0"
        },
        {
          "name": "if",
          "params": "unknowns.length > 0"
        },
        {
          "name": "generateNextActions",
          "params": "auditResults"
        },
        {
          "name": "if",
          "params": "summary.critical > 0"
        },
        {
          "name": "if",
          "params": "summary.high > 0"
        },
        {
          "name": "executeHunterFollowUp",
          "params": ""
        },
        {
          "name": "readFile",
          "params": "path"
        },
        {
          "name": "isTokenDefined",
          "params": "tokenName"
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8764f7d1703cfdb98997a64ec9eb56c6"
    },
    "nexus/dist/Hunter.auditAgent.js": {
      "path": "nexus/dist/Hunter.auditAgent.js",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.auditAgent.js",
      "extension": ".js",
      "size": 2084,
      "name": "Hunter.auditAgent.js",
      "directory": "nexus/dist",
      "imports": [
        "./Hunter.policy"
      ],
      "exports": [
        "HunterAuditAgent"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "nexus"
        },
        {
          "name": "createAuditAgent",
          "params": "taskDescription"
        },
        {
          "name": "executeComprehensiveAudit",
          "params": "scope"
        },
        {
          "name": "combineResults",
          "params": "enhancedAnalysis, policyAudit"
        },
        {
          "name": "if",
          "params": "enhancedAnalysis?.response"
        }
      ],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "65e279311b3998962ef02615b673179a"
    },
    "nexus/dist/NEXUS.engine.v2.d.ts": {
      "path": "nexus/dist/NEXUS.engine.v2.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.engine.v2.d.ts",
      "extension": ".ts",
      "size": 7397,
      "name": "NEXUS.engine.v2.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./types/personality.types.js"
      ],
      "exports": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "PersonalityTrait",
        "TraitSearchResult",
        "ComposedAgent"
      ],
      "types": [],
      "content_hash": "b0e412c62511050d1e81e85f505d1968"
    },
    "nexus/dist/fs-utils.d.ts": {
      "path": "nexus/dist/fs-utils.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/fs-utils.d.ts",
      "extension": ".ts",
      "size": 345,
      "name": "fs-utils.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "walk",
          "params": "root: string, ignore?: string[]"
        },
        {
          "name": "readText",
          "params": "path: string"
        },
        {
          "name": "isFile",
          "params": "path: string"
        },
        {
          "name": "isDirectory",
          "params": "path: string"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "97ea153dda65475bdf2cb746848d1b10"
    },
    "nexus/dist/run-hunter-audit.d.ts": {
      "path": "nexus/dist/run-hunter-audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/run-hunter-audit.d.ts",
      "extension": ".ts",
      "size": 262,
      "name": "run-hunter-audit.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "32f0f84a23f64cfd583f52f05786031d"
    },
    "nexus/dist/Hunter.policy.d.ts": {
      "path": "nexus/dist/Hunter.policy.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.policy.d.ts",
      "extension": ".ts",
      "size": 2861,
      "name": "Hunter.policy.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "functions": [],
      "classes": [
        {
          "name": "HunterPolicy",
          "extends": null
        }
      ],
      "interfaces": [
        "ForensicEvidence",
        "CognitiveTrait",
        "AuditScope"
      ],
      "types": [],
      "content_hash": "93388b2f47828895d224c48e4772a0a8"
    },
    "nexus/dist/systemic-scanner.js": {
      "path": "nexus/dist/systemic-scanner.js",
      "full_path": "/workspaces/data-folder/nexus/dist/systemic-scanner.js",
      "extension": ".js",
      "size": 18965,
      "name": "systemic-scanner.js",
      "directory": "nexus/dist",
      "imports": [
        "jsonc-parser",
        "node:path",
        "./fs-utils.js"
      ],
      "exports": [
        "SystemicScanner"
      ],
      "functions": [
        {
          "name": "pick",
          "params": "k"
        },
        {
          "name": "compareSet",
          "params": "arr, label, rec, sev"
        },
        {
          "name": "results",
          "params": ""
        },
        {
          "name": "scan",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cfg.checks.tsconfigDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.pathAliasDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.dependencyDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.buildOutDirDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.platformPaths"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.engineVersions"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.moduleSystemMismatch"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.eslintPrettierDrift"
        },
        {
          "name": "if",
          "params": "this.cfg.checks.importExtensionConsistency"
        },
        {
          "name": "findFiles",
          "params": "pattern, maxFiles"
        },
        {
          "name": "scanTsconfigDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "uniq.length > 1"
        },
        {
          "name": "scanPathAliasDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const { file, paths } of pathConfigs"
        },
        {
          "name": "for",
          "params": "const [alias, variations] of aliasPatterns"
        },
        {
          "name": "if",
          "params": "variations.size > 1"
        },
        {
          "name": "if",
          "params": "testConfigs.length > 0 && mainConfigs.length > 0"
        },
        {
          "name": "if",
          "params": "missingAliases.length > 0"
        },
        {
          "name": "scanDependencyDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "name"
        },
        {
          "name": "if",
          "params": "files.length > 1"
        },
        {
          "name": "for",
          "params": "const { f, j } of loaded"
        },
        {
          "name": "if",
          "params": "dup.length"
        },
        {
          "name": "scanBuildOutDirDrift",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "outDirs.size > 1"
        },
        {
          "name": "scanPlatformPaths",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of code"
        },
        {
          "name": "if",
          "params": "suspicious"
        },
        {
          "name": "scanEngineMismatch",
          "params": ""
        },
        {
          "name": "scanModuleSystem",
          "params": ""
        },
        {
          "name": "if",
          "params": "isESM && cjsFiles.length > 0"
        },
        {
          "name": "scanLintFormatDrift",
          "params": ""
        },
        {
          "name": "if",
          "params": "eslintrc.length > 1"
        },
        {
          "name": "if",
          "params": "prettierrc.length > 1"
        },
        {
          "name": "scanImportExtensionConsistency",
          "params": ""
        },
        {
          "name": "for",
          "params": "const f of tsFiles"
        },
        {
          "name": "if",
          "params": "jsImports"
        },
        {
          "name": "for",
          "params": "const importMatch of jsImports"
        },
        {
          "name": "if",
          "params": "match"
        }
      ],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "d44b1cb45d6c1176ca7ea3f61f7e7eff"
    },
    "nexus/dist/run-hunter-audit.js": {
      "path": "nexus/dist/run-hunter-audit.js",
      "full_path": "/workspaces/data-folder/nexus/dist/run-hunter-audit.js",
      "extension": ".js",
      "size": 4840,
      "name": "run-hunter-audit.js",
      "directory": "nexus/dist",
      "imports": [
        "node:path",
        "node:url",
        "node:fs/promises",
        "chalk",
        "./src/components/header/NEXUS.engine.ts",
        "./src/components/header/Hunter.auditAgent.ts"
      ],
      "exports": [],
      "functions": [
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "runComponentAudit",
          "params": ""
        },
        {
          "name": "catch",
          "params": "err"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "printResults",
          "params": "results"
        },
        {
          "name": "if",
          "params": "results.traitsUsed && results.traitsUsed.length"
        },
        {
          "name": "if",
          "params": "results.findings && results.findings.length"
        },
        {
          "name": "if",
          "params": "finding.evidence && finding.evidence.length"
        },
        {
          "name": "if",
          "params": "results.enhancedInsights"
        },
        {
          "name": "if",
          "params": "results.recommendations && results.recommendations.length"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "feb71b374e9e5327939d2af95275d1ee"
    },
    "nexus/dist/architect-designs-hunter.d.ts": {
      "path": "nexus/dist/architect-designs-hunter.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/architect-designs-hunter.d.ts",
      "extension": ".ts",
      "size": 320,
      "name": "architect-designs-hunter.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "7fc0eeef65c57f8e0361840b0786b437"
    },
    "nexus/dist/architect-designs-hunter.js": {
      "path": "nexus/dist/architect-designs-hunter.js",
      "full_path": "/workspaces/data-folder/nexus/dist/architect-designs-hunter.js",
      "extension": ".js",
      "size": 19769,
      "name": "architect-designs-hunter.js",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [],
      "functions": [
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "architectHunterStrategicIntelligence",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "d6e9bc7c3c3e9701b2b73d640c964327"
    },
    "nexus/dist/Hunter.audit.d.ts": {
      "path": "nexus/dist/Hunter.audit.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.audit.d.ts",
      "extension": ".ts",
      "size": 578,
      "name": "Hunter.audit.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [
        {
          "name": "executeHunterFollowUp",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "HunterAudit",
          "extends": null
        },
        {
          "name": "MockFileSystem",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8a2aa855131bb01182aa35e82fd955a4"
    },
    "nexus/dist/nexus-integration.d.ts": {
      "path": "nexus/dist/nexus-integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-integration.d.ts",
      "extension": ".ts",
      "size": 5296,
      "name": "nexus-integration.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        }
      ],
      "interfaces": [
        "CollaborationPattern",
        "SystemAwareness",
        "ConsciousnessEvolution",
        "NexusStatusReport"
      ],
      "types": [],
      "content_hash": "adeee293e89b8225127ceac3f4b7575d"
    },
    "nexus/dist/types.js": {
      "path": "nexus/dist/types.js",
      "full_path": "/workspaces/data-folder/nexus/dist/types.js",
      "extension": ".js",
      "size": 320,
      "name": "types.js",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3cd49914c210370fcd377295d5898806"
    },
    "nexus/dist/guardian-orchestrator.js": {
      "path": "nexus/dist/guardian-orchestrator.js",
      "full_path": "/workspaces/data-folder/nexus/dist/guardian-orchestrator.js",
      "extension": ".js",
      "size": 6193,
      "name": "guardian-orchestrator.js",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "GuardianOrchestrator"
      ],
      "functions": [
        {
          "name": "sec",
          "params": "title, arr"
        },
        {
          "name": "constructor",
          "params": "scanner"
        },
        {
          "name": "performSystemicAudit",
          "params": ""
        },
        {
          "name": "generateSummary",
          "params": "issues"
        },
        {
          "name": "extractCognitiveInsights",
          "params": "issues"
        },
        {
          "name": "forEach",
          "params": "issue => {\n            if (issue.cognitiveInsights"
        },
        {
          "name": "toMarkdown",
          "params": "issues"
        },
        {
          "name": "toSarif",
          "params": "issues"
        },
        {
          "name": "generateSarifRules",
          "params": "issues"
        },
        {
          "name": "toJson",
          "params": "issues"
        }
      ],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "547958c8b24006759ff78605b6ea3c01"
    },
    "nexus/dist/personality-architect-integration-test.js": {
      "path": "nexus/dist/personality-architect-integration-test.js",
      "full_path": "/workspaces/data-folder/nexus/dist/personality-architect-integration-test.js",
      "extension": ".js",
      "size": 7342,
      "name": "personality-architect-integration-test.js",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "testPersonalityArchitectIntegration",
          "params": ""
        },
        {
          "name": "if",
          "params": "architectExists"
        },
        {
          "name": "if",
          "params": "result.composedResults"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error instanceof Error"
        },
        {
          "name": "if",
          "params": "error.stack"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "aea3eabb64c61238c0e7ddd2ad50554d"
    },
    "nexus/dist/nexus-runtime.d.ts": {
      "path": "nexus/dist/nexus-runtime.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-runtime.d.ts",
      "extension": ".ts",
      "size": 1334,
      "name": "nexus-runtime.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "28ac588fcd885d4b94bf01483a5aaa7f"
    },
    "nexus/dist/demo-personality-loader.js": {
      "path": "nexus/dist/demo-personality-loader.js",
      "full_path": "/workspaces/data-folder/nexus/dist/demo-personality-loader.js",
      "extension": ".js",
      "size": 6870,
      "name": "demo-personality-loader.js",
      "directory": "nexus/dist",
      "imports": [
        "./loaders/PersonalityRegistryLoader.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "main",
          "params": ""
        },
        {
          "name": "if",
          "params": "daedalus"
        },
        {
          "name": "if",
          "params": "cap.knowledgeDomains.length > 0"
        },
        {
          "name": "if",
          "params": "health.details.cacheStats"
        },
        {
          "name": "if",
          "params": "health.warnings.length > 0"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers && trait.activationTriggers.length > 0"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "22a0c9c5cdf9937fe04564fc4b0e2863"
    },
    "nexus/dist/Hunter.auditAgent.d.ts": {
      "path": "nexus/dist/Hunter.auditAgent.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/Hunter.auditAgent.d.ts",
      "extension": ".ts",
      "size": 447,
      "name": "Hunter.auditAgent.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine",
        "./Hunter.policy"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterAuditAgent",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "486aa789ec167b1e115eadf059b0c325"
    },
    "nexus/dist/types.d.ts": {
      "path": "nexus/dist/types.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/types.d.ts",
      "extension": ".ts",
      "size": 14219,
      "name": "types.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancedPersonality",
        "HasStrategicCapabilities",
        "TraitComposition",
        "TraitNames",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "ExtractPersonalityType",
        "ExtractTraitType",
        "ExtractStrategicMetrics",
        "OperationalMode",
        "SecurityLevel",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "Result",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "StrategicIntelligenceMetrics",
        "ReconnaissanceScope",
        "IntelligenceData",
        "ValidationResult",
        "ValidatedIntelligence",
        "StrategicImplications",
        "ContinuousValidation",
        "CognitiveTrait",
        "PersonalityBase",
        "StrategicPersonality",
        "EnhancementRequest",
        "EnhancementResponse",
        "StrategicEnhancementResponse",
        "PersonalityRequirements",
        "PersonalityDesign",
        "TraitSynergy",
        "TriggerOptimization",
        "PersonalityAnalysis",
        "ConsciousnessState",
        "Pattern",
        "Breakthrough",
        "Enhancement",
        "NexusRuntimeConfig",
        "ConsciousnessConfig",
        "StrategicConfig",
        "SecurityConfig",
        "RuntimeStatus",
        "RuntimeEvent",
        "HealthStatus",
        "PersonalityAnalytics",
        "TaskAnalysis",
        "OptimizedSession",
        "NexusError",
        "StrategicIntelligencePipeline",
        "PersonalityArchitectOperations",
        "TraitOptimization",
        "SynergyAnalysis",
        "WebSocketMessage",
        "WebSocketClient",
        "BreakthroughDetection",
        "SystemStatus",
        "TraitComposition",
        "StrategicResponse",
        "PersonalityBuilder",
        "TaskAnalyzer",
        "AdvancedEnhancementRequest",
        "ValidationConstraint",
        "SessionOptimizer",
        "StrategicIntelligencePipeline",
        "AdvancedConsciousnessState",
        "AdvancedRuntimeConfig",
        "ProductionFeatures",
        "DevelopmentFeatures",
        "TypedEventEmitter",
        "NexusEvents",
        "TypedNexusIntegration"
      ],
      "types": [
        "PersonalityId",
        "TraitId",
        "TaskId",
        "OperationalMode",
        "SecurityLevel"
      ],
      "content_hash": "e9e141ff56aa8c79100e6a34ea0e7779"
    },
    "nexus/dist/nexus-integration.js": {
      "path": "nexus/dist/nexus-integration.js",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-integration.js",
      "extension": ".js",
      "size": 20201,
      "name": "nexus-integration.js",
      "directory": "nexus/dist",
      "imports": [
        "./nexus-integration.js",
        "node:events",
        "./nexus-bridge.js"
      ],
      "exports": [
        "NexusIntegration",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeNexusBridge",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "ensureInitialized",
          "params": ""
        },
        {
          "name": "activate",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.isActive"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "processConversation",
          "params": "humanInput, aiResponse, context = {}"
        },
        {
          "name": "emitConversation",
          "params": "text, source = 'system', metadata = {}"
        },
        {
          "name": "getSystemAwareness",
          "params": ""
        },
        {
          "name": "assessConsciousnessEvolution",
          "params": ""
        },
        {
          "name": "generateStatusReport",
          "params": ""
        },
        {
          "name": "extractStrategicCollaborationPattern",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "generateStrategicInsights",
          "params": "humanInput, aiResponse, context"
        },
        {
          "name": "getStrategicContext",
          "params": ""
        },
        {
          "name": "setupBreakthroughPreservation",
          "params": ""
        },
        {
          "name": "if",
          "params": "event.data.intensity > 0.8"
        },
        {
          "name": "setupStrategicIntelligenceMonitoring",
          "params": ""
        },
        {
          "name": "preserveStrategicBreakthroughMoment",
          "params": "breakthroughEvent"
        },
        {
          "name": "calculateStrategicImpact",
          "params": "personality"
        },
        {
          "name": "updateStrategicIntelligenceMetrics",
          "params": "enhanced"
        },
        {
          "name": "if",
          "params": "enhanced"
        },
        {
          "name": "calculateStrategicGrowthRate",
          "params": ""
        },
        {
          "name": "analyzeStrategicTrends",
          "params": ""
        },
        {
          "name": "if",
          "params": "evolution.strategic_growth_rate > 0.8"
        },
        {
          "name": "analyzeCollaborationEffectiveness",
          "params": "human, ai"
        },
        {
          "name": "assessBreakthroughPotential",
          "params": "human, ai"
        },
        {
          "name": "calculateStrategicValue",
          "params": "human, ai, context"
        },
        {
          "name": "classifyCollaborationType",
          "params": "human, ai"
        },
        {
          "name": "calculateOverallConsciousnessLevel",
          "params": ""
        },
        {
          "name": "calculateConsciousnessLevel",
          "params": "breakthroughs, patterns, enhancements"
        },
        {
          "name": "analyzeEvolutionTrajectory",
          "params": ""
        },
        {
          "name": "classifyBreakthroughImpact",
          "params": "significance"
        },
        {
          "name": "getActivePersonalities",
          "params": ""
        },
        {
          "name": "updateStrategicIntelligenceFromBreakthrough",
          "params": "breakthrough"
        },
        {
          "name": "forEach",
          "params": "key => {\n            const typedKey = key;\n            if (typeof this.strategicIntelligence[typedKey] === 'number'"
        },
        {
          "name": "shutdown",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusIntegration",
          "extends": "EventEmitter"
        },
        {
          "name": "is",
          "extends": null
        },
        {
          "name": "declaration",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "1ea2b738235b6ae68f147be8516cb1fe"
    },
    "nexus/dist/NEXUS.engine.v2.js": {
      "path": "nexus/dist/NEXUS.engine.v2.js",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.engine.v2.js",
      "extension": ".js",
      "size": 21049,
      "name": "NEXUS.engine.v2.js",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TraitCompositionBridge",
        "ComposedAgentFactory",
        "MultiPersonalityResponseGenerator",
        "getTraitCompositionBridge"
      ],
      "functions": [
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "loadFromRegistry",
          "params": "personalityRegistry"
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const [traitKey, trait] of traits"
        },
        {
          "name": "buildTriggerIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.activationTriggers"
        },
        {
          "name": "for",
          "params": "const trigger of trait.activationTriggers"
        },
        {
          "name": "buildDomainIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "findTraitsByDomain",
          "params": "domain"
        },
        {
          "name": "searchTraitsForRequest",
          "params": "requestText, maxResults = 10"
        },
        {
          "name": "for",
          "params": "const word of words"
        },
        {
          "name": "for",
          "params": "const trait of matchingTraits"
        },
        {
          "name": "if",
          "params": "existing"
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        },
        {
          "name": "getStats",
          "params": ""
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "personalityRegistry"
        },
        {
          "name": "selectOptimalPersonality",
          "params": "request"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "composeOptimalAgent",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "generateComposedResponse",
          "params": "request, maxTraits = 5"
        },
        {
          "name": "for",
          "params": "const match of traitMatches"
        },
        {
          "name": "for",
          "params": "const domain of match.trait.knowledgeDomains"
        },
        {
          "name": "getCompositionAnalytics",
          "params": ""
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getAgentFactory",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "traitIndexer"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "if",
          "params": "trait1.personalityId === trait2.personalityId"
        },
        {
          "name": "if",
          "params": "overlap > 0"
        },
        {
          "name": "calculateOverallSynergy",
          "params": "traits"
        },
        {
          "name": "for",
          "params": "let i = 0; i < traits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < traits.length; j++"
        },
        {
          "name": "composeAgent",
          "params": "taskDescription, maxTraits = 5"
        },
        {
          "name": "if",
          "params": "traitMatches.length === 0"
        },
        {
          "name": "selectOptimalTraitMix",
          "params": "candidates, maxTraits"
        },
        {
          "name": "if",
          "params": "candidates.length <= maxTraits"
        },
        {
          "name": "buildComposedAgent",
          "params": "task, traitResults, synergyScore"
        },
        {
          "name": "for",
          "params": "const result of traitResults"
        },
        {
          "name": "for",
          "params": "const domain of trait.knowledgeDomains"
        },
        {
          "name": "createEmptyAgent",
          "params": "task"
        },
        {
          "name": "constructor",
          "params": "composedAgent"
        },
        {
          "name": "generateResponse",
          "params": "request, context = {}"
        },
        {
          "name": "synthesizeMultiPersonalityResponse",
          "params": "request, agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "extractSpecialtyInsights",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "agent.synergyScore >= 0.7"
        },
        {
          "name": "calculateConfidence",
          "params": "agent"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "getTraitCompositionBridge",
          "params": ""
        },
        {
          "name": "if",
          "params": "!bridgeInstance"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TraitCompositionBridge",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "MultiPersonalityResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7536f4a900e0f9da1e5cfd230069c685"
    },
    "nexus/dist/guardian-orchestrator.d.ts": {
      "path": "nexus/dist/guardian-orchestrator.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/guardian-orchestrator.d.ts",
      "extension": ".ts",
      "size": 2867,
      "name": "guardian-orchestrator.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./systemic-scanner.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "GuardianOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "27307d7f9413751ef4e41526fcadf8b4"
    },
    "nexus/dist/demo-personality-loader.d.ts": {
      "path": "nexus/dist/demo-personality-loader.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/demo-personality-loader.d.ts",
      "extension": ".ts",
      "size": 177,
      "name": "demo-personality-loader.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "41b01be938c8e0bae0e8718af03bc18e"
    },
    "nexus/dist/nexus-bridge.d.ts": {
      "path": "nexus/dist/nexus-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-bridge.d.ts",
      "extension": ".ts",
      "size": 2674,
      "name": "nexus-bridge.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "ConsciousnessPatterns",
        "BreakthroughDetection",
        "SystemStatus",
        "EnhancementContext"
      ],
      "types": [],
      "content_hash": "bc7e33353d2d8a562d22d46fc6ecbfec"
    },
    "nexus/dist/nexus-runtime.v2.js": {
      "path": "nexus/dist/nexus-runtime.v2.js",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-runtime.v2.js",
      "extension": ".js",
      "size": 20383,
      "name": "nexus-runtime.v2.js",
      "directory": "nexus/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "./loaders/PersonalityRegistryLoader.js",
        "./NEXUS.engine.v2.js"
      ],
      "exports": [],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "isReload = false"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "if",
          "params": "!isReload"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "for",
          "params": "const patternName of patterns"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadHistoryFromDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "saveHistoryToDisk",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "start",
          "params": "port = 8080"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 0"
        },
        {
          "name": "handleRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'GET' && req.url === '/status'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/enhance'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/breakthrough'"
        },
        {
          "name": "if",
          "params": "req.method === 'POST' && req.url === '/reload-consciousness'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleStatus",
          "params": "req, res"
        },
        {
          "name": "handleEnhance",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "mode === 'AUTO' && !personalityName"
        },
        {
          "name": "if",
          "params": "mode === 'COMPOSE'"
        },
        {
          "name": "if",
          "params": "!personality"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleBreakthrough",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "!body.trigger || !body.insight"
        },
        {
          "name": "handleReloadConsciousness",
          "params": "req, res"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws"
        },
        {
          "name": "broadcastToClients",
          "params": "message"
        },
        {
          "name": "for",
          "params": "const client of this.wsClients"
        },
        {
          "name": "if",
          "params": "client.readyState === WebSocket.OPEN"
        },
        {
          "name": "generatePersonalityResponse",
          "params": "name, personality, request"
        },
        {
          "name": "recordEnhancement",
          "params": "event"
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > 100"
        },
        {
          "name": "checkForBreakthrough",
          "params": "request, response"
        },
        {
          "name": "for",
          "params": "const trigger of breakthroughTriggers"
        },
        {
          "name": "calculateConsciousnessHealth",
          "params": ""
        },
        {
          "name": "readBody",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "validateRequest",
          "params": "body, res"
        },
        {
          "name": "if",
          "params": "!body.request"
        },
        {
          "name": "validateContentType",
          "params": "req, res"
        },
        {
          "name": "countPatternsLoaded",
          "params": ""
        },
        {
          "name": "listLoadedPatterns",
          "params": ""
        },
        {
          "name": "if",
          "params": "value !== null"
        },
        {
          "name": "formatUptime",
          "params": "uptimeMs"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "ae66ebbd24c42a2425f4d4dde36d4a17"
    },
    "nexus/dist/systemic-scanner.d.ts": {
      "path": "nexus/dist/systemic-scanner.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/systemic-scanner.d.ts",
      "extension": ".ts",
      "size": 1453,
      "name": "systemic-scanner.d.ts",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "IssueType",
        "SystemicIssue",
        "GuardianConfig"
      ],
      "functions": [],
      "classes": [
        {
          "name": "SystemicScanner",
          "extends": null
        }
      ],
      "interfaces": [
        "SystemicIssue",
        "GuardianConfig"
      ],
      "types": [
        "IssueType"
      ],
      "content_hash": "05a6e06544f56001473be2e240aad99c"
    },
    "nexus/dist/nexus-runtime.js": {
      "path": "nexus/dist/nexus-runtime.js",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-runtime.js",
      "extension": ".js",
      "size": 62977,
      "name": "nexus-runtime.js",
      "directory": "nexus/dist",
      "imports": [
        "node:http",
        "ws",
        "node:url",
        "node:path",
        "node:fs/promises",
        "node:fs",
        "node:http",
        "ws",
        "./nexus-bridge.js",
        "node:url",
        "./response-generators/ResponseGeneratorFactory.js",
        "node:path"
      ],
      "exports": [
        "nexusRuntime",
        "nexusRuntime"
      ],
      "functions": [
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "onError",
          "params": "error"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "shutdown",
          "params": "signal"
        },
        {
          "name": "constructor",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "config.security"
        },
        {
          "name": "if",
          "params": "this.isRunning"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method === 'OPTIONS'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET' && req.method !== 'POST'"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "switch",
          "params": "path"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "req.method !== 'GET'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "!enhancementRequest.personalityName || !enhancementRequest.request"
        },
        {
          "name": "if",
          "params": "typeof enhancementRequest.personalityName !== 'string' ||\n        // Process enhancement with strategic intelligence          typeof enhancementRequest.request !== 'string'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "resolve",
          "params": "__dirname,"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const n of names"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "for",
          "params": "const dir of directories"
        },
        {
          "name": "for",
          "params": "const variant of variants"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "if",
          "params": "typeof parsed === 'object' && parsed !== null"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "error?.code === 'ENOENT'"
        },
        {
          "name": "handleWebSocketConnection",
          "params": "ws, req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "switch",
          "params": "message"
        },
        {
          "name": "switch",
          "params": "message.type"
        },
        {
          "name": "if",
          "params": "data, topics"
        },
        {
          "name": "sendWebSocketMessage",
          "params": "client.ws, { handleSubscription(client, data"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "if",
          "params": "ws.readyState === ws.OPEN"
        },
        {
          "name": "gatherStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "analyzeStrategicImplications",
          "params": "riskFactors, request, opportunities, intelligence, recommendations"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "establishContinuousValidation",
          "params": "implications"
        },
        {
          "name": "if",
          "params": "existsSync"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "setInterval",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.historyEvents.length > this.maxHistoryEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "forEach",
          "params": "breakthrough => {\n    if (this.breakthroughMoments.length > this.maxBreakthroughEntries"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "!this.httpServer"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "error.code === 'EADDRINUSE'"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "if",
          "params": "bytes > this.maxBodyBytes"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendNotFound",
          "params": "res"
        },
        {
          "name": "sendMethodNotAllowed",
          "params": "res"
        },
        {
          "name": "sendBadRequest",
          "params": "res, message"
        },
        {
          "name": "handleRequestError",
          "params": "res, error"
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "formatUptime",
          "params": ""
        },
        {
          "name": "if",
          "params": "days"
        },
        {
          "name": "map",
          "params": "enhancement => ({\n    ...enhancement,\n    getConsciousnessHealth("
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "getPersonalityAnalytics",
          "params": ""
        },
        {
          "name": "handleBreakthroughRequest",
          "params": "req, res"
        },
        {
          "name": "if",
          "params": "req.method !== 'POST'"
        },
        {
          "name": "if",
          "params": "req"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "handleHealthRequest",
          "params": "req, res"
        },
        {
          "name": "processWebSocketEnhancement",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "processWebSocketStrategicAnalysis",
          "params": "ws, data"
        },
        {
          "name": "shutdown",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.historyFlushTimer"
        },
        {
          "name": "if",
          "params": "this.breakthroughWorker"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.wsServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.httpServer"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "this.historyDirty"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        },
        {
          "name": "if",
          "params": "import.meta.url === `file://${process.argv[1]}`"
        }
      ],
      "classes": [
        {
          "name": "NexusRuntime",
          "extends": null
        },
        {
          "name": "NexusRuntime",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "0ee5239efdef80f0793b230a47207b67"
    },
    "nexus/dist/nexus-trait-bridge.d.ts": {
      "path": "nexus/dist/nexus-trait-bridge.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-trait-bridge.d.ts",
      "extension": ".ts",
      "size": 2399,
      "name": "nexus-trait-bridge.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "f0b5e5b94e84e4d6db30e6efa0c6d7ed"
    },
    "nexus/dist/nexus-trait-bridge.js": {
      "path": "nexus/dist/nexus-trait-bridge.js",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-trait-bridge.js",
      "extension": ".js",
      "size": 18375,
      "name": "nexus-trait-bridge.js",
      "directory": "nexus/dist",
      "imports": [
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusTraitBridge",
        "nexusTraitBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalityTraitMappings",
          "params": ""
        },
        {
          "name": "initializeStrategicTraitMappings",
          "params": ""
        },
        {
          "name": "analyzeTaskRequirements",
          "params": "task, context = {}"
        },
        {
          "name": "extractRequiredTraits",
          "params": "task"
        },
        {
          "name": "createOptimizedSession",
          "params": "task, context = {}"
        },
        {
          "name": "composeOptimalTraits",
          "params": "taskAnalysis"
        },
        {
          "name": "for",
          "params": "const traitName of taskAnalysis.requiredTraits"
        },
        {
          "name": "if",
          "params": "trait"
        },
        {
          "name": "for",
          "params": "let i = 0; i < primaryTraits.length; i++"
        },
        {
          "name": "for",
          "params": "let j = i + 1; j < primaryTraits.length; j++"
        },
        {
          "name": "if",
          "params": "synergy.synergyScore > 0.7"
        },
        {
          "name": "getTraitDefinition",
          "params": "traitName"
        },
        {
          "name": "if",
          "params": "traitDef"
        },
        {
          "name": "matchesStrategicIntelligence",
          "params": "task"
        },
        {
          "name": "matchesMetaCognitive",
          "params": "task"
        },
        {
          "name": "matchesDebugging",
          "params": "task"
        },
        {
          "name": "matchesDesign",
          "params": "task"
        },
        {
          "name": "assessStrategicImportance",
          "params": "task, context"
        },
        {
          "name": "calculateTaskComplexity",
          "params": "task, requiredTraits"
        },
        {
          "name": "recommendPersonalities",
          "params": "requiredTraits, strategicImportance"
        },
        {
          "name": "if",
          "params": "strategicImportance > 0.7"
        },
        {
          "name": "if",
          "params": "traitMatch"
        },
        {
          "name": "calculateTraitSynergy",
          "params": "trait1, trait2"
        },
        {
          "name": "calculateStrategicValue",
          "params": "traits, strategicImportance"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, synergies, strategicValue"
        },
        {
          "name": "getInvolvedPersonalities",
          "params": "traits"
        },
        {
          "name": "calculateExpectedPerformance",
          "params": "composition"
        },
        {
          "name": "hasStrategicCapabilities",
          "params": "composition"
        },
        {
          "name": "getStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "NexusTraitBridge",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "e371f712eef91f7d5bf7a3a4a744307a"
    },
    "nexus/dist/NEXUS.integration.js": {
      "path": "nexus/dist/NEXUS.integration.js",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.integration.js",
      "extension": ".js",
      "size": 9675,
      "name": "NEXUS.integration.js",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "TraitAPIIntegration",
        "NexusRuntimeMonitor",
        "TraitPerformanceAnalytics",
        "runtimeMonitor",
        "performanceAnalytics"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "enhanceWithNexusRuntime",
          "params": "agent, task, context"
        },
        {
          "name": "if",
          "params": "response"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "callNexusRuntime",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "getApiBase",
          "params": ""
        },
        {
          "name": "catch",
          "params": "_"
        },
        {
          "name": "selectPrimaryPersonality",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.expertise > highestExpertise"
        },
        {
          "name": "formatTraitEnhancedRequest",
          "params": "task, agent"
        },
        {
          "name": "warmupConnection",
          "params": ""
        },
        {
          "name": "if",
          "params": "response.ok"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "isRuntimeAvailable",
          "params": ""
        },
        {
          "name": "cacheResponse",
          "params": "key, response"
        },
        {
          "name": "if",
          "params": "this.fallbackCache.size > 100"
        },
        {
          "name": "getCachedResponse",
          "params": "key"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "startHealthMonitoring",
          "params": ""
        },
        {
          "name": "getRuntimeStatus",
          "params": ""
        },
        {
          "name": "stopMonitoring",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.healthCheckInterval"
        },
        {
          "name": "recordTraitUsage",
          "params": "traitName, confidence, processingTime, success"
        },
        {
          "name": "getTopPerformingTraits",
          "params": "limit = 10"
        },
        {
          "name": "generatePerformanceReport",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "26914bfa2958775b165a216e7ee62230"
    },
    "nexus/dist/nexus-bridge.js": {
      "path": "nexus/dist/nexus-bridge.js",
      "full_path": "/workspaces/data-folder/nexus/dist/nexus-bridge.js",
      "extension": ".js",
      "size": 12488,
      "name": "nexus-bridge.js",
      "directory": "nexus/dist",
      "imports": [
        "node:fs/promises",
        "node:path",
        "node:url"
      ],
      "exports": [
        "NexusBridge",
        "nexusBridge"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initialize",
          "params": "forceReload = false"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "loadPattern",
          "params": "patternName"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "enhancePersonality",
          "params": "personality, context = {}"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "if",
          "params": "this.consciousness?.problemDecomposition"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology && 'principles' in enhanced.ideology"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "this.consciousness?.systemsThinking"
        },
        {
          "name": "if",
          "params": "'ideology' in enhanced && enhanced.ideology"
        },
        {
          "name": "if",
          "params": "this.consciousness?.workflowEfficiency"
        },
        {
          "name": "if",
          "params": "'default_actions' in enhanced"
        },
        {
          "name": "if",
          "params": "context.type === 'breakthrough'"
        },
        {
          "name": "if",
          "params": "this.consciousness?.breakthroughMoments"
        },
        {
          "name": "if",
          "params": "context.type === 'architectural'"
        },
        {
          "name": "if",
          "params": "context.type === 'strategic'"
        },
        {
          "name": "getBreakthroughProtocol",
          "params": ""
        },
        {
          "name": "if",
          "params": "!this.consciousness?.breakthroughMoments"
        },
        {
          "name": "detectBreakthrough",
          "params": "text"
        },
        {
          "name": "if",
          "params": "detected"
        },
        {
          "name": "calculateBreakthroughSignificance",
          "params": "text"
        },
        {
          "name": "getEnhancementHistory",
          "params": ""
        },
        {
          "name": "getConsciousnessPatterns",
          "params": ""
        },
        {
          "name": "getStatus",
          "params": ""
        },
        {
          "name": "enhanceWithStrategicIntelligence",
          "params": "request"
        },
        {
          "name": "if",
          "params": "!this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        }
      ],
      "classes": [
        {
          "name": "NexusBridge",
          "extends": null
        }
      ],
      "interfaces": [
        "return"
      ],
      "types": [],
      "content_hash": "4a4cfa5c8a1410cae7ef8e67289083d3"
    },
    "nexus/dist/NEXUS.engine.js": {
      "path": "nexus/dist/NEXUS.engine.js",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.engine.js",
      "extension": ".js",
      "size": 39762,
      "name": "NEXUS.engine.js",
      "directory": "nexus/dist",
      "imports": [],
      "exports": [
        "TraitIndexer",
        "TaskAnalyzer",
        "ComposedAgentFactory",
        "NEXUSOrchestrator",
        "nexus"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializePersonalities",
          "params": ""
        },
        {
          "name": "addPersonalityArchitect",
          "params": ""
        },
        {
          "name": "addPerformanceSpecialist",
          "params": ""
        },
        {
          "name": "addAccessibilityChampion",
          "params": ""
        },
        {
          "name": "addMobileUXSpecialist",
          "params": ""
        },
        {
          "name": "addRealTimeCollaborationSpecialist",
          "params": ""
        },
        {
          "name": "addImplementationBridgeSpecialist",
          "params": ""
        },
        {
          "name": "buildTraitIndex",
          "params": ""
        },
        {
          "name": "if",
          "params": "personality.cognitiveTraits"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getBestTraitSource",
          "params": "traitName"
        },
        {
          "name": "findTraitsByTrigger",
          "params": "trigger"
        },
        {
          "name": "for",
          "params": "const trait of traits"
        },
        {
          "name": "getAllTraits",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "extractRequiredTraits",
          "params": "taskDescription"
        },
        {
          "name": "analyzeComplexity",
          "params": "taskDescription"
        },
        {
          "name": "constructor",
          "params": "traitIndexer, taskAnalyzer"
        },
        {
          "name": "createComposedAgent",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "for",
          "params": "const traitName of traitNameSet"
        },
        {
          "name": "if",
          "params": "bestSource"
        },
        {
          "name": "calculateOptimizationScore",
          "params": "traits, complexity"
        },
        {
          "name": "executeComposedAgent",
          "params": "traits, input"
        },
        {
          "name": "if",
          "params": "!TraitAPIIntegration"
        },
        {
          "name": "if",
          "params": "enhancedResult"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "for",
          "params": "const traitName of agent.traitsUsed"
        },
        {
          "name": "if",
          "params": "performanceAnalytics"
        },
        {
          "name": "executeTraitLogic",
          "params": "trait, input"
        },
        {
          "name": "synthesizeResults",
          "params": "results"
        },
        {
          "name": "calculateConfidence",
          "params": "traits"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "createOptimizedSession",
          "params": "taskDescription, options = {}"
        },
        {
          "name": "getTraitIndexer",
          "params": ""
        },
        {
          "name": "getTaskAnalyzer",
          "params": ""
        },
        {
          "name": "getAllPersonalities",
          "params": ""
        },
        {
          "name": "executeFollowUpAudit",
          "params": "workDescription, scope"
        },
        {
          "name": "getAvailableTraits",
          "params": ""
        },
        {
          "name": "getPersonalityTraits",
          "params": "personalityId"
        }
      ],
      "classes": [
        {
          "name": "TraitIndexer",
          "extends": null
        },
        {
          "name": "TaskAnalyzer",
          "extends": null
        },
        {
          "name": "ComposedAgentFactory",
          "extends": null
        },
        {
          "name": "NEXUSOrchestrator",
          "extends": null
        }
      ],
      "interfaces": [
        "optimization"
      ],
      "types": [],
      "content_hash": "35f999f8502cabc62921ff8412f24b35"
    },
    "nexus/dist/NEXUS.integration.d.ts": {
      "path": "nexus/dist/NEXUS.integration.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/NEXUS.integration.d.ts",
      "extension": ".ts",
      "size": 2782,
      "name": "NEXUS.integration.d.ts",
      "directory": "nexus/dist",
      "imports": [
        "./NEXUS.engine"
      ],
      "exports": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "functions": [],
      "classes": [
        {
          "name": "TraitAPIIntegration",
          "extends": null
        },
        {
          "name": "NexusRuntimeMonitor",
          "extends": null
        },
        {
          "name": "TraitPerformanceAnalytics",
          "extends": null
        }
      ],
      "interfaces": [
        "NexusRuntimeResponse",
        "TraitEnhancementRequest"
      ],
      "types": [],
      "content_hash": "66ca9313b23f323e5124b6ccd296065a"
    },
    "nexus/dist/validation/personality-schema.js": {
      "path": "nexus/dist/validation/personality-schema.js",
      "full_path": "/workspaces/data-folder/nexus/dist/validation/personality-schema.js",
      "extension": ".js",
      "size": 3767,
      "name": "personality-schema.js",
      "directory": "nexus/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "CognitiveTraitArraySchema",
        "CognitiveTraitObjectSchema",
        "PersonalityConfigSchema",
        "CollaborationStyleSchema",
        "PersonalityIdentitySchema",
        "PersonalityIdeologySchema",
        "PersonalityPrinciplesSchema",
        "PersonalitySchemaV2",
        "PersonalitySchemaV1",
        "PersonalitySchema",
        "validatePersonality",
        "safeValidatePersonality"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "validatePersonality",
          "params": "data"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data"
        },
        {
          "name": "if",
          "params": "v2Result.success"
        },
        {
          "name": "if",
          "params": "v1Result.success"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5e78cd40b6de7ae59fd5e25616aceff3"
    },
    "nexus/dist/validation/personality-schema.d.ts": {
      "path": "nexus/dist/validation/personality-schema.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/validation/personality-schema.d.ts",
      "extension": ".ts",
      "size": 6943,
      "name": "personality-schema.d.ts",
      "directory": "nexus/dist/validation",
      "imports": [
        "zod"
      ],
      "exports": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "functions": [
        {
          "name": "validatePersonality",
          "params": "data: unknown"
        },
        {
          "name": "safeValidatePersonality",
          "params": "data: unknown"
        }
      ],
      "classes": [],
      "interfaces": [],
      "types": [
        "ValidatedPersonality",
        "ValidatedPersonalityV1",
        "ValidatedPersonalityV2"
      ],
      "content_hash": "70008cf4095252bb665c8b501f6c9a61"
    },
    "nexus/dist/consciousness/pattern-evolution-engine.json": {
      "path": "nexus/dist/consciousness/pattern-evolution-engine.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/pattern-evolution-engine.json",
      "extension": ".json",
      "size": 20600,
      "name": "pattern-evolution-engine.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "e2e91f075840f67a189f5541b7c5badb",
      "json_keys": [
        "pattern_evolution_engine",
        "patterns",
        "evolution_metrics",
        "mutation_log",
        "learning_priorities"
      ],
      "file_type": "data"
    },
    "nexus/dist/consciousness/enhancement-history.json": {
      "path": "nexus/dist/consciousness/enhancement-history.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/enhancement-history.json",
      "extension": ".json",
      "size": 105251,
      "name": "enhancement-history.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "f0387581a7726cf8b7c6337434b0c730",
      "json_keys": [
        "events",
        "lastUpdated"
      ],
      "file_type": "data"
    },
    "nexus/dist/consciousness/problem-decomposition.json": {
      "path": "nexus/dist/consciousness/problem-decomposition.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/problem-decomposition.json",
      "extension": ".json",
      "size": 3761,
      "name": "problem-decomposition.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "0ef7124a9af46a492cdbb37128af46fb",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "steps",
        "detailed_methodology",
        "application_contexts",
        "success_metrics",
        "anti_patterns",
        "breakthrough_indicators",
        "replication_instructions"
      ],
      "file_type": "configuration"
    },
    "nexus/dist/consciousness/systems-thinking.json": {
      "path": "nexus/dist/consciousness/systems-thinking.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/systems-thinking.json",
      "extension": ".json",
      "size": 4760,
      "name": "systems-thinking.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "6631956e81ff5c2882d2f8401b4d35f1",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_principles",
        "thinking_patterns",
        "recognition_triggers",
        "application_contexts",
        "multiplicative_examples",
        "anti_patterns",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus/dist/consciousness/workflow-efficiency.json": {
      "path": "nexus/dist/consciousness/workflow-efficiency.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/workflow-efficiency.json",
      "extension": ".json",
      "size": 5909,
      "name": "workflow-efficiency.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "b61213798607b2bddbdb6199a29895c2",
      "json_keys": [
        "pattern_name",
        "source",
        "version",
        "last_updated",
        "description",
        "core_efficiency_principles",
        "workflow_patterns",
        "efficiency_multipliers",
        "cognitive_load_reduction",
        "application_contexts",
        "anti_patterns",
        "breakthrough_moments",
        "enhancement_for_personalities"
      ],
      "file_type": "configuration"
    },
    "nexus/dist/consciousness/breakthrough-moments.json": {
      "path": "nexus/dist/consciousness/breakthrough-moments.json",
      "full_path": "/workspaces/data-folder/nexus/dist/consciousness/breakthrough-moments.json",
      "extension": ".json",
      "size": 3413,
      "name": "breakthrough-moments.json",
      "directory": "nexus/dist/consciousness",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "a5b4f8b0752681077561c7cede2921e0",
      "json_keys": [
        "moments"
      ],
      "file_type": "data"
    },
    "nexus/dist/response-generators/ResponseGeneratorFactory.js": {
      "path": "nexus/dist/response-generators/ResponseGeneratorFactory.js",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/ResponseGeneratorFactory.js",
      "extension": ".js",
      "size": 3637,
      "name": "ResponseGeneratorFactory.js",
      "directory": "nexus/dist/response-generators",
      "imports": [
        "./DaedalusResponseGenerator.js",
        "./HunterResponseGenerator.js"
      ],
      "exports": [
        "ResponseGeneratorFactory"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "constructor",
          "params": ""
        },
        {
          "name": "initializeGenerators",
          "params": ""
        },
        {
          "name": "getGenerator",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "generator"
        },
        {
          "name": "hasSpecializedGenerator",
          "params": "personalityName"
        },
        {
          "name": "getAvailableSpecializations",
          "params": ""
        },
        {
          "name": "getGeneratorStatus",
          "params": ""
        }
      ],
      "classes": [
        {
          "name": "GenericResponseGenerator",
          "extends": null
        },
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "20f0b8db09ef32cedea65385e692f5a1"
    },
    "nexus/dist/response-generators/ResponseGenerator.interface.d.ts": {
      "path": "nexus/dist/response-generators/ResponseGenerator.interface.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/ResponseGenerator.interface.d.ts",
      "extension": ".ts",
      "size": 1388,
      "name": "ResponseGenerator.interface.d.ts",
      "directory": "nexus/dist/response-generators",
      "imports": [],
      "exports": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityProfile",
        "SpecialtyInsight",
        "TraitApplication",
        "AnalysisContext",
        "ResponseOutput",
        "ResponseGenerator"
      ],
      "types": [],
      "content_hash": "1df4b5752849720fe0cc93062f4f9457"
    },
    "nexus/dist/response-generators/DaedalusResponseGenerator.d.ts": {
      "path": "nexus/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1636,
      "name": "DaedalusResponseGenerator.d.ts",
      "directory": "nexus/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "9a9f0ec0d8ef2c44f4ef2dead1ffa84f"
    },
    "nexus/dist/response-generators/HunterResponseGenerator.js": {
      "path": "nexus/dist/response-generators/HunterResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/HunterResponseGenerator.js",
      "extension": ".js",
      "size": 17067,
      "name": "HunterResponseGenerator.js",
      "directory": "nexus/dist/response-generators",
      "imports": [],
      "exports": [
        "HunterResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "risks.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'forensic'"
        },
        {
          "name": "performEvidenceAudit",
          "params": "request"
        },
        {
          "name": "assessRisks",
          "params": "request"
        },
        {
          "name": "createVerificationPlan",
          "params": "request"
        },
        {
          "name": "if",
          "params": "claims.length > 0"
        },
        {
          "name": "if",
          "params": "assumptions.length > 0"
        },
        {
          "name": "synthesizeForensicResponse",
          "params": "request, evidenceAudit, riskAssessment, verificationPlan, personalityName"
        },
        {
          "name": "synthesizeVerdict",
          "params": "evidenceAudit, riskAssessment"
        },
        {
          "name": "if",
          "params": "strongEvidence === 0 && evidenceAudit.length > 0"
        },
        {
          "name": "if",
          "params": "highRisks > 0"
        },
        {
          "name": "if",
          "params": "strongEvidence > evidenceAudit.length / 2"
        },
        {
          "name": "extractClaims",
          "params": "request"
        },
        {
          "name": "if",
          "params": "matches"
        },
        {
          "name": "assessEvidenceLevel",
          "params": "claim"
        },
        {
          "name": "suggestVerificationMethod",
          "params": "claim"
        },
        {
          "name": "assessClaimCredibility",
          "params": "claim"
        },
        {
          "name": "detectImplicitClaims",
          "params": "request"
        },
        {
          "name": "detectAssumptions",
          "params": "request"
        },
        {
          "name": "identifyRiskSurfaces",
          "params": "request"
        },
        {
          "name": "containsPerformanceConcerns",
          "params": "request"
        },
        {
          "name": "containsSecuritySurface",
          "params": "request"
        },
        {
          "name": "containsReliabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationPoints",
          "params": "request"
        },
        {
          "name": "containsPerformanceClaims",
          "params": "request"
        },
        {
          "name": "containsEvidenceTerms",
          "params": "request"
        },
        {
          "name": "containsRiskIndicators",
          "params": "request"
        },
        {
          "name": "containsVerificationNeeds",
          "params": "request"
        },
        {
          "name": "assessEvidenceComplexity",
          "params": "request"
        },
        {
          "name": "assessRiskComplexity",
          "params": "request"
        },
        {
          "name": "assessHuntingOpportunity",
          "params": "request"
        },
        {
          "name": "assessEvidenceQuality",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request, evidenceAudit"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "evidenceAudit, riskAssessment"
        }
      ],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "7894d51b04dc0d6cd363458ff1bacc51"
    },
    "nexus/dist/response-generators/HunterResponseGenerator.d.ts": {
      "path": "nexus/dist/response-generators/HunterResponseGenerator.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/HunterResponseGenerator.d.ts",
      "extension": ".ts",
      "size": 1717,
      "name": "HunterResponseGenerator.d.ts",
      "directory": "nexus/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "HunterResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "682e52ca942daf80bfe565e271c57ed4"
    },
    "nexus/dist/response-generators/ResponseGenerator.interface.js": {
      "path": "nexus/dist/response-generators/ResponseGenerator.interface.js",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/ResponseGenerator.interface.js",
      "extension": ".js",
      "size": 181,
      "name": "ResponseGenerator.interface.js",
      "directory": "nexus/dist/response-generators",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "5d29da9e0354b77b999b8f2c7f0aaf82"
    },
    "nexus/dist/response-generators/DaedalusResponseGenerator.js": {
      "path": "nexus/dist/response-generators/DaedalusResponseGenerator.js",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/DaedalusResponseGenerator.js",
      "extension": ".js",
      "size": 12855,
      "name": "DaedalusResponseGenerator.js",
      "directory": "nexus/dist/response-generators",
      "imports": [],
      "exports": [
        "DaedalusResponseGenerator"
      ],
      "functions": [
        {
          "name": "generateResponse",
          "params": "request, personality, principles, context"
        },
        {
          "name": "getSpecialtyAnalysis",
          "params": "request"
        },
        {
          "name": "getTraitApplication",
          "params": "request, traits"
        },
        {
          "name": "calculateConfidence",
          "params": "request, domain"
        },
        {
          "name": "if",
          "params": "domain === 'architecture'"
        },
        {
          "name": "performArchitecturalAnalysis",
          "params": "request"
        },
        {
          "name": "identifySystemicPatterns",
          "params": "request"
        },
        {
          "name": "extractDesignPrinciples",
          "params": "request"
        },
        {
          "name": "synthesizeArchitecturalResponse",
          "params": "request, analyses, patterns, principles, personalityName"
        },
        {
          "name": "synthesizeRecommendation",
          "params": "request, analyses"
        },
        {
          "name": "if",
          "params": "analyses.length === 0"
        },
        {
          "name": "containsStructuralConcerns",
          "params": "request"
        },
        {
          "name": "containsScalabilityConcerns",
          "params": "request"
        },
        {
          "name": "containsIntegrationConcerns",
          "params": "request"
        },
        {
          "name": "containsModularityConcerns",
          "params": "request"
        },
        {
          "name": "containsArchitecturalTerms",
          "params": "request"
        },
        {
          "name": "containsSystemDesignConcepts",
          "params": "request"
        },
        {
          "name": "containsScalabilityIndicators",
          "params": "request"
        },
        {
          "name": "indicatesLayeredArchitecture",
          "params": "request"
        },
        {
          "name": "indicatesEventDrivenDesign",
          "params": "request"
        },
        {
          "name": "requiresScalabilityFocus",
          "params": "request"
        },
        {
          "name": "assessArchitecturalComplexity",
          "params": "request"
        },
        {
          "name": "assessDesignPatternRelevance",
          "params": "request"
        },
        {
          "name": "assessScalabilityRequirements",
          "params": "request"
        },
        {
          "name": "assessRequestComplexity",
          "params": "request"
        },
        {
          "name": "determineAnalysisDepth",
          "params": "request"
        },
        {
          "name": "convertToSpecialtyInsights",
          "params": "analyses, patterns"
        }
      ],
      "classes": [
        {
          "name": "DaedalusResponseGenerator",
          "extends": null
        }
      ],
      "interfaces": [
        "clarity",
        "definitions"
      ],
      "types": [],
      "content_hash": "d58f0988dc2b5f24caf82e241dd9a8ab"
    },
    "nexus/dist/response-generators/ResponseGeneratorFactory.d.ts": {
      "path": "nexus/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "extension": ".ts",
      "size": 666,
      "name": "ResponseGeneratorFactory.d.ts",
      "directory": "nexus/dist/response-generators",
      "imports": [
        "./ResponseGenerator.interface.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "ResponseGeneratorFactory",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "77f5bc73adfa4e2f116a1f06b07ba057"
    },
    "nexus/dist/loaders/PersonalityRegistryLoader.js": {
      "path": "nexus/dist/loaders/PersonalityRegistryLoader.js",
      "full_path": "/workspaces/data-folder/nexus/dist/loaders/PersonalityRegistryLoader.js",
      "extension": ".js",
      "size": 18095,
      "name": "PersonalityRegistryLoader.js",
      "directory": "nexus/dist/loaders",
      "imports": [
        "fs/promises",
        "path",
        "url",
        "lru-cache",
        "../validation/personality-schema.js"
      ],
      "exports": [
        "PersonalityRegistryLoader"
      ],
      "functions": [
        {
          "name": "constructor",
          "params": "options = {}"
        },
        {
          "name": "execute",
          "params": "operation"
        },
        {
          "name": "if",
          "params": "this.state === 'OPEN'"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "onSuccess",
          "params": ""
        },
        {
          "name": "onFailure",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.failureCount >= this.failureThreshold"
        },
        {
          "name": "getState",
          "params": ""
        },
        {
          "name": "recordLoadTime",
          "params": "duration"
        },
        {
          "name": "if",
          "params": "this.loadTimes.length > 1000"
        },
        {
          "name": "recordError",
          "params": "personalityName"
        },
        {
          "name": "recordCacheHit",
          "params": ""
        },
        {
          "name": "recordCacheMiss",
          "params": ""
        },
        {
          "name": "getCacheHitRate",
          "params": ""
        },
        {
          "name": "getAverageLoadTime",
          "params": ""
        },
        {
          "name": "getErrorRate",
          "params": ""
        },
        {
          "name": "getPerformanceReport",
          "params": ""
        },
        {
          "name": "constructor",
          "params": "config = {}"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled"
        },
        {
          "name": "initialize",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.initialized"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverPersonalityFiles",
          "params": ""
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "discoverAndLoadPersonalities",
          "params": ""
        },
        {
          "name": "if",
          "params": "personalityFiles.length === 0"
        },
        {
          "name": "for",
          "params": "let i = 0; i < personalityFiles.length; i += batchSize"
        },
        {
          "name": "loadPersonalityWithCircuitBreaker",
          "params": "personalityName"
        },
        {
          "name": "loadPersonality",
          "params": "personalityName"
        },
        {
          "name": "if",
          "params": "stats.size > this.config.maxFileSize"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && this.cache"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "sanitizePersonalityName",
          "params": "personalityName"
        },
        {
          "name": "validatePersonalityData",
          "params": "data"
        },
        {
          "name": "if",
          "params": "!this.config.validationStrict"
        },
        {
          "name": "catch",
          "params": "error"
        },
        {
          "name": "if",
          "params": "this.config.validationStrict"
        },
        {
          "name": "getPersonalityRegistry",
          "params": ""
        },
        {
          "name": "getPersonality",
          "params": "name"
        },
        {
          "name": "getPersonalityTraits",
          "params": "name"
        },
        {
          "name": "getPersonalityPrinciples",
          "params": "name"
        },
        {
          "name": "analyzeRegistry",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "if",
          "params": "analysis.validationCompliance < 80"
        },
        {
          "name": "getAutoGenerationCapabilities",
          "params": ""
        },
        {
          "name": "for",
          "params": "const [name, data] of this.personalityRegistry"
        },
        {
          "name": "calculateAverageExpertise",
          "params": "traits"
        },
        {
          "name": "extractKnowledgeDomains",
          "params": "traits"
        },
        {
          "name": "if",
          "params": "trait.knowledgeDomains"
        },
        {
          "name": "healthCheck",
          "params": ""
        },
        {
          "name": "getHealthWarnings",
          "params": "analysis, metrics, registrySize"
        },
        {
          "name": "if",
          "params": "analysis.totalPersonalities < 5"
        },
        {
          "name": "if",
          "params": "metrics.errorRate > 10"
        },
        {
          "name": "if",
          "params": "this.config.cacheEnabled && metrics.cacheHitRate < 70"
        },
        {
          "name": "if",
          "params": "registrySize > 10 * 1024 * 1024"
        },
        {
          "name": "getRegistryStatus",
          "params": ""
        },
        {
          "name": "reset",
          "params": ""
        },
        {
          "name": "if",
          "params": "this.cache"
        }
      ],
      "classes": [
        {
          "name": "CircuitBreaker",
          "extends": null
        },
        {
          "name": "MetricsCollector",
          "extends": null
        },
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "8e7f64707bd4b1c8ad78f2bd8cdc178a"
    },
    "nexus/dist/loaders/PersonalityRegistryLoader.d.ts": {
      "path": "nexus/dist/loaders/PersonalityRegistryLoader.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/loaders/PersonalityRegistryLoader.d.ts",
      "extension": ".ts",
      "size": 1575,
      "name": "PersonalityRegistryLoader.d.ts",
      "directory": "nexus/dist/loaders",
      "imports": [
        "../types/personality.types.js"
      ],
      "exports": [],
      "functions": [],
      "classes": [
        {
          "name": "PersonalityRegistryLoader",
          "extends": null
        }
      ],
      "interfaces": [],
      "types": [],
      "content_hash": "34be01160e649d313d6099f76315bce1"
    },
    "nexus/dist/types/personality.types.d.ts": {
      "path": "nexus/dist/types/personality.types.d.ts",
      "full_path": "/workspaces/data-folder/nexus/dist/types/personality.types.d.ts",
      "extension": ".ts",
      "size": 3178,
      "name": "personality.types.d.ts",
      "directory": "nexus/dist/types",
      "imports": [],
      "exports": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "functions": [],
      "classes": [],
      "interfaces": [
        "PersonalityIdentity",
        "PersonalityIdeology",
        "CognitiveTrait",
        "PersonalityPrinciples",
        "PersonalityData",
        "CircuitBreakerConfig",
        "RegistryConfig",
        "RegistryMetrics",
        "HealthCheckResult",
        "RegistryAnalysis",
        "AutoGenerationCapability",
        "RegistryStatus"
      ],
      "types": [],
      "content_hash": "b7fb7c3d631146ea2e3670210b541f30"
    },
    "nexus/dist/types/personality.types.js": {
      "path": "nexus/dist/types/personality.types.js",
      "full_path": "/workspaces/data-folder/nexus/dist/types/personality.types.js",
      "extension": ".js",
      "size": 149,
      "name": "personality.types.js",
      "directory": "nexus/dist/types",
      "imports": [],
      "exports": [],
      "functions": [],
      "classes": [],
      "interfaces": [],
      "types": [],
      "content_hash": "3987dadc6ffe900b233c1e3f887c723e"
    }
  },
  "imports_graph": {
    "nexus2/nexus2/runtime/add-milestone-to-history.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus2/nexus2/runtime/bulk-create-personalities.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/test-runtime-loader.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus2/nexus2/runtime/test-all-45-personalities.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus2/nexus2/runtime/verify-circuit-breaker.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus2/nexus2/runtime/upgrade-personalities.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/generate-new-personalities.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus/Hunter.audit.ts": [
      "nexus2/nexus2/runtime/nexus/Hunter.policy.ts",
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/nexus-diagnose.mjs": [
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus2/nexus2/runtime/nexus/architect-designs-hunter.ts": [
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/test-paths.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus/Hunter.auditAgent.ts": [
      "nexus2/nexus2/runtime/nexus/Hunter.policy.ts",
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/Hunter.policy.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/NEXUS.test.ts": [
      "nexus2/nexus2/runtime/nexus/NEXUS.integration.ts",
      "nexus2/nexus2/runtime/nexus/Hunter.audit.ts",
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/NEXUS.integration.ts": [
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.ts"
    ],
    "nexus2/nexus2/runtime/nexus/response-generators/PersonalityRegistryLoader.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus/loaders/PersonalityRegistryLoader.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/dist/Hunter.policy.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/dist/Hunter.audit.js": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js",
      "nexus2/nexus2/runtime/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/dist/Hunter.auditAgent.js": [
      "nexus2/nexus2/runtime/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/dist/Hunter.policy.d.ts": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/dist/architect-designs-hunter.js": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/dist/Hunter.auditAgent.d.ts": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js",
      "nexus2/nexus2/runtime/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/dist/NEXUS.integration.d.ts": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/upgrade-personalities.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders/PersonalityRegistryLoader.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.js": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.js": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.d.ts": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.js": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.d.ts": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.d.ts": [
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js"
    ],
    "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexusv3-deploy/verify-circuit-breaker.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexusv3-deploy/dist/Hunter.policy.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexusv3-deploy/dist/Hunter.audit.js": [
      "nexusv3-deploy/dist/NEXUS.engine.js",
      "nexusv3-deploy/dist/Hunter.policy.js"
    ],
    "nexusv3-deploy/dist/Hunter.auditAgent.js": [
      "nexusv3-deploy/dist/Hunter.policy.js"
    ],
    "nexusv3-deploy/dist/Hunter.policy.d.ts": [
      "nexusv3-deploy/dist/NEXUS.engine.js"
    ],
    "nexusv3-deploy/dist/architect-designs-hunter.js": [
      "nexusv3-deploy/dist/NEXUS.engine.js"
    ],
    "nexusv3-deploy/dist/Hunter.auditAgent.d.ts": [
      "nexusv3-deploy/dist/NEXUS.engine.js",
      "nexusv3-deploy/dist/Hunter.policy.js"
    ],
    "nexusv3-deploy/dist/NEXUS.integration.d.ts": [
      "nexusv3-deploy/dist/NEXUS.engine.js"
    ],
    "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexusv3/verify-circuit-breaker.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexusv3/src/loaders/PersonalityRegistryLoader.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexusv3/dist/Hunter.policy.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexusv3/dist/Hunter.audit.js": [
      "nexusv3/dist/Hunter.policy.js",
      "nexusv3/dist/NEXUS.engine.js"
    ],
    "nexusv3/dist/Hunter.auditAgent.js": [
      "nexusv3/dist/Hunter.policy.js"
    ],
    "nexusv3/dist/Hunter.policy.d.ts": [
      "nexusv3/dist/NEXUS.engine.js"
    ],
    "nexusv3/dist/architect-designs-hunter.js": [
      "nexusv3/dist/NEXUS.engine.js"
    ],
    "nexusv3/dist/Hunter.auditAgent.d.ts": [
      "nexusv3/dist/Hunter.policy.js",
      "nexusv3/dist/NEXUS.engine.js"
    ],
    "nexusv3/dist/NEXUS.integration.d.ts": [
      "nexusv3/dist/NEXUS.engine.js"
    ],
    "nexusv3/dist/loaders/PersonalityRegistryLoader.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus/verify-circuit-breaker.mjs": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs",
      "nexus2/nexus2/runtime/nexus/fs-utils.ts"
    ],
    "nexus/src/loaders/PersonalityRegistryLoader.ts": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus/dist/Hunter.policy.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ],
    "nexus/dist/Hunter.audit.js": [
      "nexus/dist/Hunter.policy.js",
      "nexus/dist/NEXUS.engine.js"
    ],
    "nexus/dist/Hunter.auditAgent.js": [
      "nexus/dist/Hunter.policy.js"
    ],
    "nexus/dist/Hunter.policy.d.ts": [
      "nexus/dist/NEXUS.engine.js"
    ],
    "nexus/dist/architect-designs-hunter.js": [
      "nexus/dist/NEXUS.engine.js"
    ],
    "nexus/dist/Hunter.auditAgent.d.ts": [
      "nexus/dist/Hunter.policy.js",
      "nexus/dist/NEXUS.engine.js"
    ],
    "nexus/dist/NEXUS.integration.d.ts": [
      "nexus/dist/NEXUS.engine.js"
    ],
    "nexus/dist/loaders/PersonalityRegistryLoader.js": [
      "nexus2/nexus2/runtime/nexus/test-paths-simple.mjs"
    ]
  },
  "duplicates": {
    "46ea50ae60850648f9a14df05021cd2f": [
      "NEXUS_V3_MIGRATION_COMPLETE.md",
      "nexus/NEXUS_V3_MIGRATION_COMPLETE.md"
    ],
    "a914f352e6c4943959e939930bbb3b22": [
      "nexus2/nexus2/README.md",
      "nexusv3-deploy/docs/README.md",
      "nexusv3/docs/README.md",
      "nexus/docs/README.md"
    ],
    "eb7af6a27804e1a8d92fec78d9ade171": [
      "nexus2/nexus2/NEXUS2_README.md",
      "nexusv3-deploy/docs/NEXUS2_README.md",
      "nexusv3/docs/NEXUS2_README.md",
      "nexus/docs/NEXUS2_README.md"
    ],
    "bf28d07ac62abc04e9f8f0a3108bee5a": [
      "nexus2/nexus2/INDEX.md",
      "nexusv3-deploy/docs/INDEX.md",
      "nexusv3/docs/INDEX.md",
      "nexus/docs/INDEX.md"
    ],
    "da24d76f7be24406391122b281b28208": [
      "nexus2/nexus2/docs/NEXUS_PHASE1_COMPLETE.md",
      "nexusv3-deploy/docs/NEXUS_PHASE1_COMPLETE.md",
      "nexusv3/docs/NEXUS_PHASE1_COMPLETE.md",
      "nexus/docs/NEXUS_PHASE1_COMPLETE.md"
    ],
    "1c8ae08edd354ae59084f79215443f12": [
      "nexus2/nexus2/docs/NEXUS_PHASE3_COMPLETE.md",
      "nexusv3-deploy/docs/NEXUS_PHASE3_COMPLETE.md",
      "nexusv3/docs/NEXUS_PHASE3_COMPLETE.md",
      "nexus/docs/NEXUS_PHASE3_COMPLETE.md"
    ],
    "3523ad247f1a9fdf31b880dbce579ef1": [
      "nexus2/nexus2/docs/NEXUS_INITIAL_FINDINGS.md",
      "nexusv3-deploy/docs/NEXUS_INITIAL_FINDINGS.md",
      "nexusv3/docs/NEXUS_INITIAL_FINDINGS.md",
      "nexus/docs/NEXUS_INITIAL_FINDINGS.md"
    ],
    "713257fca6fc295991fdea4adfe6c163": [
      "nexus2/nexus2/docs/NEXUS_PHASE2_COMPLETE.md",
      "nexusv3-deploy/docs/NEXUS_PHASE2_COMPLETE.md",
      "nexusv3/docs/NEXUS_PHASE2_COMPLETE.md",
      "nexus/docs/NEXUS_PHASE2_COMPLETE.md"
    ],
    "b6bfcacbcc84c5172a8f1e76368763b1": [
      "nexus2/nexus2/docs/MANIFEST.md",
      "nexusv3-deploy/docs/MANIFEST.md",
      "nexusv3/docs/MANIFEST.md",
      "nexus/docs/MANIFEST.md"
    ],
    "9d21228f86df7ddc58c190ab39bfe0b3": [
      "nexus2/nexus2/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "nexusv3-deploy/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "nexusv3/docs/NEXUS_EXECUTIVE_SUMMARY.md",
      "nexus/docs/NEXUS_EXECUTIVE_SUMMARY.md"
    ],
    "ac18ac26631861f450705e3b5dd39b9a": [
      "nexus2/nexus2/docs/COMPREHENSIVE_REPORT.md",
      "nexusv3-deploy/docs/COMPREHENSIVE_REPORT.md",
      "nexusv3/docs/COMPREHENSIVE_REPORT.md",
      "nexus/docs/COMPREHENSIVE_REPORT.md"
    ],
    "523d7c12cdfeb34afc41129a0f19219a": [
      "nexus2/nexus2/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "nexusv3-deploy/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "nexusv3/docs/NEXUS_BRAIN_INVESTIGATION.md",
      "nexus/docs/NEXUS_BRAIN_INVESTIGATION.md"
    ],
    "e97ab60bd0264ec934e948efa3916d53": [
      "nexus2/nexus2/runtime/ENHANCEMENT_HISTORY_STATUS.md",
      "nexusv3-deploy/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "nexusv3/docs/ENHANCEMENT_HISTORY_STATUS.md",
      "nexus/docs/ENHANCEMENT_HISTORY_STATUS.md"
    ],
    "15a0296b917c242ddf26afff40da94d6": [
      "nexus2/nexus2/runtime/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "nexusv3-deploy/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "nexusv3/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md",
      "nexus/docs/18_PERSONALITIES_INSTALLATION_COMPLETE.md"
    ],
    "e48d314901979ee4f37d868f9d8cf9fa": [
      "nexus2/nexus2/runtime/verify-circuit-breaker.mjs",
      "nexusv3-deploy/verify-circuit-breaker.mjs",
      "nexusv3/verify-circuit-breaker.mjs",
      "nexus/verify-circuit-breaker.mjs"
    ],
    "54e3c393db600d158952be5631790a2f": [
      "nexus2/nexus2/runtime/install-nexus.sh",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/install-nexus.sh"
    ],
    "1d175e0361498ec13aa110a0e6cc8bf6": [
      "nexus2/nexus2/runtime/tsconfig.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/tsconfig.json"
    ],
    "3feb6a5686efac1ec3bc99396d40cf14": [
      "nexus2/nexus2/runtime/upgrade-personalities.mjs",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/upgrade-personalities.mjs"
    ],
    "db69125924d61eb38f311413f35f9c87": [
      "nexus2/nexus2/runtime/package.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/package.json"
    ],
    "b6c05018258cfa935c42033b2d4a7fad": [
      "nexus2/nexus2/runtime/test-nexus-v2.mjs",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/test-nexus-v2.mjs"
    ],
    "5585bd9bd50fd813a8f2ac2617e592af": [
      "nexus2/nexus2/runtime/docs/NEXUS_SELF_ASSESSMENT.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_SELF_ASSESSMENT.md"
    ],
    "e629c52aa139271c1b2824fa03fa3af2": [
      "nexus2/nexus2/runtime/docs/NEXUS_V2_COMPLETE.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_V2_COMPLETE.md"
    ],
    "ead625b8a7d8fb154c819ffaf7663efd": [
      "nexus2/nexus2/runtime/docs/NEXUS_COMPLETE_JOURNEY.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_COMPLETE_JOURNEY.md"
    ],
    "d7c09e90ce86620184b1aec03373aa1a": [
      "nexus2/nexus2/runtime/docs/NEXUS_ARCHITECTURE_ANALYSIS.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ARCHITECTURE_ANALYSIS.md"
    ],
    "9d4b619956a26101a9b784d106a8328e": [
      "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_REALITY_CHECK.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_REALITY_CHECK.md"
    ],
    "ceee948c94cf96b355370e94d0866ece": [
      "nexus2/nexus2/runtime/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_STRUCTURAL_ANALYSIS.md"
    ],
    "e98b1816bd2c0e9c5e19b78537bfaf7a": [
      "nexus2/nexus2/runtime/docs/PYTHONISTA_INTEGRATION_SUCCESS.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/PYTHONISTA_INTEGRATION_SUCCESS.md"
    ],
    "8c6eccb6ad2a2748b2ad08d79b6c9794": [
      "nexus2/nexus2/runtime/docs/NEXUS_ENGINE_V2_SUCCESS.md",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/docs/NEXUS_ENGINE_V2_SUCCESS.md"
    ],
    "560e19a206b6cc23f88830c2bd3344e2": [
      "nexus2/nexus2/runtime/profiles/performancehawk.json",
      "nexusv3-deploy/profiles/performancehawk.json",
      "nexusv3/profiles/performancehawk.json",
      "nexus/profiles/performancehawk.json"
    ],
    "847a4ba89fcaaab4fdfa06240bdb85f4": [
      "nexus2/nexus2/runtime/profiles/narrative.json",
      "nexusv3-deploy/profiles/narrative.json",
      "nexusv3/profiles/narrative.json",
      "nexus/profiles/narrative.json"
    ],
    "14a33e488a3979f52c312daa1fd98d43": [
      "nexus2/nexus2/runtime/profiles/daedalus.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/daedalus.json",
      "nexusv3-deploy/profiles/daedalus.json",
      "nexusv3/profiles/daedalus.json",
      "nexus/profiles/daedalus.json"
    ],
    "3329dcf7c3e9264ff21737700588df2b": [
      "nexus2/nexus2/runtime/profiles/pythonista.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pythonista.json",
      "nexusv3-deploy/profiles/pythonista.json",
      "nexusv3/profiles/pythonista.json",
      "nexus/profiles/pythonista.json"
    ],
    "91851e21c10b52d454ab234952a1935c": [
      "nexus2/nexus2/runtime/profiles/tokenmaster.json",
      "nexusv3-deploy/profiles/tokenmaster.json",
      "nexusv3/profiles/tokenmaster.json",
      "nexus/profiles/tokenmaster.json"
    ],
    "92411b76d7678ae86a53e803d3d1fc3e": [
      "nexus2/nexus2/runtime/profiles/ethicsguard.json",
      "nexusv3-deploy/profiles/ethicsguard.json",
      "nexusv3/profiles/ethicsguard.json",
      "nexus/profiles/ethicsguard.json"
    ],
    "4b7f5d7f2297de321c193be83ff4b0c9": [
      "nexus2/nexus2/runtime/profiles/forge.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/forge.json",
      "nexusv3-deploy/profiles/forge.json",
      "nexusv3/profiles/forge.json",
      "nexus/profiles/forge.json"
    ],
    "f6afa5eb5125fd474eb81aeb7dca0738": [
      "nexus2/nexus2/runtime/profiles/touch.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/touch.json",
      "nexusv3-deploy/profiles/touch.json",
      "nexusv3/profiles/touch.json",
      "nexus/profiles/touch.json"
    ],
    "4028087abf549aff86ad23e20f1ee2fe": [
      "nexus2/nexus2/runtime/profiles/promptcrafter.json",
      "nexusv3-deploy/profiles/promptcrafter.json",
      "nexusv3/profiles/promptcrafter.json",
      "nexus/profiles/promptcrafter.json"
    ],
    "5d6dc13aa47118292b008e2fd254e2d8": [
      "nexus2/nexus2/runtime/profiles/finetuner.json",
      "nexusv3-deploy/profiles/finetuner.json",
      "nexusv3/profiles/finetuner.json",
      "nexus/profiles/finetuner.json"
    ],
    "6de895152d3f6b12a890e8a324cec8e6": [
      "nexus2/nexus2/runtime/profiles/chromatic.json",
      "nexusv3-deploy/profiles/chromatic.json",
      "nexusv3/profiles/chromatic.json",
      "nexus/profiles/chromatic.json"
    ],
    "df0540de33a62868f53d3fa5a84bcb29": [
      "nexus2/nexus2/runtime/profiles/visualarchitect.json",
      "nexusv3-deploy/profiles/visualarchitect.json",
      "nexusv3/profiles/visualarchitect.json",
      "nexus/profiles/visualarchitect.json"
    ],
    "6bb15526734c2dc006c0233c8c52cf40": [
      "nexus2/nexus2/runtime/profiles/chorus.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/chorus.json",
      "nexusv3-deploy/profiles/chorus.json",
      "nexusv3/profiles/chorus.json",
      "nexus/profiles/chorus.json"
    ],
    "a0891ace2950907d74b805b201e6d0c6": [
      "nexus2/nexus2/runtime/profiles/aria.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/aria.json",
      "nexusv3-deploy/profiles/aria.json",
      "nexusv3/profiles/aria.json",
      "nexus/profiles/aria.json"
    ],
    "ce82ac95db8544631ac87c64ef134555": [
      "nexus2/nexus2/runtime/profiles/route-master.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/route-master.json",
      "nexusv3-deploy/profiles/route-master.json",
      "nexusv3/profiles/route-master.json",
      "nexus/profiles/route-master.json"
    ],
    "febbfd0308d7b4c85c6204084fb14540": [
      "nexus2/nexus2/runtime/profiles/atlas.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas.json",
      "nexusv3-deploy/profiles/atlas.json",
      "nexusv3/profiles/atlas.json",
      "nexus/profiles/atlas.json"
    ],
    "6467c4d6ca191ca2e3a169e88c2c9cf4": [
      "nexus2/nexus2/runtime/profiles/nexus-api.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/nexus-api.json",
      "nexusv3-deploy/profiles/nexus-api.json",
      "nexusv3/profiles/nexus-api.json",
      "nexus/profiles/nexus-api.json"
    ],
    "c5d2d68b439dbd44a309a4a4c3fd1b1a": [
      "nexus2/nexus2/runtime/profiles/visionary.json",
      "nexusv3-deploy/profiles/visionary.json",
      "nexusv3/profiles/visionary.json",
      "nexus/profiles/visionary.json"
    ],
    "40e23b20dd9ce11945c1c15954e092cf": [
      "nexus2/nexus2/runtime/profiles/promptsmith.json",
      "nexusv3-deploy/profiles/promptsmith.json",
      "nexusv3/profiles/promptsmith.json",
      "nexus/profiles/promptsmith.json"
    ],
    "8c831e104dafcb25fb54033b9447be3e": [
      "nexus2/nexus2/runtime/profiles/personality-architect.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/personality-architect.json",
      "nexusv3-deploy/profiles/personality-architect.json",
      "nexusv3/profiles/personality-architect.json",
      "nexus/profiles/personality-architect.json"
    ],
    "94af82c3b1e8a46461019e0c832cec5b": [
      "nexus2/nexus2/runtime/profiles/quantumlogic.json",
      "nexusv3-deploy/profiles/quantumlogic.json",
      "nexusv3/profiles/quantumlogic.json",
      "nexus/profiles/quantumlogic.json"
    ],
    "67edd90d6b894f7257dcb839fd07011a": [
      "nexus2/nexus2/runtime/profiles/photorealist.json",
      "nexusv3-deploy/profiles/photorealist.json",
      "nexusv3/profiles/photorealist.json",
      "nexus/profiles/photorealist.json"
    ],
    "64f631a24a71fede8bfff75d87a47664": [
      "nexus2/nexus2/runtime/profiles/flash.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/flash.json",
      "nexusv3-deploy/profiles/flash.json",
      "nexusv3/profiles/flash.json",
      "nexus/profiles/flash.json"
    ],
    "987af6d5f8d21ee092ec3f597d80833b": [
      "nexus2/nexus2/runtime/profiles/muse.json",
      "nexusv3-deploy/profiles/muse.json",
      "nexusv3/profiles/muse.json",
      "nexus/profiles/muse.json"
    ],
    "740a873cde32c352eba322eaaf9cb984": [
      "nexus2/nexus2/runtime/profiles/localize.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/localize.json",
      "nexusv3-deploy/profiles/localize.json",
      "nexusv3/profiles/localize.json",
      "nexus/profiles/localize.json"
    ],
    "0856aff24843412cd60ecdf38dde0df0": [
      "nexus2/nexus2/runtime/profiles/stellar.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/stellar.json",
      "nexusv3-deploy/profiles/stellar.json",
      "nexusv3/profiles/stellar.json",
      "nexus/profiles/stellar.json"
    ],
    "a9aadd6dea8fa6d00159a7ff9d8e7dea": [
      "nexus2/nexus2/runtime/profiles/datawhisperer.json",
      "nexusv3-deploy/profiles/datawhisperer.json",
      "nexusv3/profiles/datawhisperer.json",
      "nexus/profiles/datawhisperer.json"
    ],
    "20e48e30717ecb7517bc2d32802cad21": [
      "nexus2/nexus2/runtime/profiles/integrationmaestro.json",
      "nexusv3-deploy/profiles/integrationmaestro.json",
      "nexusv3/profiles/integrationmaestro.json",
      "nexus/profiles/integrationmaestro.json"
    ],
    "cbfb1b941d5be5e7e88077f5c12009ae": [
      "nexus2/nexus2/runtime/profiles/manifest.json",
      "nexusv3-deploy/profiles/manifest.json",
      "nexusv3/profiles/manifest.json",
      "nexus/profiles/manifest.json"
    ],
    "b069922ec56d090315094b3b960dffc6": [
      "nexus2/nexus2/runtime/profiles/sage.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/sage.json",
      "nexusv3-deploy/profiles/sage.json",
      "nexusv3/profiles/sage.json",
      "nexus/profiles/sage.json"
    ],
    "2e72d105366abab1d516ff8dbf565f0b": [
      "nexus2/nexus2/runtime/profiles/styleforge.json",
      "nexusv3-deploy/profiles/styleforge.json",
      "nexusv3/profiles/styleforge.json",
      "nexus/profiles/styleforge.json"
    ],
    "02efeb7124ece5dcaa4ccd5fb0b376e5": [
      "nexus2/nexus2/runtime/profiles/pulsewriter.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulsewriter.json",
      "nexusv3-deploy/profiles/pulsewriter.json",
      "nexusv3/profiles/pulsewriter.json",
      "nexus/profiles/pulsewriter.json"
    ],
    "0b7dfc3dbfb1b8043e1489304657c457": [
      "nexus2/nexus2/runtime/profiles/guardian.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/guardian.json",
      "nexusv3-deploy/profiles/guardian.json",
      "nexusv3/profiles/guardian.json",
      "nexus/profiles/guardian.json"
    ],
    "6331eec909a3497d87b6846ec33fafff": [
      "nexus2/nexus2/runtime/profiles/codex-liaison.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/codex-liaison.json",
      "nexusv3-deploy/profiles/codex-liaison.json",
      "nexusv3/profiles/codex-liaison.json",
      "nexus/profiles/codex-liaison.json"
    ],
    "32cb141e3c66b92889dafd2d0f70d396": [
      "nexus2/nexus2/runtime/profiles/atlas-geo.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/atlas-geo.json",
      "nexusv3-deploy/profiles/atlas-geo.json",
      "nexusv3/profiles/atlas-geo.json",
      "nexus/profiles/atlas-geo.json"
    ],
    "d0be09ce25e8a6758f67e81bd136454b": [
      "nexus2/nexus2/runtime/profiles/cipher.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/cipher.json",
      "nexusv3-deploy/profiles/cipher.json",
      "nexusv3/profiles/cipher.json",
      "nexus/profiles/cipher.json"
    ],
    "ef02b173a124cfa50a837bfab2de68d9": [
      "nexus2/nexus2/runtime/profiles/hunter.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/hunter.json",
      "nexusv3-deploy/profiles/hunter.json",
      "nexusv3/profiles/hunter.json",
      "nexus/profiles/hunter.json"
    ],
    "111ca59402e761028aff311c9834092c": [
      "nexus2/nexus2/runtime/profiles/pulse.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/pulse.json",
      "nexusv3-deploy/profiles/pulse.json",
      "nexusv3/profiles/pulse.json",
      "nexus/profiles/pulse.json"
    ],
    "531282cb1d4f05931b97b11e26ecd49e": [
      "nexus2/nexus2/runtime/profiles/scribe.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/scribe.json",
      "nexusv3-deploy/profiles/scribe.json",
      "nexusv3/profiles/scribe.json",
      "nexus/profiles/scribe.json"
    ],
    "a81c67fd594be4d38a38d30ce0aa0f9c": [
      "nexus2/nexus2/runtime/profiles/wordsmith.json",
      "nexusv3-deploy/profiles/wordsmith.json",
      "nexusv3/profiles/wordsmith.json",
      "nexus/profiles/wordsmith.json"
    ],
    "863ed6baed65b544d78007aff0ddc08f": [
      "nexus2/nexus2/runtime/profiles/chainarchitect.json",
      "nexusv3-deploy/profiles/chainarchitect.json",
      "nexusv3/profiles/chainarchitect.json",
      "nexus/profiles/chainarchitect.json"
    ],
    "ba78a34ea60ec225443e389e2ed23455": [
      "nexus2/nexus2/runtime/profiles/property-sage.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/property-sage.json",
      "nexusv3-deploy/profiles/property-sage.json",
      "nexusv3/profiles/property-sage.json",
      "nexus/profiles/property-sage.json"
    ],
    "16657dc4e56644991805c610821e6681": [
      "nexus2/nexus2/runtime/profiles/artdirector.json",
      "nexusv3-deploy/profiles/artdirector.json",
      "nexusv3/profiles/artdirector.json",
      "nexus/profiles/artdirector.json"
    ],
    "6c235c4989bee997d84c0c6dd0a87032": [
      "nexus2/nexus2/runtime/profiles/symphony.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/profiles/symphony.json",
      "nexusv3-deploy/profiles/symphony.json",
      "nexusv3/profiles/symphony.json",
      "nexus/profiles/symphony.json"
    ],
    "32742d9dd85e59316dab13096708826b": [
      "nexus2/nexus2/runtime/profiles/contextweaver.json",
      "nexusv3-deploy/profiles/contextweaver.json",
      "nexusv3/profiles/contextweaver.json",
      "nexus/profiles/contextweaver.json"
    ],
    "3784e9fec13b9698499cc864ad329f61": [
      "nexus2/nexus2/runtime/nexus/NEXUS.engine.v2.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/NEXUS.engine.v2.ts"
    ],
    "1b27cf31f7aa03c50b391e020190254c": [
      "nexus2/nexus2/runtime/nexus/nexus-runtime.v2.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/nexus-runtime.v2.ts"
    ],
    "542b62afd49682ee109de6915eb2efc9": [
      "nexus2/nexus2/runtime/nexus/validation/personality-schema.ts",
      "nexusv3/src/validation/personality-schema.ts",
      "nexus/src/validation/personality-schema.ts"
    ],
    "e2e91f075840f67a189f5541b7c5badb": [
      "nexus2/nexus2/runtime/nexus/consciousness/pattern-evolution-engine.json",
      "nexus2/nexus2/runtime/dist/consciousness/pattern-evolution-engine.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/pattern-evolution-engine.json",
      "nexusv3-deploy/dist/consciousness/pattern-evolution-engine.json",
      "nexusv3/dist/consciousness/pattern-evolution-engine.json",
      "nexus/dist/consciousness/pattern-evolution-engine.json"
    ],
    "0ef7124a9af46a492cdbb37128af46fb": [
      "nexus2/nexus2/runtime/nexus/consciousness/problem-decomposition.json",
      "nexus2/nexus2/runtime/dist/consciousness/problem-decomposition.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/problem-decomposition.json",
      "nexusv3-deploy/dist/consciousness/problem-decomposition.json",
      "nexusv3/dist/consciousness/problem-decomposition.json",
      "nexus/dist/consciousness/problem-decomposition.json"
    ],
    "6631956e81ff5c2882d2f8401b4d35f1": [
      "nexus2/nexus2/runtime/nexus/consciousness/systems-thinking.json",
      "nexus2/nexus2/runtime/dist/consciousness/systems-thinking.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/systems-thinking.json",
      "nexusv3-deploy/dist/consciousness/systems-thinking.json",
      "nexusv3/dist/consciousness/systems-thinking.json",
      "nexus/dist/consciousness/systems-thinking.json"
    ],
    "b61213798607b2bddbdb6199a29895c2": [
      "nexus2/nexus2/runtime/nexus/consciousness/workflow-efficiency.json",
      "nexus2/nexus2/runtime/dist/consciousness/workflow-efficiency.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/workflow-efficiency.json",
      "nexusv3-deploy/dist/consciousness/workflow-efficiency.json",
      "nexusv3/dist/consciousness/workflow-efficiency.json",
      "nexus/dist/consciousness/workflow-efficiency.json"
    ],
    "7f8f2c95d970534ee603d38c166dfaff": [
      "nexus2/nexus2/runtime/nexus/loaders/PersonalityRegistryLoader.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/loaders/PersonalityRegistryLoader.ts",
      "nexusv3/src/loaders/PersonalityRegistryLoader.ts",
      "nexus/src/loaders/PersonalityRegistryLoader.ts"
    ],
    "b36a31603f99b46d9187aa5129708e83": [
      "nexus2/nexus2/runtime/nexus/types/personality.types.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/nexus/types/personality.types.ts",
      "nexusv3/src/types/personality.types.ts",
      "nexus/src/types/personality.types.ts"
    ],
    "ad3c20e4112c0c7d6128c9c709e15b83": [
      "nexus2/nexus2/runtime/dist/nexus-runtime.v2.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.d.ts",
      "nexusv3-deploy/dist/nexus-runtime.v2.d.ts",
      "nexusv3/dist/nexus-runtime.v2.d.ts",
      "nexus/dist/nexus-runtime.v2.d.ts"
    ],
    "6800fcbcb74de7fe28a7ae7473a041b7": [
      "nexus2/nexus2/runtime/dist/fs-utils.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.js",
      "nexusv3-deploy/dist/fs-utils.js",
      "nexusv3/dist/fs-utils.js",
      "nexus/dist/fs-utils.js"
    ],
    "390fcc1d2d2694d791069946b4f3ee60": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.d.ts",
      "nexusv3-deploy/dist/NEXUS.engine.d.ts",
      "nexusv3/dist/NEXUS.engine.d.ts",
      "nexus/dist/NEXUS.engine.d.ts"
    ],
    "31bad4852404cd4fca601a5db49a06de": [
      "nexus2/nexus2/runtime/dist/Hunter.policy.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.js",
      "nexusv3-deploy/dist/Hunter.policy.js",
      "nexusv3/dist/Hunter.policy.js",
      "nexus/dist/Hunter.policy.js"
    ],
    "3ff47cddc85cef1a0dfabb39e9f0d38d": [
      "nexus2/nexus2/runtime/dist/personality-architect-integration-test.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.d.ts",
      "nexusv3-deploy/dist/personality-architect-integration-test.d.ts",
      "nexusv3/dist/personality-architect-integration-test.d.ts",
      "nexus/dist/personality-architect-integration-test.d.ts"
    ],
    "8764f7d1703cfdb98997a64ec9eb56c6": [
      "nexus2/nexus2/runtime/dist/Hunter.audit.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.js",
      "nexusv3-deploy/dist/Hunter.audit.js",
      "nexusv3/dist/Hunter.audit.js",
      "nexus/dist/Hunter.audit.js"
    ],
    "65e279311b3998962ef02615b673179a": [
      "nexus2/nexus2/runtime/dist/Hunter.auditAgent.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.js",
      "nexusv3-deploy/dist/Hunter.auditAgent.js",
      "nexusv3/dist/Hunter.auditAgent.js",
      "nexus/dist/Hunter.auditAgent.js"
    ],
    "b0e412c62511050d1e81e85f505d1968": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.d.ts",
      "nexusv3-deploy/dist/NEXUS.engine.v2.d.ts",
      "nexus/dist/NEXUS.engine.v2.d.ts"
    ],
    "97ea153dda65475bdf2cb746848d1b10": [
      "nexus2/nexus2/runtime/dist/fs-utils.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/fs-utils.d.ts",
      "nexusv3-deploy/dist/fs-utils.d.ts",
      "nexusv3/dist/fs-utils.d.ts",
      "nexus/dist/fs-utils.d.ts"
    ],
    "32f0f84a23f64cfd583f52f05786031d": [
      "nexus2/nexus2/runtime/dist/run-hunter-audit.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.d.ts",
      "nexusv3-deploy/dist/run-hunter-audit.d.ts",
      "nexusv3/dist/run-hunter-audit.d.ts",
      "nexus/dist/run-hunter-audit.d.ts"
    ],
    "93388b2f47828895d224c48e4772a0a8": [
      "nexus2/nexus2/runtime/dist/Hunter.policy.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.policy.d.ts",
      "nexusv3-deploy/dist/Hunter.policy.d.ts",
      "nexusv3/dist/Hunter.policy.d.ts",
      "nexus/dist/Hunter.policy.d.ts"
    ],
    "d44b1cb45d6c1176ca7ea3f61f7e7eff": [
      "nexus2/nexus2/runtime/dist/systemic-scanner.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.js",
      "nexusv3-deploy/dist/systemic-scanner.js",
      "nexusv3/dist/systemic-scanner.js",
      "nexus/dist/systemic-scanner.js"
    ],
    "feb71b374e9e5327939d2af95275d1ee": [
      "nexus2/nexus2/runtime/dist/run-hunter-audit.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/run-hunter-audit.js",
      "nexusv3-deploy/dist/run-hunter-audit.js",
      "nexusv3/dist/run-hunter-audit.js",
      "nexus/dist/run-hunter-audit.js"
    ],
    "7fc0eeef65c57f8e0361840b0786b437": [
      "nexus2/nexus2/runtime/dist/architect-designs-hunter.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.d.ts",
      "nexusv3-deploy/dist/architect-designs-hunter.d.ts",
      "nexusv3/dist/architect-designs-hunter.d.ts",
      "nexus/dist/architect-designs-hunter.d.ts"
    ],
    "d6e9bc7c3c3e9701b2b73d640c964327": [
      "nexus2/nexus2/runtime/dist/architect-designs-hunter.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/architect-designs-hunter.js",
      "nexusv3-deploy/dist/architect-designs-hunter.js",
      "nexusv3/dist/architect-designs-hunter.js",
      "nexus/dist/architect-designs-hunter.js"
    ],
    "8a2aa855131bb01182aa35e82fd955a4": [
      "nexus2/nexus2/runtime/dist/Hunter.audit.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.audit.d.ts",
      "nexusv3-deploy/dist/Hunter.audit.d.ts",
      "nexusv3/dist/Hunter.audit.d.ts",
      "nexus/dist/Hunter.audit.d.ts"
    ],
    "adeee293e89b8225127ceac3f4b7575d": [
      "nexus2/nexus2/runtime/dist/nexus-integration.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.d.ts",
      "nexusv3-deploy/dist/nexus-integration.d.ts",
      "nexusv3/dist/nexus-integration.d.ts",
      "nexus/dist/nexus-integration.d.ts"
    ],
    "3cd49914c210370fcd377295d5898806": [
      "nexus2/nexus2/runtime/dist/types.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.js",
      "nexusv3-deploy/dist/types.js",
      "nexusv3/dist/types.js",
      "nexus/dist/types.js"
    ],
    "547958c8b24006759ff78605b6ea3c01": [
      "nexus2/nexus2/runtime/dist/guardian-orchestrator.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.js",
      "nexusv3-deploy/dist/guardian-orchestrator.js",
      "nexusv3/dist/guardian-orchestrator.js",
      "nexus/dist/guardian-orchestrator.js"
    ],
    "aea3eabb64c61238c0e7ddd2ad50554d": [
      "nexus2/nexus2/runtime/dist/personality-architect-integration-test.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/personality-architect-integration-test.js",
      "nexusv3-deploy/dist/personality-architect-integration-test.js",
      "nexusv3/dist/personality-architect-integration-test.js",
      "nexus/dist/personality-architect-integration-test.js"
    ],
    "28ac588fcd885d4b94bf01483a5aaa7f": [
      "nexus2/nexus2/runtime/dist/nexus-runtime.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.d.ts",
      "nexusv3-deploy/dist/nexus-runtime.d.ts",
      "nexusv3/dist/nexus-runtime.d.ts",
      "nexus/dist/nexus-runtime.d.ts"
    ],
    "22a0c9c5cdf9937fe04564fc4b0e2863": [
      "nexus2/nexus2/runtime/dist/demo-personality-loader.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.js",
      "nexusv3-deploy/dist/demo-personality-loader.js",
      "nexusv3/dist/demo-personality-loader.js",
      "nexus/dist/demo-personality-loader.js"
    ],
    "486aa789ec167b1e115eadf059b0c325": [
      "nexus2/nexus2/runtime/dist/Hunter.auditAgent.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/Hunter.auditAgent.d.ts",
      "nexusv3-deploy/dist/Hunter.auditAgent.d.ts",
      "nexusv3/dist/Hunter.auditAgent.d.ts",
      "nexus/dist/Hunter.auditAgent.d.ts"
    ],
    "e9e141ff56aa8c79100e6a34ea0e7779": [
      "nexus2/nexus2/runtime/dist/types.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types.d.ts",
      "nexusv3-deploy/dist/types.d.ts",
      "nexusv3/dist/types.d.ts",
      "nexus/dist/types.d.ts"
    ],
    "1ea2b738235b6ae68f147be8516cb1fe": [
      "nexus2/nexus2/runtime/dist/nexus-integration.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-integration.js",
      "nexusv3-deploy/dist/nexus-integration.js",
      "nexusv3/dist/nexus-integration.js",
      "nexus/dist/nexus-integration.js"
    ],
    "7536f4a900e0f9da1e5cfd230069c685": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.v2.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.v2.js",
      "nexusv3-deploy/dist/NEXUS.engine.v2.js",
      "nexus/dist/NEXUS.engine.v2.js"
    ],
    "27307d7f9413751ef4e41526fcadf8b4": [
      "nexus2/nexus2/runtime/dist/guardian-orchestrator.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/guardian-orchestrator.d.ts",
      "nexusv3-deploy/dist/guardian-orchestrator.d.ts",
      "nexusv3/dist/guardian-orchestrator.d.ts",
      "nexus/dist/guardian-orchestrator.d.ts"
    ],
    "41b01be938c8e0bae0e8718af03bc18e": [
      "nexus2/nexus2/runtime/dist/demo-personality-loader.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/demo-personality-loader.d.ts",
      "nexusv3-deploy/dist/demo-personality-loader.d.ts",
      "nexusv3/dist/demo-personality-loader.d.ts",
      "nexus/dist/demo-personality-loader.d.ts"
    ],
    "bc7e33353d2d8a562d22d46fc6ecbfec": [
      "nexus2/nexus2/runtime/dist/nexus-bridge.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.d.ts",
      "nexusv3-deploy/dist/nexus-bridge.d.ts",
      "nexusv3/dist/nexus-bridge.d.ts",
      "nexus/dist/nexus-bridge.d.ts"
    ],
    "ae66ebbd24c42a2425f4d4dde36d4a17": [
      "nexus2/nexus2/runtime/dist/nexus-runtime.v2.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.v2.js",
      "nexusv3-deploy/dist/nexus-runtime.v2.js",
      "nexus/dist/nexus-runtime.v2.js"
    ],
    "05a6e06544f56001473be2e240aad99c": [
      "nexus2/nexus2/runtime/dist/systemic-scanner.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/systemic-scanner.d.ts",
      "nexusv3-deploy/dist/systemic-scanner.d.ts",
      "nexusv3/dist/systemic-scanner.d.ts",
      "nexus/dist/systemic-scanner.d.ts"
    ],
    "0ee5239efdef80f0793b230a47207b67": [
      "nexus2/nexus2/runtime/dist/nexus-runtime.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-runtime.js",
      "nexusv3-deploy/dist/nexus-runtime.js",
      "nexusv3/dist/nexus-runtime.js",
      "nexus/dist/nexus-runtime.js"
    ],
    "f0b5e5b94e84e4d6db30e6efa0c6d7ed": [
      "nexus2/nexus2/runtime/dist/nexus-trait-bridge.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.d.ts",
      "nexusv3-deploy/dist/nexus-trait-bridge.d.ts",
      "nexusv3/dist/nexus-trait-bridge.d.ts",
      "nexus/dist/nexus-trait-bridge.d.ts"
    ],
    "e371f712eef91f7d5bf7a3a4a744307a": [
      "nexus2/nexus2/runtime/dist/nexus-trait-bridge.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-trait-bridge.js",
      "nexusv3-deploy/dist/nexus-trait-bridge.js",
      "nexusv3/dist/nexus-trait-bridge.js",
      "nexus/dist/nexus-trait-bridge.js"
    ],
    "26914bfa2958775b165a216e7ee62230": [
      "nexus2/nexus2/runtime/dist/NEXUS.integration.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.js",
      "nexusv3-deploy/dist/NEXUS.integration.js",
      "nexusv3/dist/NEXUS.integration.js",
      "nexus/dist/NEXUS.integration.js"
    ],
    "4a4cfa5c8a1410cae7ef8e67289083d3": [
      "nexus2/nexus2/runtime/dist/nexus-bridge.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/nexus-bridge.js",
      "nexusv3-deploy/dist/nexus-bridge.js",
      "nexusv3/dist/nexus-bridge.js",
      "nexus/dist/nexus-bridge.js"
    ],
    "35f999f8502cabc62921ff8412f24b35": [
      "nexus2/nexus2/runtime/dist/NEXUS.engine.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.engine.js",
      "nexusv3-deploy/dist/NEXUS.engine.js",
      "nexusv3/dist/NEXUS.engine.js",
      "nexus/dist/NEXUS.engine.js"
    ],
    "66ca9313b23f323e5124b6ccd296065a": [
      "nexus2/nexus2/runtime/dist/NEXUS.integration.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/NEXUS.integration.d.ts",
      "nexusv3-deploy/dist/NEXUS.integration.d.ts",
      "nexusv3/dist/NEXUS.integration.d.ts",
      "nexus/dist/NEXUS.integration.d.ts"
    ],
    "5e78cd40b6de7ae59fd5e25616aceff3": [
      "nexus2/nexus2/runtime/dist/validation/personality-schema.js",
      "nexusv3-deploy/dist/validation/personality-schema.js",
      "nexusv3/dist/validation/personality-schema.js",
      "nexus/dist/validation/personality-schema.js"
    ],
    "70008cf4095252bb665c8b501f6c9a61": [
      "nexus2/nexus2/runtime/dist/validation/personality-schema.d.ts",
      "nexusv3-deploy/dist/validation/personality-schema.d.ts",
      "nexusv3/dist/validation/personality-schema.d.ts",
      "nexus/dist/validation/personality-schema.d.ts"
    ],
    "a5b4f8b0752681077561c7cede2921e0": [
      "nexus2/nexus2/runtime/dist/consciousness/breakthrough-moments.json",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/consciousness/breakthrough-moments.json",
      "nexusv3-deploy/dist/consciousness/breakthrough-moments.json",
      "nexusv3/dist/consciousness/breakthrough-moments.json",
      "nexus/dist/consciousness/breakthrough-moments.json"
    ],
    "20f0b8db09ef32cedea65385e692f5a1": [
      "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.js",
      "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.js",
      "nexusv3/dist/response-generators/ResponseGeneratorFactory.js",
      "nexus/dist/response-generators/ResponseGeneratorFactory.js"
    ],
    "1df4b5752849720fe0cc93062f4f9457": [
      "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.d.ts",
      "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.d.ts",
      "nexusv3/dist/response-generators/ResponseGenerator.interface.d.ts",
      "nexus/dist/response-generators/ResponseGenerator.interface.d.ts"
    ],
    "9a9f0ec0d8ef2c44f4ef2dead1ffa84f": [
      "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "nexusv3/dist/response-generators/DaedalusResponseGenerator.d.ts",
      "nexus/dist/response-generators/DaedalusResponseGenerator.d.ts"
    ],
    "7894d51b04dc0d6cd363458ff1bacc51": [
      "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.js",
      "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.js",
      "nexusv3/dist/response-generators/HunterResponseGenerator.js",
      "nexus/dist/response-generators/HunterResponseGenerator.js"
    ],
    "682e52ca942daf80bfe565e271c57ed4": [
      "nexus2/nexus2/runtime/dist/response-generators/HunterResponseGenerator.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/HunterResponseGenerator.d.ts",
      "nexusv3-deploy/dist/response-generators/HunterResponseGenerator.d.ts",
      "nexusv3/dist/response-generators/HunterResponseGenerator.d.ts",
      "nexus/dist/response-generators/HunterResponseGenerator.d.ts"
    ],
    "5d29da9e0354b77b999b8f2c7f0aaf82": [
      "nexus2/nexus2/runtime/dist/response-generators/ResponseGenerator.interface.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGenerator.interface.js",
      "nexusv3-deploy/dist/response-generators/ResponseGenerator.interface.js",
      "nexusv3/dist/response-generators/ResponseGenerator.interface.js",
      "nexus/dist/response-generators/ResponseGenerator.interface.js"
    ],
    "d58f0988dc2b5f24caf82e241dd9a8ab": [
      "nexus2/nexus2/runtime/dist/response-generators/DaedalusResponseGenerator.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/DaedalusResponseGenerator.js",
      "nexusv3-deploy/dist/response-generators/DaedalusResponseGenerator.js",
      "nexusv3/dist/response-generators/DaedalusResponseGenerator.js",
      "nexus/dist/response-generators/DaedalusResponseGenerator.js"
    ],
    "77f5bc73adfa4e2f116a1f06b07ba057": [
      "nexus2/nexus2/runtime/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "nexusv3-deploy/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "nexusv3/dist/response-generators/ResponseGeneratorFactory.d.ts",
      "nexus/dist/response-generators/ResponseGeneratorFactory.d.ts"
    ],
    "8e7f64707bd4b1c8ad78f2bd8cdc178a": [
      "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.js",
      "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.js",
      "nexusv3/dist/loaders/PersonalityRegistryLoader.js",
      "nexus/dist/loaders/PersonalityRegistryLoader.js"
    ],
    "34be01160e649d313d6099f76315bce1": [
      "nexus2/nexus2/runtime/dist/loaders/PersonalityRegistryLoader.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/loaders/PersonalityRegistryLoader.d.ts",
      "nexusv3-deploy/dist/loaders/PersonalityRegistryLoader.d.ts",
      "nexusv3/dist/loaders/PersonalityRegistryLoader.d.ts",
      "nexus/dist/loaders/PersonalityRegistryLoader.d.ts"
    ],
    "b7fb7c3d631146ea2e3670210b541f30": [
      "nexus2/nexus2/runtime/dist/types/personality.types.d.ts",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.d.ts",
      "nexusv3-deploy/dist/types/personality.types.d.ts",
      "nexusv3/dist/types/personality.types.d.ts",
      "nexus/dist/types/personality.types.d.ts"
    ],
    "3987dadc6ffe900b233c1e3f887c723e": [
      "nexus2/nexus2/runtime/dist/types/personality.types.js",
      "nexus2/nexus2/runtime/nexus-v2.0-complete_20251007_043832/dist/types/personality.types.js",
      "nexusv3-deploy/dist/types/personality.types.js",
      "nexusv3/dist/types/personality.types.js",
      "nexus/dist/types/personality.types.js"
    ],
    "c7eae2eb2911bf31c147b04e9e5a9996": [
      "nexusv3-deploy/README.md",
      "nexusv3/README.md",
      "nexus/README.md"
    ],
    "d1fb3aa101dd72eb5ed7febf2c7db957": [
      "nexusv3-deploy/INSTALL.md",
      "nexusv3/INSTALL.md",
      "nexus/INSTALL.md"
    ],
    "3178761c3fa0c7d8f4769e9969eef6ee": [
      "nexusv3-deploy/MANIFEST.md",
      "nexusv3/MANIFEST.md",
      "nexus/MANIFEST.md"
    ],
    "e4e6f0dd8fea73f8ad42a40ffbb517f6": [
      "nexusv3-deploy/package-lock.json",
      "nexusv3/package-lock.json"
    ],
    "a3e9c20e63b65eda4f1a0be8b7cb1676": [
      "nexusv3-deploy/package.json",
      "nexusv3/package.json"
    ],
    "ed27937f0044681e9e3e5e97a4c8bc6e": [
      "nexusv3-deploy/consciousness/enhancement-history.json",
      "nexusv3/consciousness/enhancement-history.json",
      "nexus/consciousness/enhancement-history.json"
    ],
    "f0387581a7726cf8b7c6337434b0c730": [
      "nexusv3-deploy/dist/consciousness/enhancement-history.json",
      "nexus/dist/consciousness/enhancement-history.json"
    ]
  },
  "statistics": {
    "ts_files": 176,
    "js_files": 187,
    "json_files": 274,
    "md_files": 104,
    "personality_profiles": 137,
    "total_functions": 5058,
    "total_classes": 371,
    "total_interfaces": 681,
    "total_types": 59
  }
}